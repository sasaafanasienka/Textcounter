{"version":3,"sources":["images/delete_icon.svg","images/copy_icon.svg","images/paste_icon.svg","js/constants.js","js/utilits.js","js/localStorage.js","components/EditButton/EditButton.js","components/PopupMessage/PopupMessage.js","components/Text/Text.js","js/api.js","images/fish.svg","components/TextGenerator/TextGenerator.js","components/Stat/Stat.js","components/ToolBar/ToolBar.js","images/logo.svg","components/RecycleItem/RecycleItem.js","images/recycle.svg","components/RecycleBin/RecycleBin.js","components/RecycleButton/RecycleButton.js","images/logo_fb.svg","images/logo_github.svg","images/logo_linkedin.svg","images/logo_telegram.svg","components/Footer/Footer.js","components/MainContent/MainContent.js","App.js","reportWebVitals.js","index.js"],"names":["months","showPopupMessage","x","y","message","messageColor","popup","document","querySelector","classList","add","window","innerWidth","style","left","right","innerHeight","top","bottom","color","innerText","remove","setTimeout","LocalStorage","property","localStorage","removeItem","setItem","JSON","stringify","undefined","recycle","parse","addToRecycle","console","log","itemForRecycle","this","makeItemForRecycle","recycleContent","checkLocalStorage","deleteTime","toString","data","content","loadFrom","loadTo","newLocalStorage","EditButton","props","clearTextArea","bind","pasteInTextArea","copyTextArea","state","icon","deleteIcon","action","copyIcon","pasteIcon","dataForRecycle","deletedText","current","Date","currentDate","getDate","currentMonth","getMonth","currentYear","getFullYear","currentHours","getHours","currentMinutes","getMinutes","currentMiliSeconds","textTitle","length","slice","concat","deletedPhrase","title","text","textLength","value","addTo","onChangeText","onChangeInRecycle","event","navigator","clipboard","writeText","clientX","clientY","readText","then","className","functionToAction","isActive","type","onClick","src","alt","React","Component","PopupMessage","Text","timerId","statCount","clearTimeout","opacity","setState","onChange","placeholder","Api","template","fetch","res","status","json","result","TextGenerator","popupWasShown","textGen","editText","showPopup","editedText","replace","request","catch","showPopupFunc","onMouseEnter","fishicon","Stat","toLowerCase","split","filter","item","symbolsCount","wordsCount","paragraphsCount","ToolBar","isTextAreaHasContent","isClibBoardHasContent","RecycleItem","key","keyProp","time","recover","refresh","deleteItem","RecycleBin","itemsInRecycle","closeAfterMouseLeaving","stopClosing","renderAllItems","renderItem","itemsDOM","push","Object","keys","onMouseLeave","RecycleButton","showRecycleBin","recycleicon","Footer","href","facebookLogo","githubLogo","linkedinLogo","telegramLogo","MainContent","valueOfTextArea","newRecycleData","headerLogo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e18efa0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/delete_icon.bce6056c.svg\";","export default __webpack_public_path__ + \"static/media/copy_icon.e7765d1b.svg\";","export default __webpack_public_path__ + \"static/media/paste_icon.661daeb2.svg\";","export const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']","import { months } from './constants'\r\n\r\nexport function showPopupMessage(x, y, message, messageColor) {\r\n    // console.log(window.innerWidth)\r\n    // console.log(window.innerHeight)\r\n    // console.log(x, y)\r\n    const popup = document.querySelector('.popup-message')\r\n    popup.classList.add('popup-message_active');\r\n\r\n    if (window.innerWidth / 2 > x) {\r\n        popup.style.left = `${x}px`\r\n    } else {\r\n        popup.style.right = `${window.innerWidth - x}px`\r\n    }\r\n    if (window.innerHeight / 2 > y) {\r\n        popup.style.top = `${y}px`\r\n    } else {\r\n        popup.style.bottom = `${window.innerHeight - y}px`\r\n    }\r\n    popup.style.color = messageColor\r\n    popup.innerText = message\r\n    popup.classList.remove('popup-message_unactive');\r\n    setTimeout(() => {\r\n        popup.classList.add('popup-message_unactive');\r\n        popup.classList.remove('popup-message_active');\r\n    }, 3000)\r\n}\r\n\r\nexport function makeItemForRecycle(deletedText) {\r\n    const current = new Date();\r\n    const currentDate = current.getDate();\r\n    const currentMonth = months[current.getMonth()];\r\n    const currentYear = current.getFullYear();\r\n    const currentHours = current.getHours();\r\n    const currentMinutes = current.getMinutes();\r\n    const currentMiliSeconds = Date.parse(current);\r\n    let textTitle = '';\r\n    if (deletedText.length > 15) {\r\n        textTitle = deletedText.slice(0, 15).concat('...')\r\n    } else {\r\n        textTitle = deletedText\r\n    }\r\n    return {\r\n        deleteTime: currentMiliSeconds,\r\n        deletedPhrase: `Удалено ${currentDate} ${currentMonth} ${currentYear}г. в ${currentHours}:${currentMinutes}`,       \r\n        title: textTitle,\r\n        text: deletedText,\r\n        textLength: deletedText.length     \r\n    }\r\n}","export class LocalStorage {\r\n\r\n    remove(property) {\r\n        localStorage.removeItem(property)\r\n        localStorage.setItem([property], JSON.stringify({}))\r\n    }\r\n\r\n    checkLocalStorage() {\r\n        // localStorage.clear()\r\n        if (localStorage.recycle === undefined) {\r\n            localStorage.setItem('recycle', JSON.stringify({}))\r\n        } \r\n        // console.log(JSON.parse(localStorage.recycle))\r\n        return JSON.parse(localStorage.recycle)\r\n    }\r\n\r\n    loadToLocalStorage(addToRecycle) {\r\n        console.log(localStorage)\r\n        const itemForRecycle = this.makeItemForRecycle(addToRecycle)\r\n        let recycleContent = this.checkLocalStorage()\r\n        const nameForDeletedItem = itemForRecycle.deleteTime.toString()\r\n        recycleContent[nameForDeletedItem] = itemForRecycle\r\n        localStorage.setItem('recycle', JSON.stringify(recycleContent));\r\n        console.log(localStorage)\r\n    }\r\n\r\n    addTo(property, data) {\r\n        let content = this.loadFrom(property)\r\n        const nameForDeletedItem = data.deleteTime.toString()\r\n        content[nameForDeletedItem] = data\r\n        this.loadTo(property, content)\r\n    }\r\n\r\n    loadTo(property, content) {\r\n        localStorage.setItem(property, JSON.stringify(content));\r\n        console.log(`${property} changed`)\r\n        console.log(JSON.parse(localStorage[property]))\r\n    }\r\n\r\n    loadFrom(property) {\r\n                // localStorage.clear()\r\n        // console.log(`try to load data from ${property}`)\r\n        if (localStorage[property] === undefined) {\r\n            localStorage.setItem([property], JSON.stringify({}))\r\n        } \r\n        return JSON.parse(localStorage[property])\r\n    }\r\n};\r\n\r\nexport default LocalStorage\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport deleteIcon from '../../images/delete_icon.svg'\r\nimport copyIcon from '../../images/copy_icon.svg'\r\nimport pasteIcon from '../../images/paste_icon.svg'\r\nimport { makeItemForRecycle, showPopupMessage } from '../../js/utilits'\r\nimport LocalStorage from '../../js/localStorage'\r\nimport './edit-button.scss'\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass EditButton extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.clearTextArea = this.clearTextArea.bind(this); //это требуется чтобы не потерять котекст\r\n        this.pasteInTextArea = this.pasteInTextArea.bind(this); //это требуется чтобы не потерять котекст\r\n        this.copyTextArea = this.copyTextArea.bind(this); //это требуется чтобы не потерять котекст\r\n    \r\n        this.state = {\r\n            'delete' : {icon: deleteIcon, action: this.clearTextArea},\r\n            'copy' : {icon: copyIcon, action: this.copyTextArea},\r\n            'paste' : {icon: pasteIcon, action: this.pasteInTextArea},\r\n        };\r\n    }\r\n\r\n    clearTextArea() {\r\n        let textAreaContent = document.querySelector('.text__input').value\r\n        let dataForRecycle = makeItemForRecycle(textAreaContent)\r\n        newLocalStorage.addTo('recycle', dataForRecycle)\r\n        document.querySelector('.text__input').value = ''\r\n        this.props.onChangeText();\r\n        this.props.onChangeInRecycle();\r\n    }\r\n\r\n    copyTextArea(event) {\r\n        const text = document.querySelector('.text__input').value\r\n        navigator.clipboard.writeText(text);\r\n        showPopupMessage(event.clientX, event.clientY, 'Скопировано в буфер', 'green')\r\n    }\r\n\r\n    pasteInTextArea(event) {\r\n        navigator.clipboard.readText()\r\n        .then(text => {\r\n            document.querySelector('.text__input').value = text\r\n            this.props.onChangeText(text);\r\n        }).then(() => {\r\n            if (document.querySelector('.text__input').value.length === 0) {\r\n                showPopupMessage(event.clientX, event.clientY, 'ошибка, возможно в буфере находится не текст', 'red')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let className = 'edit-button'\r\n        let functionToAction = null\r\n        if (this.props.isActive === true) {\r\n            className = 'edit-button edit-button_active'\r\n            functionToAction = this.state[this.props.type].action\r\n        } \r\n\r\n        return(\r\n            <button className={className}>\r\n                <img className='edit-button__icon'\r\n                    onClick={functionToAction}\r\n                    src={this.state[this.props.type].icon} \r\n                    alt={this.props.type}>\r\n                </img>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditButton;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './popup-message.scss'\r\n\r\nclass PopupMessage extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <p className='popup-message popup-message_unactive'></p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PopupMessage;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './text.scss'\r\nimport EditButton from '../EditButton/EditButton';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\n\r\nclass Text extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            timerId: 0\r\n        }\r\n\r\n        this.statCount = this.statCount.bind(this); //это требуется чтобы не потерять котекст в statcount\r\n    }\r\n\r\n    statCount() {\r\n        clearTimeout(this.state.timerId)\r\n        document.querySelector('.stat__number').style.opacity = '0.3'\r\n        const timerId = setTimeout(() => {\r\n            this.props.onChangeText(document.querySelector('.text__input').value)\r\n            document.querySelector('.stat__number').style.opacity = '1'\r\n        }, 500)\r\n        this.setState({timerId: timerId})    \r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className='text'>\r\n                <textarea onChange={this.statCount} \r\n                        className='text__input' \r\n                        type=\"text\" \r\n                        placeholder=\"Ваш текст\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Text;","export class Api {\r\n\r\n    constructor() {\r\n        this.state = {\r\n            template: 'https://fish-text.ru/get?type=paragraph&number=50' \r\n        }\r\n    };\r\n\r\n    request() {\r\n\r\n        return fetch(this.state.template)\r\n            .then((res) => {\r\n                console.log(`Status of API request ${res.status}`)\r\n                return res.json()\r\n            })\r\n            .then((result) => {\r\n                return result;\r\n            })\r\n    };\r\n\r\n}","export default __webpack_public_path__ + \"static/media/fish.51d9f3be.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Api } from '../../js/api';\r\nimport { alphabet } from '../../js/constants';\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport fishicon from '../../images/fish.svg'\r\nconst api = (template) => new Api(template);\r\n\r\n\r\nclass TextGenerator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popupWasShown: false\r\n        }\r\n\r\n        this.statCount = this.statCount.bind(this); //это требуется чтобы не потерять котекст в statcount\r\n        this.textGen = this.textGen.bind(this); //это требуется чтобы не потерять котекст в statcount\r\n        this.editText = this.editText.bind(this); //это требуется чтобы не потерять котекст в statcount\r\n        this.showPopup = this.showPopup.bind(this); //это требуется чтобы не потерять котекст в statcount\r\n    }\r\n\r\n    statCount() {\r\n        this.props.onChangeText(document.querySelector('.text__input').value); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    editText(text) {\r\n        const textToReplace = /\\\\n\\\\n/g\r\n        let editedText = text.replace(textToReplace, '\\n')\r\n        document.querySelector('.text__input').value = editedText\r\n        this.statCount()\r\n    }\r\n\r\n    textGen(event) {\r\n        api('standings').request()\r\n            .then((result) => {\r\n                this.editText(result.text)\r\n            })\r\n            .catch(() => {\r\n                console.log('Error in server request')\r\n                showPopupMessage(event.clientX, event.clientY, 'Ошибка запроса к серверу fish-text.ru', 'red')\r\n            })\r\n    }\r\n\r\n    showPopup(event) {\r\n        showPopupMessage(event.clientX, event.clientY, 'генерировать рыбный текст', 'black')\r\n        this.setState({popupWasShown: true})\r\n        setTimeout(() => {\r\n            this.setState({popupWasShown: false})\r\n        }, 60000)\r\n    }\r\n\r\n    render() {\r\n        let showPopupFunc = this.showPopup\r\n        if (this.state.popupWasShown === true) {\r\n            showPopupFunc = null;\r\n        }\r\n        return(\r\n                <button onClick={this.textGen} onMouseEnter={showPopupFunc} className='button text-generator'>\r\n                    <img className='button__icon' src={fishicon} alt='fish icon'></img>\r\n                </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextGenerator;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stat.scss'\r\nimport '../../styles/main.scss'\r\nimport { alphabet } from '../../js/constants'\r\nimport TextGenerator from '../TextGenerator/TextGenerator'\r\n\r\nclass Stat extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    // statCount(valueOfTextAtea) {\r\n    //     this.setState ({text: valueOfTextAtea})\r\n    // }\r\n\r\n    symbolsCount() {\r\n        const text = this.props.text\r\n        return text.length\r\n    }\r\n\r\n    wordsCount() {\r\n        const paragraphSymbol = /\\n/g\r\n        const text = this.props.text.toLowerCase().replace(paragraphSymbol, ' ')\r\n        const words = text.split(' ').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return words      \r\n    }\r\n\r\n    paragraphsCount() {\r\n        const text = this.props.text\r\n        const paragraphs = text.split('\\n').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return paragraphs.length      \r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className='stat'>\r\n                <p className='stat__number'>{this.symbolsCount()} знаков</p>\r\n                <p className='stat__number'>{this.wordsCount().length} слов</p>\r\n                <p className='stat__number'>{this.paragraphsCount()} абзацев</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Stat;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './toolbar.scss'\r\nimport EditButton from '../EditButton/EditButton';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\n\r\n\r\nclass ToolBar extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {};\r\n        this.onChangeText = this.onChangeText.bind(this); //это требуется чтобы не потерять котекст в onChangeText\r\n        this.onChangeInRecycle = this.onChangeInRecycle.bind(this); //это требуется чтобы не потерять котекст в onChangeText\r\n    }\r\n\r\n    onChangeText() {\r\n        this.props.onChangeText(document.querySelector('.text__input').value); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    onChangeInRecycle() {\r\n        console.log('toolbar on change in recycle')\r\n        this.props.onChangeInRecycle(); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    render() {\r\n\r\n        let isTextAreaHasContent = true\r\n        let isClibBoardHasContent = true\r\n        if (this.props.text.length === 0) {\r\n            isTextAreaHasContent = false\r\n        }\r\n        navigator.clipboard.readText()\r\n        .then(text => {\r\n            if (text.length === 0) {\r\n                isClibBoardHasContent = false\r\n            }    \r\n        })\r\n        \r\n        return(\r\n            <div className='toolbar'>\r\n                <EditButton type='delete' isActive={isTextAreaHasContent} onChangeText={this.onChangeText} onChangeInRecycle={this.onChangeInRecycle}/>\r\n                <EditButton type='copy' isActive={isTextAreaHasContent} onChangeText={this.onChangeText}/>\r\n                <EditButton type='paste' isActive={isClibBoardHasContent} onChangeText={this.onChangeText}/>\r\n                <PopupMessage />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolBar;","export default __webpack_public_path__ + \"static/media/logo.4bebe4f2.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './recycle-item.scss'\r\nimport LocalStorage from '../../js/localStorage'\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass RecycleItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            key: this.props.keyProp,\r\n            title: this.props.title,\r\n            time: this.props.time,\r\n            length: this.props.length        \r\n        }\r\n\r\n        this.recover = this.recover.bind(this)\r\n        this.refresh = this.refresh.bind(this)\r\n        this.deleteItem = this.deleteItem.bind(this)\r\n    }\r\n\r\n    refresh() {\r\n        this.props.onChangeInRecycle();\r\n    }\r\n\r\n    recover() {\r\n        console.log(1)\r\n        const recycle = JSON.parse(localStorage.recycle)\r\n        document.querySelector('.text__input').value = recycle[this.state.key].text\r\n        this.refresh();\r\n    }\r\n\r\n    deleteItem() {\r\n        const recycleContent = newLocalStorage.loadFrom('recycle')\r\n        delete recycleContent[this.state.key]\r\n        newLocalStorage.loadTo('recycle', recycleContent)\r\n        this.refresh();\r\n    }\r\n    \r\n    render() {\r\n        const key = this.props.keyProp\r\n        const title = this.props.title\r\n        const time = this.props.time\r\n        const length = this.props.length\r\n\r\n        return (\r\n            <div className='recycle-item' key={key}>\r\n                <button  className='recycle-item__button' onClick={this.recover}>\r\n                    <p className='recycle-item__title'>{title}</p>\r\n                    <p className='recycle-item__subtitle'>{length} знаков</p>\r\n                    <p className='recycle-item__subtitle'>{time}</p>\r\n                </button>\r\n                <button className='recycle-item__delete-button' onClick={this.deleteItem}>\r\n                    X\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RecycleItem;","export default __webpack_public_path__ + \"static/media/recycle.e52d6c54.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './recycle-bin.scss'\r\nimport LocalStorage from '../../js/localStorage'\r\n// import RecycleClearButton from '../RecycleClearButton/RecycleClearButton';\r\nimport RecycleItem from '../RecycleItem/RecycleItem';\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass RecycleBin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            recycleContent: this.props.itemsInRecycle,\r\n            timerId: 0\r\n        }\r\n\r\n        this.closeAfterMouseLeaving = this.closeAfterMouseLeaving.bind(this)\r\n        this.stopClosing = this.stopClosing.bind(this)\r\n        this.renderAllItems = this.renderAllItems.bind(this)\r\n        this.renderItem = this.renderItem.bind(this)\r\n        this.refresh = this.refresh.bind(this)\r\n    }\r\n\r\n    refresh() {\r\n        this.props.onChangeInRecycle();\r\n    }\r\n\r\n    renderAllItems() {\r\n        const recycle = this.props.itemsInRecycle\r\n\r\n\r\n        let itemsDOM = [];\r\n        for (let item in recycle) {\r\n\r\n            itemsDOM.push(this.renderItem(recycle[item].deleteTime, recycle[item].title, recycle[item].deletedPhrase, recycle[item].textLength))\r\n        }\r\n        return itemsDOM\r\n    }\r\n\r\n    renderItem(key, title, time, length) {\r\n        return (\r\n            <RecycleItem keyProp={key} title={title} time={time} length={length} onChangeInRecycle={this.refresh}/>\r\n        )\r\n    }\r\n\r\n    stopClosing() {\r\n        clearTimeout(this.state.timerId)\r\n    }\r\n\r\n    closeAfterMouseLeaving() {\r\n        const timerId = setTimeout(() => {\r\n            document.querySelector('.recycle-bin').classList.remove('recycle-bin_active')\r\n        }, 500)\r\n        this.setState({timerId: timerId})\r\n    }\r\n\r\n    render() {\r\n        let title = 'корзина'\r\n        if (Object.keys(this.props.itemsInRecycle).length === 0) {\r\n            title = 'корзина пуста'\r\n        }\r\n\r\n        return(\r\n            <div className='recycle-bin' onMouseLeave={this.closeAfterMouseLeaving} onMouseEnter={this.stopClosing}>\r\n                <p className='recycle-bin__title'>{title}</p>\r\n                {this.renderAllItems()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecycleBin;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './recycle-button.scss'\r\nimport LocalStorage from '../../js/localStorage'\r\nimport RecoverButton from '../RecycleItem/RecycleItem';\r\n\r\nimport recycleicon from '../../images/recycle.svg'\r\nimport RecycleBin from '../RecycleBin/RecycleBin';\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass RecycleButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            recycleContent: this.props.itemsInRecycle\r\n        }\r\n\r\n        this.showRecycleBin = this.showRecycleBin.bind(this)\r\n    }\r\n\r\n    showRecycleBin() {\r\n        document.querySelector('.recycle-bin').classList.add('recycle-bin_active')\r\n    }\r\n\r\n    render() {\r\n            return(\r\n                <button className='recycle-button' onClick={this.showRecycleBin}>\r\n                    <img className='button__icon' src={recycleicon} alt='recycle icon'></img>\r\n                    <div className='recycle-button__items-counter'>{Object.keys(this.props.itemsInRecycle).length}</div>\r\n                </button>\r\n            )\r\n    }\r\n}\r\n\r\nexport default RecycleButton;","export default __webpack_public_path__ + \"static/media/logo_fb.903c5c0f.svg\";","export default __webpack_public_path__ + \"static/media/logo_github.e72b7d98.svg\";","export default __webpack_public_path__ + \"static/media/logo_linkedin.fddf28f9.svg\";","export default __webpack_public_path__ + \"static/media/logo_telegram.698c9376.svg\";","import React from 'react';\r\nimport './Footer.scss';\r\nimport facebookLogo from '../../images/logo_fb.svg'\r\nimport githubLogo from '../../images/logo_github.svg'\r\nimport linkedinLogo from '../../images/logo_linkedin.svg'\r\nimport telegramLogo from '../../images/logo_telegram.svg'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p className='footer__text'>Александр Афанасенко, 2020</p>\r\n      <div className='footer__social-links'>\r\n        <a className='footer__icon-link' href=\"https://www.facebook.com/sasaafanasienka\">\r\n            <img src={facebookLogo} alt=\"Facebook logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://github.com/sasaafanasienka\">\r\n            <img src={githubLogo} alt=\"Facebook logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://www.linkedin.com/in/александр-афанасенко-bb672b15a/\">\r\n            <img src={linkedinLogo} alt=\"LinkedIn logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://t.me/sanya2020327\">\r\n            <img src={telegramLogo} alt=\"telegram logo\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Text from '../Text/Text';\r\nimport Stat from '../Stat/Stat';\r\nimport './main-content.scss'\r\nimport ToolBar from '../ToolBar/ToolBar';\r\nimport TextGenerator from '../TextGenerator/TextGenerator';\r\nimport headerLogo from '../../images/logo.svg';\r\nimport RecycleButton from '../RecycleButton/RecycleButton';\r\nimport RecycleBin from '../RecycleBin/RecycleBin';\r\nimport LocalStorage from '../../js/localStorage';\r\nimport Footer from '../Footer/Footer'\r\n\r\nconst newLocalStorage = new LocalStorage()\r\n\r\nclass MainContent extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.onChangeText = this.onChangeText.bind(this);\r\n        this.onChangeInRecycle = this.onChangeInRecycle.bind(this);\r\n        \r\n        if (localStorage.recycle === undefined) { //создаем корзину если она еще не создана\r\n            newLocalStorage.loadTo('recycle', {}) \r\n        }\r\n        \r\n        this.state = {\r\n            text: '',\r\n            recycle: newLocalStorage.loadFrom('recycle')            \r\n        };\r\n      }\r\n\r\n    onChangeText(valueOfTextArea) {\r\n        this.setState({\r\n            text: valueOfTextArea\r\n        })\r\n    }\r\n\r\n    onChangeInRecycle() {\r\n        const newRecycleData = newLocalStorage.loadFrom('recycle');\r\n        this.setState({\r\n            recycle: newRecycleData\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log('MainContent render')\r\n        console.log(`В корзине ${Object.keys(this.state.recycle).length} объектов`)\r\n        const recycleContent = this.state.recycle\r\n\r\n        return(\r\n            <div className='main-content'>\r\n                <div className='main-content__toolbar'>\r\n                    <img className='main-content__logo' alt='app logo' src={headerLogo} />\r\n                    <Stat text={this.state.text} onChangeText={this.onChangeText}/>\r\n                    <TextGenerator onChangeText={this.onChangeText}/>\r\n                    <RecycleButton itemsInRecycle={recycleContent} onChangeInRecycle={this.onChangeInRecycle}/>\r\n                </div>\r\n                <RecycleBin itemsInRecycle={recycleContent} onChangeInRecycle={this.onChangeInRecycle}/>\r\n                <Text onChangeText={this.onChangeText} text={this.state.text}/>\r\n                <ToolBar onChangeText={this.onChangeText} onChangeInRecycle={this.onChangeInRecycle} text={this.state.text}/>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainContent;","import './App.scss';\r\nimport MainContent from './components/MainContent/MainContent';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MainContent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './styles/variables.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}