{"version":3,"sources":["redux/types.js","redux/textReducer.js","redux/themeReducer.js","js/localStorage.js","redux/rootReducer.js","js/utilits/themeClassNameGen.js","redux/actions.js","components/Text/Text.js","js/utilits/themeClassName.js","components/PopupMessage/PopupMessage.js","images/paste_icon_light.svg","images/paste_icon_dark.svg","js/utilits.js","components/ToolButton/ToolButton.js","js/constants.js","components/ToolPaste/ToolPaste.js","images/copy_icon_light.svg","images/copy_icon_dark.svg","components/ToolCopy/ToolCopy.js","images/delete_icon_light.svg","images/delete_icon_dark.svg","components/ToolClear/ToolClear.js","images/darktheme_icon.svg","images/lighttheme_icon.svg","components/ToggleTheme/ToggleTheme.js","components/ToolBar/ToolBar.js","images/logo_fb_light.svg","images/logo_github_light.svg","images/logo_linkedin_light.svg","images/logo_telegram_light.svg","images/logo_fb_dark.svg","images/logo_github_dark.svg","images/logo_linkedin_dark.svg","images/logo_telegram_dark.svg","components/Footer/Footer.js","components/Main/Main.js","js/utilits/rightWord.js","components/Stat/Stat.js","images/fish.svg","components/Button/Button.js","components/TextGenerator/TextGenerator.js","images/logo.svg","images/logo_dark.svg","components/Header/Header.js","images/avatar.jpg","images/logo_avatar.svg","js/aboutData.js","components/About/About.js","images/error_avatar.svg","components/Error/Error.js","App.js","index.js"],"names":["TOGGLE_THEME","CHANGE_TEXT","AXIOS_TEXT","initialState","text","localStorage","defaultTheme","JSON","parse","getItem","setItem","stringify","theme","check","rootReducer","combineReducers","state","action","type","newTheme","set","payLoad","themeClassNameGen","themeName","baseClassName","changeText","Text","props","sendTextToState","bind","event","this","target","value","inputClassName","className","onChange","placeholder","React","Component","mapReduceToProps","connect","themeClassName","themeProperties","id","modifierClass","messageClassName","showPopupMessage","x","y","message","messageColor","popup","document","querySelector","classList","add","window","innerWidth","style","left","right","innerHeight","top","bottom","color","innerText","remove","setTimeout","ToolButton","functionToAction","isActive","onClick","src","icon","alt","popupColors","pasteIcon","pasteIconLight","pasteIconDark","isClibBoardHasContent","navigator","clipboard","readText","then","length","clientX","clientY","isTextAreaHasContent","copyIcon","copyIconLight","copyIconDark","writeText","deleteIcon","deleteIconLight","deleteIconDark","mapDispatchToProps","toggleTheme","switchToDark","switchToLight","facebookLogo","githubLogo","linkedinLogo","telegramLogo","textClassName","facebookLogoLight","githubLogoLight","linkedinLogoLight","telegramLogoLight","facebookLogoDark","githubLogoDark","linkedinLogoDark","telegramLogoDark","to","href","wordExamples","firstGroup","secondGroup","rightWord","number","word","baseNumber","toString","slice","concat","includes","numbersClassName","toLowerCase","replace","split","filter","item","Button","buttonClassName","background","iconClassName","iconRender","counter","TextGenerator","dispatch","useDispatch","useSelector","a","axios","get","response","data","textToReplace","fishicon","logoImport","headerLogo","headerLogo_dark","classNameByTheme","onlyLogo","onChangeText","aboutData","title","subtitle","minisubtitle1","text1","minisubtitle2","text2","minisubtitle3","text3","minisubtitle4","text4","minisubtitle5","text5","avatar","content","avatarAuthor","avatarProject","errorImage","App","exact","path","store","createStore","applyMiddleware","thunk","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.85121966.chunk.js","sourcesContent":["export const TOGGLE_THEME = 'TOGGLE_THEME'\r\nexport const CHANGE_TEXT = 'CHANGE_TEXT'\r\nexport const AXIOS_TEXT = 'AXIOS_TEXT'","import { AXIOS_TEXT, CHANGE_TEXT } from \"./types\"\r\n\r\nconst initialState = {\r\n    text: ''\r\n}\r\n\r\nexport const textReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case CHANGE_TEXT:\r\n            return {text: action.payLoad}\r\n        case AXIOS_TEXT:\r\n            return {text: action.payLoad}\r\n        default:\r\n            return state\r\n    }\r\n}","import LocalStorage from \"../js/localStorage\"\r\nimport { TOGGLE_THEME } from \"./types\"\r\n\r\nconst localStorage = new LocalStorage()\r\n\r\nconst initialState = {\r\n    theme: localStorage.check()\r\n}\r\n\r\nexport const themeReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case TOGGLE_THEME:\r\n            const newTheme = state.theme === 'light' ? 'dark' : 'light'\r\n            localStorage.set(newTheme)\r\n            return {theme: newTheme}\r\n        default:\r\n            return state\r\n    }\r\n}","export class LocalStorage {\r\n\r\n    check() {\r\n        const defaultTheme = JSON.parse(localStorage.getItem('defaultTheme'))\r\n        if (defaultTheme) {\r\n            return defaultTheme\r\n        } else { //если такого свойства не сущетсвует\r\n            localStorage.setItem('defaultTheme', JSON.stringify('light')) //то его надо создать и присвоить значение по умолчанию\r\n            return localStorage.getItem('defaultTheme')\r\n        } \r\n    }\r\n\r\n    set(theme) {\r\n        localStorage.setItem('defaultTheme', JSON.stringify(theme))\r\n    }\r\n    \r\n};\r\n\r\nexport default LocalStorage\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { textReducer } from \"./textReducer\";\r\nimport { themeReducer } from \"./themeReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    theme: themeReducer,\r\n    text: textReducer\r\n})","export function themeClassNameGen(themeName, baseClassName) {\r\n    if (themeName === 'light') {\r\n        return baseClassName\r\n    } else {\r\n        return `${baseClassName} ${baseClassName}_dark`\r\n    }\r\n}","import axios from \"axios\";\r\nimport { AXIOS_TEXT, TOGGLE_THEME } from \"./types\";\r\nimport { CHANGE_TEXT } from \"./types\";\r\nconst API = 'https://fish-text.ru/get?type=paragraph&number=10'\r\n\r\nexport function toggleTheme() {\r\n    return {\r\n        type: TOGGLE_THEME\r\n    }\r\n}\r\n\r\nexport function changeText(text) {\r\n    return {\r\n        type: CHANGE_TEXT,\r\n        payLoad: text\r\n    }\r\n}\r\n\r\nexport function axiosText(text) {\r\n    return async dispatch => {\r\n        const response = await axios.get(API)\r\n        let text = response.data.text\r\n        const textToReplace = /\\\\n\\\\n/g\r\n        text = text.replace(textToReplace, '\\n')\r\n        dispatch({\r\n            type: AXIOS_TEXT,\r\n            payLoad: text\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { themeClassNameGen } from '../../js/utilits/themeClassNameGen';\r\nimport { connect } from 'react-redux';\r\nimport { changeText } from '../../redux/actions';\r\nimport './text.scss'\r\n\r\nclass Text extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.sendTextToState = this.sendTextToState.bind(this)\r\n    }\r\n    \r\n    sendTextToState(event) {\r\n        this.props.changeText(event.target.value)\r\n    }\r\n    \r\n    render() {\r\n        const inputClassName = themeClassNameGen(this.props.theme, 'text__input')\r\n        return(\r\n            <div className='text'>\r\n                <textarea onChange={this.sendTextToState}\r\n                        className={inputClassName} \r\n                        type=\"text\" \r\n                        placeholder=\"Ваш текст\" \r\n                        value={this.props.text} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme,\r\n        text: state.text.text\r\n    }\r\n}\r\n\r\nconst mapReduceToProps = {\r\n    changeText: changeText\r\n}\r\n\r\nexport default connect(mapStateToProps, mapReduceToProps)(Text);","export function themeClassName(themeProperties, baseClassName) {\r\n    if (themeProperties.id === 0) {\r\n        return baseClassName\r\n    } else {\r\n        return `${baseClassName} ${baseClassName}${themeProperties.modifierClass}`\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\n\r\nimport './popup-message.scss'\r\n\r\nfunction PopupMessage(props) {\r\n\r\n    const messageClassName = themeClassName(props.theme, 'popup-message')\r\n\r\n    return(\r\n        <p className={`${messageClassName} popup-message_unactive`}></p>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PopupMessage);","export default __webpack_public_path__ + \"static/media/paste_icon_light.18612f4a.svg\";","export default __webpack_public_path__ + \"static/media/paste_icon_dark.f6ac4c9b.svg\";","export function showPopupMessage(x, y, message, messageColor) {\r\n    // console.log(window.innerWidth)\r\n    // console.log(window.innerHeight)\r\n    // console.log(x, y)\r\n    const popup = document.querySelector('.popup-message')\r\n    popup.classList.add('popup-message_active');\r\n\r\n    if (window.innerWidth / 2 > x) {\r\n        popup.style.left = `${x}px`\r\n    } else {\r\n        popup.style.right = `${window.innerWidth - x}px`\r\n    }\r\n    if (window.innerHeight / 2 > y) {\r\n        popup.style.top = `${y}px`\r\n    } else {\r\n        popup.style.bottom = `${window.innerHeight - y}px`\r\n    }\r\n    popup.style.color = messageColor\r\n    popup.innerText = message\r\n    popup.classList.remove('popup-message_unactive');\r\n    setTimeout(() => {\r\n        popup.classList.add('popup-message_unactive');\r\n        popup.classList.remove('popup-message_active');\r\n    }, 3000)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tool-button.sass'\r\n\r\nclass ToolButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        let className = 'tool-button'\r\n        let functionToAction = null\r\n        if (this.props.isActive === true) {\r\n            className = 'tool-button tool-button_active'\r\n            functionToAction = this.props.onClick\r\n        } \r\n\r\n        return(\r\n            <button className={className} onClick={functionToAction}>\r\n                <img className='tool-button__icon'\r\n                    src={this.props.icon} \r\n                    alt={this.props.type}>\r\n                </img>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolButton;","export const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\r\n\r\nexport const popupColors = {\r\n    green: '#00ba00',\r\n    red: '#FF0000'\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport pasteIconLight from '../../images/paste_icon_light.svg'\r\nimport pasteIconDark from '../../images/paste_icon_dark.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { popupColors } from '../../js/constants';\r\nimport { connect } from 'react-redux';\r\nimport { changeText } from '../../redux/actions';\r\n\r\nfunction ToolPaste(props) {\r\n   \r\n    const pasteIcon = props.theme === 'light' ? pasteIconLight : pasteIconDark\r\n\r\n    let isClibBoardHasContent = true\r\n  \r\n    navigator.clipboard.readText()\r\n        .then(text => {\r\n            if (text.length === 0) {\r\n                isClibBoardHasContent = false\r\n            }    \r\n        })\r\n\r\n    function pasteInTextArea(event) {\r\n        navigator.clipboard.readText()\r\n            .then(text => {\r\n                props.changeText(text)\r\n            }).then(() => {\r\n                if (document.querySelector('.text__input').value.length === 0) {\r\n                    showPopupMessage(event.clientX, event.clientY, 'ошибка, возможно в буфере находится не текст', popupColors.red)\r\n                }\r\n            })\r\n    }\r\n    \r\n    return (\r\n        <ToolButton \r\n            type='paste'\r\n            icon={pasteIcon}\r\n            isActive={isClibBoardHasContent}\r\n            onClick={pasteInTextArea}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nconst mapReduceToProps = {\r\n    changeText: changeText\r\n}\r\n\r\nexport default connect(mapStateToProps, mapReduceToProps)(ToolPaste);","export default __webpack_public_path__ + \"static/media/copy_icon_light.b7b0ee85.svg\";","export default __webpack_public_path__ + \"static/media/copy_icon_dark.2bd53001.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport copyIconLight from '../../images/copy_icon_light.svg'\r\nimport copyIconDark from '../../images/copy_icon_dark.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { popupColors } from '../../js/constants';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ToolCopy(props) {\r\n\r\n    const isTextAreaHasContent = props.text.length === 0 ? false : true\r\n    const copyIcon = props.theme === 'light' ? copyIconLight : copyIconDark\r\n\r\n    function copyTextArea(event) {\r\n        const text = document.querySelector('.text__input').value\r\n        navigator.clipboard.writeText(text);\r\n        showPopupMessage(event.clientX, event.clientY, 'Скопировано в буфер', popupColors.green)\r\n    }\r\n\r\n    return (\r\n        <ToolButton \r\n            type='copy'\r\n            icon={copyIcon}\r\n            isActive={isTextAreaHasContent}\r\n            onClick={copyTextArea}\r\n        />\r\n    )\r\n    \r\n}\r\n    \r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme,\r\n        text: state.text.text\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolCopy);","export default __webpack_public_path__ + \"static/media/delete_icon_light.db3a8767.svg\";","export default __webpack_public_path__ + \"static/media/delete_icon_dark.a62aca89.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport deleteIconLight from '../../images/delete_icon_light.svg'\r\nimport deleteIconDark from '../../images/delete_icon_dark.svg'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { connect } from 'react-redux';\r\nimport { changeText } from '../../redux/actions';\r\n\r\nfunction ToolClear(props) {\r\n\r\n    const deleteIcon = props.theme === 'light' ? deleteIconLight : deleteIconDark\r\n    const isTextAreaHasContent = props.text.length === 0 ? false : true\r\n\r\n    function clearTextArea() {\r\n        props.changeText('');\r\n    }\r\n\r\n    return (\r\n        <ToolButton \r\n            type='clear text area'\r\n            icon={deleteIcon}\r\n            isActive={isTextAreaHasContent}\r\n            onClick={clearTextArea}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme,\r\n        text: state.text.text\r\n    }\r\n}\r\n\r\nconst mapReduceToProps = {\r\n    changeText: changeText\r\n}\r\n\r\nexport default connect(mapStateToProps, mapReduceToProps)(ToolClear);","export default __webpack_public_path__ + \"static/media/darktheme_icon.5712200e.svg\";","export default __webpack_public_path__ + \"static/media/lighttheme_icon.e321a497.svg\";","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport switchToDark from '../../images/darktheme_icon.svg'\r\nimport switchToLight from '../../images/lighttheme_icon.svg'\r\nimport { connect } from 'react-redux';\r\nimport { toggleTheme } from '../../redux/actions';\r\n\r\nfunction ToggleTheme(props) {\r\n\r\n    const icon = props.theme === 'light' ? switchToDark : switchToLight\r\n\r\n    function toggle() {\r\n        props.toggleTheme()\r\n    }\r\n\r\n    return(\r\n        <ToolButton \r\n            type='toggle theme'\r\n            icon={icon}\r\n            isActive = {true}\r\n            onClick={toggle}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    toggleTheme: toggleTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToggleTheme);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\nimport ToolPaste from '../ToolPaste/ToolPaste';\r\nimport ToolCopy from '../ToolCopy/ToolCopy';\r\nimport ToolClear from '../ToolClear/ToolClear';\r\nimport ToggleTheme from '../ToggleTheme/ToggleTheme';\r\nimport './toolbar.scss'\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ToolBar(props) {\r\n\r\n    return(\r\n        <div className='toolbar'>\r\n            <ToggleTheme />\r\n            <ToolCopy />\r\n            <ToolPaste />\r\n            <ToolClear />\r\n            <PopupMessage />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        text: state.text.text\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolBar);","export default __webpack_public_path__ + \"static/media/logo_fb_light.1b53cc59.svg\";","export default __webpack_public_path__ + \"static/media/logo_github_light.b54a62b8.svg\";","export default __webpack_public_path__ + \"static/media/logo_linkedin_light.89ce2e72.svg\";","export default __webpack_public_path__ + \"static/media/logo_telegram_light.c3f7acaa.svg\";","export default __webpack_public_path__ + \"static/media/logo_fb_dark.bbfc0d48.svg\";","export default __webpack_public_path__ + \"static/media/logo_github_dark.e9062407.svg\";","export default __webpack_public_path__ + \"static/media/logo_linkedin_dark.5e1d4a88.svg\";","export default __webpack_public_path__ + \"static/media/logo_telegram_dark.8e95b74e.svg\";","import React from 'react';\r\nimport './Footer.scss';\r\nimport facebookLogoLight from '../../images/logo_fb_light.svg'\r\nimport githubLogoLight from '../../images/logo_github_light.svg'\r\nimport linkedinLogoLight from '../../images/logo_linkedin_light.svg'\r\nimport telegramLogoLight from '../../images/logo_telegram_light.svg'\r\nimport facebookLogoDark from '../../images/logo_fb_dark.svg'\r\nimport githubLogoDark from '../../images/logo_github_dark.svg'\r\nimport linkedinLogoDark from '../../images/logo_linkedin_dark.svg'\r\nimport telegramLogoDark from '../../images/logo_telegram_dark.svg'\r\n\r\nimport { themeClassNameGen } from '../../js/utilits/themeClassNameGen';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Footer(props) {\r\n\r\n  const textClassName = themeClassNameGen(props.theme, 'footer__text')\r\n  let facebookLogo, githubLogo, linkedinLogo, telegramLogo\r\n  if (props.theme === 'light') {\r\n    facebookLogo = facebookLogoLight\r\n    githubLogo = githubLogoLight\r\n    linkedinLogo = linkedinLogoLight\r\n    telegramLogo = telegramLogoLight\r\n  } else {\r\n    facebookLogo = facebookLogoDark\r\n    githubLogo = githubLogoDark\r\n    linkedinLogo = linkedinLogoDark\r\n    telegramLogo = telegramLogoDark\r\n  }\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className='footer__text-links'>\r\n        <p className={`${textClassName} footer__copyright`}>&copy; Александр Афанасенко, 2021</p>\r\n        <Link className='footer__link' to=\"/about-author\"><p className={textClassName}>Об авторе</p></Link>\r\n        <Link className='footer__link' to=\"/about-project\"><p className={textClassName}>О проекте</p></Link>\r\n      </div>\r\n      <div className='footer__social-links'>\r\n        <a className='footer__icon-link' href=\"https://www.facebook.com/sasaafanasienka\">\r\n            <img src={facebookLogo} alt=\"Facebook logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://github.com/sasaafanasienka\">\r\n            <img src={githubLogo} alt=\"Facebook logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://www.linkedin.com/in/александр-афанасенко-bb672b15a/\">\r\n            <img src={linkedinLogo} alt=\"LinkedIn logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://t.me/sanya2020327\">\r\n            <img src={telegramLogo} alt=\"telegram logo\" />\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      theme: state.theme.theme\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Text from '../Text/Text';\r\nimport ToolBar from '../ToolBar/ToolBar';\r\nimport Footer from '../Footer/Footer'\r\nimport { themeClassNameGen } from '../../js/utilits/themeClassNameGen';\r\nimport { connect } from 'react-redux';\r\nimport './main.scss'\r\n\r\nfunction Main(props) {\r\n\r\n    return(\r\n        <div className={themeClassNameGen(props.theme, 'main')}>\r\n            <Text />\r\n            <ToolBar />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps)(Main);","const wordExamples  = {\r\n    'знак': ['знак', 'знака', 'знаков'],\r\n    'слово': ['слово', 'слова', 'слов'],\r\n    'абзац': ['абзац', 'абзаца', 'абзацев'],\r\n}\r\n\r\nconst firstGroup = ['01', '21', '31', '41', '51', '61', '71', '81', '91']\r\nconst secondGroup = ['02', '03', '04', '22', '23', '24', '32', '33', '34', '42', '43', '44', \r\n                    '52', '53', '54', '62', '63', '64', '72', '73', '74', '82', '83', '84', '92', '93', '94']\r\n\r\nexport function rightWord(number, word) {\r\n  let baseNumber = 0;\r\n  let rightWord = '';\r\n  if (number.toString().slice(-2).length < 2) {\r\n    baseNumber = '0'.concat(number.toString().slice(-2))\r\n  } else {\r\n    baseNumber = number.toString().slice(-2)\r\n  }\r\n  if (firstGroup.includes(baseNumber)) {\r\n    rightWord = wordExamples[word][0]\r\n  } else if (secondGroup.includes(baseNumber)) {\r\n    rightWord =  wordExamples[word][1]\r\n  } else rightWord = wordExamples[word][2]\r\n  return `${number} ${rightWord}`\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stat.scss'\r\nimport '../../styles/main.scss'\r\nimport { rightWord } from '../../js/utilits/rightWord'\r\nimport { themeClassNameGen } from '../../js/utilits/themeClassNameGen';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Stat(props) {\r\n\r\n    const numbersClassName = themeClassNameGen(props.theme, 'stat__number')\r\n\r\n    function symbolsCount() {\r\n        const text = props.text\r\n        return text.length\r\n    }\r\n\r\n    function wordsCount() {\r\n        const paragraphSymbol = /\\n/g\r\n        const text = props.text.toLowerCase().replace(paragraphSymbol, ' ')\r\n        const words = text.split(' ').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return words.length      \r\n    }\r\n\r\n    function paragraphsCount() {\r\n        const text = props.text\r\n        const paragraphs = text.split('\\n').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return paragraphs.length      \r\n    }\r\n\r\n    return(\r\n        <div className='stat'>\r\n            <p className={numbersClassName}>{rightWord(symbolsCount(), 'знак')}</p>\r\n            <p className={numbersClassName}>{rightWord(wordsCount(), 'слово')}</p>\r\n            <p className={numbersClassName}>{rightWord(paragraphsCount(), 'абзац')}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme,\r\n        text: state.text.text\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Stat);","export default __webpack_public_path__ + \"static/media/fish.51d9f3be.svg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './button.scss'\n\nfunction Button(props) {\n\n    function iconRender() {\n        const iconClassName = `button__icon_${props.type}`\n        return (props.icon ? \n            <img className={iconClassName} alt={props.icon} src={props.icon}></img> : null)\n        }\n\n    function counterRender() {\n        return (props.counter && props.counter !== 0 ? \n            <div className='button__counter'>{props.counter}</div> : null)\n        }\n\n    function textRender() {\n        return (props.text ? props.text : null)\n        }\n    \n    const buttonClassName = `button button_${props.type}`\n    const background = props.color\n\n    return (\n        <button onClick={props.onClick} className={buttonClassName} style={{background: background}}>\n            {iconRender()}\n            {counterRender()}\n            {textRender()}\n        </button>\n    )\n}\n\nexport default Button;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport fishicon from '../../images/fish.svg'\r\nimport Button from '../Button/Button';\r\nimport { useSelector } from 'react-redux';\r\nimport { axiosText } from '../../redux/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction TextGenerator(props) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const text = useSelector((state) => {\r\n        return state.text.text\r\n    })\r\n\r\n    function textGen() {\r\n        dispatch(axiosText(text))\r\n    }\r\n\r\n    return(\r\n        <Button \r\n            type='main' \r\n            color='red' \r\n            onClick={textGen} \r\n            icon={fishicon} \r\n            alt='fish text button'\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextGenerator;","export default __webpack_public_path__ + \"static/media/logo.4a5d448b.svg\";","export default __webpack_public_path__ + \"static/media/logo_dark.21fd0ed5.svg\";","import React from 'react';\r\nimport Stat from '../Stat/Stat';\r\nimport './header.scss'\r\nimport TextGenerator from '../TextGenerator/TextGenerator';\r\nimport headerLogo from '../../images/logo.svg';\r\nimport headerLogo_dark from '../../images/logo_dark.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport { themeClassNameGen } from '../../js/utilits/themeClassNameGen';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Header(props) {\r\n\r\n    const logoImport = props.theme === 'light' ? headerLogo : headerLogo_dark\r\n    const classNameByTheme = themeClassNameGen(props.theme, 'header')\r\n\r\n    if (props.onlyLogo) { \r\n        return(\r\n            <header className={classNameByTheme}>\r\n                <Link to={`/`}><img className='header__logo' alt='app logo' src={logoImport} /></Link>\r\n            </header>\r\n        )\r\n    } else {\r\n        return(\r\n            <header className={classNameByTheme}>\r\n                <Link to={`/`}><img className='header__logo' alt='app logo' src={logoImport} /></Link>\r\n                <Stat />\r\n                <TextGenerator onChangeText={props.onChangeText}/>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header)","export default __webpack_public_path__ + \"static/media/avatar.d9df8d24.jpg\";","export default __webpack_public_path__ + \"static/media/logo_avatar.7700c58b.svg\";","export const aboutData = {\r\n    'about-author': {\r\n        title: 'Александр Афанасенко',\r\n        subtitle: 'junior frontend-разработчик',\r\n        minisubtitle1: '',\r\n        text1: 'Привет! Меня зовут Саша, и я — автор проекта TextCounter, который вы видите на своем экране.',\r\n        minisubtitle2: 'Умения:',\r\n        text2: 'HTML, CSS(SCSS), JS, React, Redux. Photoshop, Illustrator',\r\n        minisubtitle3: 'Образование',\r\n        text3: '2020: Курс Яндекс.Практикумпо профессии «Фронтенд-разработчик». 2007-2013: Строительный факультет БНТУ по специальности «Промышленное и гражданское строительство»',\r\n        minisubtitle4: 'Опыт работы:',\r\n        text4: '2013 — 2021: дизайнер-верстальщик газеты «Прессбол»',\r\n        minisubtitle5: '',\r\n        text5: '',\r\n    },\r\n    'about-project': {\r\n        title: 'TextCounter',\r\n        subtitle: 'Приложение для подсчета количества символов и генерирования \"рыбного\" текста',\r\n        minisubtitle1: '',\r\n        text1: 'Идея этого приложения возникла еще на прошлой работе: подсчет количества знаков типичная задача для верстальщика полиграфии',\r\n        minisubtitle2: 'Технологии:',\r\n        text2: 'HTML, CSS(SCSS), JS, React. React-redux. Axios — для запроса к серверу генерирования \"рыбного\" текста. React.Router. Также приложение сохраняет выбранную тему в localStorage',\r\n        minisubtitle3: '',\r\n        text3: '',\r\n        minisubtitle4: '',\r\n        text4: '',\r\n        minisubtitle5: '',\r\n        text5: '',\r\n    }\r\n}   ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './about.scss'\r\nimport avatarAuthor from '../../images/avatar.jpg';\r\nimport avatarProject from '../../images/logo_avatar.svg';\r\nimport { themeClassNameGen } from '../../js/utilits/themeClassNameGen';\r\nimport { aboutData } from '../../js/aboutData';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction About(props) {\r\n\r\n    const data = aboutData[props.content]\r\n    let avatar\r\n    props.content === 'about-author' ? avatar = avatarAuthor : avatar = avatarProject\r\n\r\n    return(\r\n        <div className={themeClassNameGen(props.theme, 'about')}>\r\n            <img className='about__avatar' src={avatar} alt=\"Фото автора\" />\r\n            <div className='about__text-container'>\r\n                <h1 className={themeClassNameGen(props.theme, 'about__title')}>{data.title}</h1>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__subtitle')}>{data.subtitle}</h2>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__mini-subtitle')}>{data.minisubtitle1}</h2>\r\n                <p className={themeClassNameGen(props.theme, 'about__text')}>{data.text1}</p>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__mini-subtitle')}>{data.minisubtitle2}</h2>\r\n                <p className={themeClassNameGen(props.theme, 'about__text')}>{data.text2}</p>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__mini-subtitle')}>{data.minisubtitle3}</h2>\r\n                <p className={themeClassNameGen(props.theme, 'about__text')}>{data.text3}</p>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__mini-subtitle')}>{data.minisubtitle4}</h2>\r\n                <p className={themeClassNameGen(props.theme, 'about__text')}>{data.text4}</p>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__mini-subtitle')}>{data.minisubtitle5}</h2>\r\n                <p className={themeClassNameGen(props.theme, 'about__text')}>{data.text5}</p>\r\n                <Link to=\"/\" className='footer__link'>\r\n                    <p className={themeClassNameGen(props.theme, 'footer__text')}>назад</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(About);","export default __webpack_public_path__ + \"static/media/error_avatar.2b80dd85.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './about.scss'\r\nimport errorImage from '../../images/error_avatar.svg';\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Error(props) {\r\n\r\n    return(\r\n        <div className={themeClassName(props.theme, 'about')}>\r\n            <img className='about__avatar' src={errorImage} alt=\"404\" />\r\n            <div className='about__text-container'>\r\n                <h1 className={themeClassName(props.theme, 'about__title')}>Такой страницы не существует</h1>\r\n                <Link to=\"/\" className='footer__link'>\r\n                    <p className={themeClassName(props.theme, 'footer__text')}>на главную</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Error);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './App.scss';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Main from './components/Main/Main';\r\nimport Header from './components/Header/Header';\r\nimport About from './components/About/About';\r\nimport Error from './components/Error/Error';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <div className=\"App\">\r\n\r\n        <Switch>\r\n\r\n          <Route exact path='/'>\r\n            <Header onlyLogo={false}/> \r\n            <Main />\r\n          </Route>\r\n\r\n          <Route path='/about-author'>\r\n            <Header onlyLogo={true}/> \r\n            <About content='about-author'/>\r\n          </Route>\r\n\r\n          <Route path='/about-project'>\r\n            <Header onlyLogo={true}/> \r\n            <About content='about-project'/>\r\n          </Route>\r\n\r\n          <Route path='*'>\r\n            <Header onlyLogo={true}/> \r\n            <Error/>\r\n          </Route>\r\n\r\n        </Switch>\r\n\r\n      </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'; //библиотека для создания маршрутов внутри реакт приложения\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './redux/rootReducer';\r\nimport App from './App';\r\n\r\nimport './index.css';\r\nimport './styles/variables.scss'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/Textcounter\"> \r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\ndocument.getElementById('root')\r\n);"],"sourceRoot":""}