{"version":3,"sources":["images/avatar.jpg","components/AboutAuthor/AboutAuthor.js","contexts/ThemeContext.js","js/utilits/themeClassName.js","components/Text/Text.js","components/PopupMessage/PopupMessage.js","images/paste_icon_light.svg","images/paste_icon_dark.svg","js/utilits.js","components/ToolButton/ToolButton.js","js/constants.js","components/ToolPaste/ToolPaste.js","images/copy_icon_light.svg","images/copy_icon_dark.svg","components/ToolCopy/ToolCopy.js","images/delete_icon_light.svg","images/delete_icon_dark.svg","components/ToolClear/ToolClear.js","images/darktheme_icon.svg","images/lighttheme_icon.svg","components/ToggleTheme/ToggleTheme.js","components/ToolBar/ToolBar.js","images/logo_fb_light.svg","images/logo_github_light.svg","images/logo_linkedin_light.svg","images/logo_telegram_light.svg","images/logo_fb_dark.svg","images/logo_github_dark.svg","images/logo_linkedin_dark.svg","images/logo_telegram_dark.svg","components/Footer/Footer.js","components/Main/Main.js","js/utilits/rightWord.js","components/Stat/Stat.js","images/fish.svg","components/Button/Button.js","components/TextGenerator/TextGenerator.js","images/logo.svg","images/logo_dark.svg","components/Header/Header.js","js/localStorage.js","App.js","reportWebVitals.js","index.js"],"names":["AboutAuthor","className","src","avatar","alt","href","themes","light","id","modifierClass","dark","ThemeContext","React","createContext","themeClassName","themeProperties","baseClassName","Text","props","inputClassName","useContext","onChange","onChangeText","document","querySelector","value","type","placeholder","PopupMessage","messageClassName","showPopupMessage","x","y","message","messageColor","popup","classList","add","window","innerWidth","style","left","right","innerHeight","top","bottom","color","innerText","remove","setTimeout","ToolButton","state","functionToAction","this","isActive","onClick","icon","Component","popupColors","ToolPaste","pasteIcon","theme","pasteIconLight","pasteIconDark","event","navigator","clipboard","readText","then","text","sendTextToStatCount","length","console","log","clientX","clientY","ToolCopy","copyIcon","copyIconLight","copyIconDark","writeText","ToolClear","deleteIcon","deleteIconLight","deleteIconDark","ToggleTheme","themeData","darkThemeIcon","lightThemeIcon","onChangeTheme","ToolBar","themeProp","isTextAreaHasContent","isClibBoardHasContent","textValue","onChangeInRecycle","onPopupInit","popupContent","Footer","facebookLogo","githubLogo","linkedinLogo","telegramLogo","textClassName","facebookLogoLight","githubLogoLight","linkedinLogoLight","telegramLogoLight","facebookLogoDark","githubLogoDark","linkedinLogoDark","telegramLogoDark","Main","mainClassName","wordExamples","firstGroup","secondGroup","rightWord","number","word","baseNumber","toString","slice","concat","includes","Stat","numbersClassName","toLowerCase","replace","split","filter","item","Button","buttonClassName","background","iconClassName","iconRender","counter","TextGenerator","textGen","bind","editText","axios","get","res","editedText","data","catch","fishicon","Header","logoImport","classNameByTheme","headerLogo","headerLogo_dark","onlyLogo","to","LocalStorage","defaultTheme","JSON","parse","localStorage","getItem","setItem","stringify","App","check","useState","themeToUse","changeTheme","changeText","Provider","exact","path","newTheme","set","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c60bd8ca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.d9df8d24.jpg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './about-author.scss'\r\nimport avatar from '../../images/avatar.jpg';\r\n\r\n\r\n\r\nfunction AboutAuthor() {\r\n\r\n    return(\r\n        <div className='about-author'>\r\n            <img className='about-author__avatar' src={avatar} alt=\"Фото автора\" />\r\n            <h1 className='about-author__title'> Александр Афанасенко </h1>\r\n            <h2 className='about-author__subtitle'> Junior Frontend-разработчик </h2>\r\n            <a href=\"./\"><p className='footer__text'>Главная</p></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutAuthor;","import React from 'react';\r\n\r\nexport const themes = {\r\n    light: {\r\n        id: 0,\r\n        modifierClass: '',\r\n    },\r\n    dark: {\r\n        id: 1,\r\n        modifierClass: '_dark',\r\n    },\r\n  };\r\n\r\nexport const ThemeContext = React.createContext();","export function themeClassName(themeProperties, baseClassName) {\r\n    if (themeProperties.id === 0) {\r\n        return baseClassName\r\n    } else {\r\n        return `${baseClassName} ${baseClassName}${themeProperties.modifierClass}`\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './text.scss'\r\n\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\n\r\nfunction Text(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    const inputClassName = themeClassName(themeData, 'text__input')\r\n\r\n    function sendTextToStatCount() {\r\n        props.onChangeText(document.querySelector('.text__input').value)\r\n    }\r\n\r\n    return(\r\n        <div className='text'>\r\n            <textarea onChange={sendTextToStatCount}\r\n                    className={inputClassName} \r\n                    type=\"text\" \r\n                    placeholder=\"Ваш текст\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\n\r\nimport './popup-message.scss'\r\n\r\nfunction PopupMessage() {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    const messageClassName = themeClassName(themeData, 'popup-message')\r\n\r\n    return(\r\n    <p className={`${messageClassName} popup-message_unactive`}></p>\r\n    )\r\n}\r\n\r\nexport default PopupMessage;","export default __webpack_public_path__ + \"static/media/paste_icon_light.18612f4a.svg\";","export default __webpack_public_path__ + \"static/media/paste_icon_dark.f6ac4c9b.svg\";","export function showPopupMessage(x, y, message, messageColor) {\r\n    // console.log(window.innerWidth)\r\n    // console.log(window.innerHeight)\r\n    // console.log(x, y)\r\n    const popup = document.querySelector('.popup-message')\r\n    popup.classList.add('popup-message_active');\r\n\r\n    if (window.innerWidth / 2 > x) {\r\n        popup.style.left = `${x}px`\r\n    } else {\r\n        popup.style.right = `${window.innerWidth - x}px`\r\n    }\r\n    if (window.innerHeight / 2 > y) {\r\n        popup.style.top = `${y}px`\r\n    } else {\r\n        popup.style.bottom = `${window.innerHeight - y}px`\r\n    }\r\n    popup.style.color = messageColor\r\n    popup.innerText = message\r\n    popup.classList.remove('popup-message_unactive');\r\n    setTimeout(() => {\r\n        popup.classList.add('popup-message_unactive');\r\n        popup.classList.remove('popup-message_active');\r\n    }, 3000)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tool-button.sass'\r\n\r\nclass ToolButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        let className = 'tool-button'\r\n        let functionToAction = null\r\n        if (this.props.isActive === true) {\r\n            className = 'tool-button tool-button_active'\r\n            functionToAction = this.props.onClick\r\n        } \r\n\r\n        return(\r\n            <button className={className}>\r\n                <img className='tool-button__icon'\r\n                    onClick={functionToAction}\r\n                    src={this.props.icon} \r\n                    alt={this.props.type}>\r\n                </img>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolButton;","export const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\r\n\r\nexport const popupColors = {\r\n    green: '#00ba00',\r\n    red: '#FF0000'\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport pasteIconLight from '../../images/paste_icon_light.svg'\r\nimport pasteIconDark from '../../images/paste_icon_dark.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { popupColors } from '../../js/constants';\r\n\r\nfunction ToolPaste(props) {\r\n   \r\n    let pasteIcon\r\n    props.theme === 'light' ? pasteIcon = pasteIconLight : pasteIcon = pasteIconDark\r\n\r\n    function pasteInTextArea(event) {\r\n\r\n        navigator.clipboard.readText()\r\n        .then(text => {\r\n            document.querySelector('.text__input').value = text\r\n            sendTextToStatCount(text)\r\n        }).then(() => {\r\n            if (document.querySelector('.text__input').value.length === 0) {\r\n                console.log(popupColors.red)\r\n                showPopupMessage(event.clientX, event.clientY, 'ошибка, возможно в буфере находится не текст', popupColors.red)\r\n            }\r\n        })\r\n    }\r\n    \r\n    function sendTextToStatCount(text) {\r\n        props.onChangeText(text)\r\n    }\r\n\r\n    return (\r\n    <ToolButton \r\n        type='paste'\r\n        icon={pasteIcon}\r\n        isActive={props.isActive}\r\n        onClick={pasteInTextArea}\r\n    />\r\n    )\r\n}\r\n\r\nexport default ToolPaste;","export default __webpack_public_path__ + \"static/media/copy_icon_light.b7b0ee85.svg\";","export default __webpack_public_path__ + \"static/media/copy_icon_dark.2bd53001.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport copyIconLight from '../../images/copy_icon_light.svg'\r\nimport copyIconDark from '../../images/copy_icon_dark.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { popupColors } from '../../js/constants';\r\n\r\nfunction ToolCopy(props) {\r\n\r\n    let copyIcon\r\n    props.theme === 'light' ? copyIcon = copyIconLight : copyIcon = copyIconDark\r\n\r\n    function copyTextArea(event) {\r\n        const text = document.querySelector('.text__input').value\r\n        navigator.clipboard.writeText(text);\r\n        showPopupMessage(event.clientX, event.clientY, 'Скопировано в буфер', popupColors.green)\r\n    }\r\n\r\n    return (\r\n        <ToolButton \r\n            type='copy'\r\n            icon={copyIcon}\r\n            isActive={props.isActive}\r\n            onClick={copyTextArea}\r\n        />\r\n    )\r\n    \r\n}\r\n\r\nexport default ToolCopy;","export default __webpack_public_path__ + \"static/media/delete_icon_light.db3a8767.svg\";","export default __webpack_public_path__ + \"static/media/delete_icon_dark.a62aca89.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport deleteIconLight from '../../images/delete_icon_light.svg'\r\nimport deleteIconDark from '../../images/delete_icon_dark.svg'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\n\r\nfunction ToolClear(props) {\r\n\r\n    let deleteIcon\r\n    props.theme === 'light' ? deleteIcon = deleteIconLight : deleteIcon = deleteIconDark\r\n\r\n    function clearTextArea() {\r\n        document.querySelector('.text__input').value = ''\r\n        props.onChangeText('');\r\n    }\r\n\r\n    return (\r\n        <ToolButton \r\n            type='clear text area'\r\n            icon={deleteIcon}\r\n            isActive={props.isActive}\r\n            onClick={clearTextArea}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ToolClear;","export default __webpack_public_path__ + \"static/media/darktheme_icon.5712200e.svg\";","export default __webpack_public_path__ + \"static/media/lighttheme_icon.e321a497.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport darkThemeIcon from '../../images/darktheme_icon.svg'\r\nimport lightThemeIcon from '../../images/lighttheme_icon.svg'\r\n\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\n\r\nfunction ToggleTheme(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext)\r\n    let icon\r\n    themeData.id === 0 ? icon = darkThemeIcon : icon = lightThemeIcon\r\n\r\n    function toggle() {\r\n        themeData.id === 0 ? props.onChangeTheme('dark') : props.onChangeTheme('light')  \r\n    }\r\n\r\n    return(\r\n        <ToolButton \r\n            type='toggle theme'\r\n            icon={icon}\r\n            isActive = {true}\r\n            onClick={toggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ToggleTheme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\nimport ToolPaste from '../ToolPaste/ToolPaste';\r\nimport ToolCopy from '../ToolCopy/ToolCopy';\r\nimport ToolClear from '../ToolClear/ToolClear';\r\nimport ToggleTheme from '../ToggleTheme/ToggleTheme';\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\nimport './toolbar.scss'\r\n\r\nfunction ToolBar(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    let themeProp\r\n    themeData.id === 0 ? themeProp = 'light' : themeProp = 'dark' \r\n\r\n    function onChangeText(text) {\r\n        props.onChangeText(text); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    function onChangeInRecycle() {\r\n        console.log('toolbar on change in recycle')\r\n        props.onChangeInRecycle(); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    function onPopupInit(popupContent) {\r\n        props.onPopupInit(popupContent)\r\n    }\r\n\r\n    let isTextAreaHasContent = true\r\n\r\n    let isClibBoardHasContent = true\r\n    if (props.textValue.length === 0) {\r\n        isTextAreaHasContent = false\r\n    }\r\n    navigator.clipboard.readText()\r\n    .then(text => {\r\n        if (text.length === 0) {\r\n            isClibBoardHasContent = false\r\n        }    \r\n    })\r\n    \r\n    return(\r\n        <div className='toolbar'>\r\n            <ToggleTheme onChangeTheme={props.onChangeTheme}/>\r\n            <ToolCopy theme={themeProp} isActive={isTextAreaHasContent} onChangeText={onChangeText}/>\r\n            <ToolPaste theme={themeProp} isActive={isClibBoardHasContent} onChangeText={onChangeText}/>\r\n            <ToolClear theme={themeProp} isActive={isTextAreaHasContent} onChangeText={onChangeText} onChangeInRecycle={onChangeInRecycle} onPopupInit={onPopupInit}/>\r\n            <PopupMessage />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolBar;","export default __webpack_public_path__ + \"static/media/logo_fb_light.1b53cc59.svg\";","export default __webpack_public_path__ + \"static/media/logo_github_light.b54a62b8.svg\";","export default __webpack_public_path__ + \"static/media/logo_linkedin_light.89ce2e72.svg\";","export default __webpack_public_path__ + \"static/media/logo_telegram_light.c3f7acaa.svg\";","export default __webpack_public_path__ + \"static/media/logo_fb_dark.bbfc0d48.svg\";","export default __webpack_public_path__ + \"static/media/logo_github_dark.e9062407.svg\";","export default __webpack_public_path__ + \"static/media/logo_linkedin_dark.5e1d4a88.svg\";","export default __webpack_public_path__ + \"static/media/logo_telegram_dark.8e95b74e.svg\";","import React from 'react';\r\nimport './Footer.scss';\r\nimport facebookLogoLight from '../../images/logo_fb_light.svg'\r\nimport githubLogoLight from '../../images/logo_github_light.svg'\r\nimport linkedinLogoLight from '../../images/logo_linkedin_light.svg'\r\nimport telegramLogoLight from '../../images/logo_telegram_light.svg'\r\nimport facebookLogoDark from '../../images/logo_fb_dark.svg'\r\nimport githubLogoDark from '../../images/logo_github_dark.svg'\r\nimport linkedinLogoDark from '../../images/logo_linkedin_dark.svg'\r\nimport telegramLogoDark from '../../images/logo_telegram_dark.svg'\r\n\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\n\r\nfunction Footer() {\r\n  const themeData = React.useContext(ThemeContext);\r\n\r\n  const textClassName = themeClassName(themeData, 'footer__text')\r\n  let facebookLogo, githubLogo, linkedinLogo, telegramLogo\r\n  if (themeData.id === 0) {\r\n    facebookLogo = facebookLogoLight\r\n    githubLogo = githubLogoLight\r\n    linkedinLogo = linkedinLogoLight\r\n    telegramLogo = telegramLogoLight\r\n  } else {\r\n    facebookLogo = facebookLogoDark\r\n    githubLogo = githubLogoDark\r\n    linkedinLogo = linkedinLogoDark\r\n    telegramLogo = telegramLogoDark\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <a className='footer__link' href=\"./Textcounter/about\"><p className={textClassName}>&copy; Александр Афанасенко, 2021 | Об авторе</p></a>\r\n      <div className='footer__social-links'>\r\n        <a className='footer__icon-link' href=\"https://www.facebook.com/sasaafanasienka\">\r\n            <img src={facebookLogo} alt=\"Facebook logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://github.com/sasaafanasienka\">\r\n            <img src={githubLogo} alt=\"Facebook logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://www.linkedin.com/in/александр-афанасенко-bb672b15a/\">\r\n            <img src={linkedinLogo} alt=\"LinkedIn logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://t.me/sanya2020327\">\r\n            <img src={telegramLogo} alt=\"telegram logo\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Text from '../Text/Text';\r\nimport ToolBar from '../ToolBar/ToolBar';\r\nimport Footer from '../Footer/Footer'\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\nimport './main.scss'\r\n\r\nfunction Main(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    const mainClassName = themeClassName(themeData, 'main')\r\n\r\n    return(\r\n        <div className={mainClassName}>\r\n            <Text onChangeText={props.onChangeText}/>\r\n            <ToolBar textValue={props.textValue} onChangeTheme={props.onChangeTheme} onChangeText={props.onChangeText}/>\r\n            <Footer />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Main;","const wordExamples  = {\r\n    'знак': ['знак', 'знака', 'знаков'],\r\n    'слово': ['слово', 'слова', 'слов'],\r\n    'абзац': ['абзац', 'абзаца', 'абзацев'],\r\n}\r\n\r\nconst firstGroup = ['01', '21', '31', '41', '51', '61', '71', '81', '91']\r\nconst secondGroup = ['02', '03', '04', '22', '23', '24', '32', '33', '34', '42', '43', '44', \r\n                    '52', '53', '54', '62', '63', '64', '72', '73', '74', '82', '83', '84', '92', '93', '94']\r\n\r\nexport function rightWord(number, word) {\r\n  let baseNumber = 0;\r\n  let rightWord = '';\r\n  if (number.toString().slice(-2).length < 2) {\r\n    baseNumber = '0'.concat(number.toString().slice(-2))\r\n  } else {\r\n    baseNumber = number.toString().slice(-2)\r\n  }\r\n  if (firstGroup.includes(baseNumber)) {\r\n    rightWord = wordExamples[word][0]\r\n  } else if (secondGroup.includes(baseNumber)) {\r\n    rightWord =  wordExamples[word][1]\r\n  } else rightWord = wordExamples[word][2]\r\n  return `${number} ${rightWord}`\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stat.scss'\r\nimport '../../styles/main.scss'\r\nimport { rightWord } from '../../js/utilits/rightWord'\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\n\r\nfunction Stat(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    const numbersClassName = themeClassName(themeData, 'stat__number')\r\n\r\n    function symbolsCount() {\r\n        const text = props.textValue\r\n        return text.length\r\n    }\r\n\r\n    function wordsCount() {\r\n        const paragraphSymbol = /\\n/g\r\n        const text = props.textValue.toLowerCase().replace(paragraphSymbol, ' ')\r\n        const words = text.split(' ').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return words.length      \r\n    }\r\n\r\n    function paragraphsCount() {\r\n        const text = props.textValue\r\n        const paragraphs = text.split('\\n').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return paragraphs.length      \r\n    }\r\n\r\n    return(\r\n        <div className='stat'>\r\n            <p className={numbersClassName}>{rightWord(symbolsCount(), 'знак')}</p>\r\n            <p className={numbersClassName}>{rightWord(wordsCount(), 'слово')}</p>\r\n            <p className={numbersClassName}>{rightWord(paragraphsCount(), 'абзац')}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Stat;","export default __webpack_public_path__ + \"static/media/fish.51d9f3be.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './button.scss'\r\n\r\nfunction Button(props) {\r\n\r\n    function iconRender() {\r\n        const iconClassName = `button__icon_${props.type}`\r\n        return (props.icon ? \r\n            <img className={iconClassName} alt={props.icon} src={props.icon}></img> : null)\r\n        }\r\n\r\n    function counterRender() {\r\n        return (props.counter && props.counter !== 0 ? \r\n            <div className='button__counter'>{props.counter}</div> : null)\r\n        }\r\n\r\n    function textRender() {\r\n        return (props.text ? props.text : null)\r\n        }\r\n    \r\n    const buttonClassName = `button button_${props.type}`\r\n    const background = props.color\r\n\r\n    return (\r\n        <button onClick={props.onClick} className={buttonClassName} style={{background: background}}>\r\n            {iconRender()}\r\n            {counterRender()}\r\n            {textRender()}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport fishicon from '../../images/fish.svg'\r\nimport Button from '../Button/Button'\r\nimport axios from 'axios'\r\n// import { ThemeContext } from '../../contexts/ThemeContext'\r\n\r\n// const api = (template) => new Api(template);\r\nconst API = 'https://fish-text.ru/get?type=paragraph&number=10'\r\n\r\nclass TextGenerator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n        this.textGen = this.textGen.bind(this)\r\n        this.editText = this.editText.bind(this)\r\n        this.sendTextToStatCount = this.sendTextToStatCount.bind(this)\r\n    }\r\n\r\n    sendTextToStatCount(text) {\r\n        this.props.onChangeText(text)\r\n    }\r\n    \r\n    editText(text) {\r\n        const textToReplace = /\\\\n\\\\n/g\r\n        let editedText = text.replace(textToReplace, '\\n')\r\n        return editedText\r\n    }\r\n    \r\n    textGen() {\r\n        axios.get(API)\r\n            .then((res) => {\r\n                const editedText = this.editText(res.data.text)\r\n                document.querySelector('.text__input').value = document.querySelector('.text__input').value + editedText\r\n                this.sendTextToStatCount(document.querySelector('.text__input').value)\r\n            })\r\n            .catch(() => {\r\n                console.log('Error in server request')\r\n                // showPopupMessage(event.clientX, event.clientY, 'Ошибка запроса к серверу fish-text.ru', 'red')\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button \r\n                type='main' \r\n                color='red' \r\n                onClick={this.textGen} \r\n                icon={fishicon} \r\n                alt='fish text button'\r\n            />\r\n        )\r\n    }\r\n\r\n    // const themeData = React.useContext(ThemeContext);\r\n    // let buttonColor\r\n    // themeData.id === 0 ? buttonColor = 'red' : buttonColor = '#b10000'\r\n\r\n\r\n    // textGen(event) {\r\n    //     api('standings').request()\r\n    //         .then((result) => {\r\n    //             editText(result.text)\r\n    //         })\r\n    //         .catch(() => {\r\n    //             console.log('Error in server request')\r\n    //             // showPopupMessage(event.clientX, event.clientY, 'Ошибка запроса к серверу fish-text.ru', 'red')\r\n    //         })\r\n    // }\r\n\r\n\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    //     this.state = {\r\n    //         popupWasShown: false\r\n    //     }\r\n\r\n    // }\r\n\r\n    // statCount() {\r\n    //     this.props.onChangeText();\r\n    // }\r\n\r\n\r\n    // showPopup(event) {\r\n    //     showPopupMessage(event.clientX, event.clientY, 'генерировать рыбный текст', 'black')\r\n    //     this.setState({popupWasShown: true})\r\n    //     setTimeout(() => {\r\n    //         this.setState({popupWasShown: false})\r\n    //     }, 60000)\r\n    // }\r\n\r\n    // let showPopupFunc = this.showPopup\r\n    // if (this.state.popupWasShown === true) {\r\n    //     showPopupFunc = null;\r\n    // }\r\n    \r\n}\r\n\r\nexport default TextGenerator;","export default __webpack_public_path__ + \"static/media/logo.4a5d448b.svg\";","export default __webpack_public_path__ + \"static/media/logo_dark.21fd0ed5.svg\";","import React from 'react';\r\nimport Stat from '../Stat/Stat';\r\nimport './header.scss'\r\nimport TextGenerator from '../TextGenerator/TextGenerator';\r\nimport headerLogo from '../../images/logo.svg';\r\nimport headerLogo_dark from '../../images/logo_dark.svg';\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\nimport { Route, Link, useRouteMatch } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    const classNameByTheme = themeClassName(themeData, 'header')\r\n    let logoImport\r\n    themeData.id === 0 ? logoImport = headerLogo : logoImport = headerLogo_dark\r\n\r\n    if (props.onlyLogo) { \r\n        return(\r\n            <header className={classNameByTheme}>\r\n                <Link to={`/Textcounter`}><img className='header__logo' alt='app logo' src={logoImport} /></Link>\r\n            </header>\r\n        )\r\n    } else {\r\n        return(\r\n            <header className={classNameByTheme}>\r\n                <Link to={`/Textcounter`}><img className='header__logo' alt='app logo' src={logoImport} /></Link>\r\n                <Stat textValue={props.textValue} />\r\n                <TextGenerator onChangeText={props.onChangeText}/>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","export class LocalStorage {\r\n\r\n    check() {\r\n        const defaultTheme = JSON.parse(localStorage.getItem('defaultTheme'))\r\n        if (defaultTheme) {\r\n            return defaultTheme\r\n        } else { //если такого свойства не сущетсвует\r\n            localStorage.setItem('defaultTheme', JSON.stringify('light')) //то его надо создать и присвоить значение по умолчанию\r\n            return localStorage.getItem('defaultTheme')\r\n        } \r\n    }\r\n\r\n    set(theme) {\r\n        localStorage.setItem('defaultTheme', JSON.stringify(theme))\r\n    }\r\n    \r\n};\r\n\r\nexport default LocalStorage\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './App.scss';\r\nimport AboutAuthor from './components/AboutAuthor/AboutAuthor';\r\nimport { Route, useRouteMatch } from 'react-router-dom';\r\nimport Main from './components/Main/Main';\r\nimport Header from './components/Header/Header';\r\n\r\nimport { ThemeContext, themes } from './contexts/ThemeContext'\r\nimport { LocalStorage } from './js/localStorage';\r\n\r\nfunction App() {\r\n\r\n  const defaultTheme = new LocalStorage()\r\n  const theme = defaultTheme.check()\r\n\r\n  const [themeToUse, changeTheme] = React.useState(theme);\r\n  const [textValue, changeText] = React.useState('');\r\n\r\n  function rememberTheme(newTheme) {\r\n    changeTheme(newTheme)\r\n    defaultTheme.set(newTheme)\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={themes[themeToUse]}>\r\n\r\n      <div className=\"App\">\r\n\r\n            <Route exact path='/Textcounter'>\r\n              <Header textValue={textValue} onChangeText={changeText} onlyLogo={false}/> \r\n              <Main textValue={textValue} onChangeTheme={rememberTheme} onChangeText={changeText}/>\r\n            </Route>\r\n\r\n            <Route path='/Textcounter/about'>\r\n              <Header onlyLogo={true}/> \r\n              <AboutAuthor />\r\n            </Route>\r\n\r\n      </div>\r\n      \r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom'; //библиотека для создания маршрутов внутри реакт приложения\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './styles/variables.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter> \r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\ndocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}