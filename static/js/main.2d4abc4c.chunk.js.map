{"version":3,"sources":["components/ToolButton/ToolButton.js","components/PopupMessage/PopupMessage.js","components/Text/Text.js","js/utilits/rightWord.js","components/Stat/Stat.js","images/paste_icon.svg","js/utilits.js","components/ToolPaste/ToolPaste.js","images/copy_icon.svg","components/ToolCopy/ToolCopy.js","images/delete_icon.svg","js/localStorage.js","js/constants.js","components/ToolClear/ToolClear.js","components/ToolBar/ToolBar.js","js/api.js","images/fish.svg","components/Button/Button.js","components/TextGenerator/TextGenerator.js","images/logo.svg","components/RecycleItem/RecycleItem.js","images/recycle.svg","images/close.svg","components/ButtonClosePopup/ButtonClosePopup.js","components/PopupTitle/PopupTitle.js","components/RecycleBin/RecycleBin.js","components/RecycleButton/RecycleButton.js","images/logo_fb.svg","images/logo_github.svg","images/logo_linkedin.svg","images/logo_telegram.svg","components/Footer/Footer.js","components/Popup/Popup.js","components/MainContent/MainContent.js","App.js","reportWebVitals.js","index.js"],"names":["ToolButton","props","state","className","functionToAction","this","isActive","onClick","src","icon","alt","type","React","Component","PopupMessage","Text","timerId","statCount","bind","clearTimeout","document","querySelector","style","opacity","setTimeout","onChangeText","setState","onChange","placeholder","wordExamples","firstGroup","secondGroup","rightWord","number","word","baseNumber","toString","slice","length","concat","includes","Stat","text","toLowerCase","replace","split","filter","item","symbolsCount","wordsCount","paragraphsCount","showPopupMessage","x","y","message","messageColor","popup","classList","add","window","innerWidth","left","right","innerHeight","top","bottom","color","innerText","remove","ToolPaste","pasteInTextArea","event","navigator","clipboard","readText","then","value","clientX","clientY","pasteIcon","ToolCopy","copyTextArea","writeText","copyIcon","LocalStorage","property","localStorage","removeItem","setItem","JSON","stringify","undefined","recycle","parse","addToRecycle","console","log","itemForRecycle","makeItemForRecycle","recycleContent","checkLocalStorage","deleteTime","data","content","loadFrom","loadTo","months","newLocalStorage","ToolClear","clearTextArea","createPopupContent","Object","keys","onPopupInit","textAreaContent","dataForRecycle","addTo","onChangeInRecycle","popupDOM","push","deletedText","current","Date","currentDate","getDate","currentMonth","getMonth","currentYear","getFullYear","currentHours","getHours","currentMinutes","getMinutes","currentMiliSeconds","textTitle","deletedPhrase","title","textLength","deleteIcon","ToolBar","popupContent","isTextAreaHasContent","isClibBoardHasContent","Api","template","fetch","res","status","json","result","Button","iconClassName","counter","buttonClassName","background","iconRender","counterRender","textRender","TextGenerator","popupWasShown","textGen","editText","showPopup","editedText","request","catch","fishicon","RecycleItem","key","keyProp","time","recover","refreshStat","ButtonClosePopup","close","classToClose","closeIcon","PopupTitle","RecycleBin","itemsInRecycle","renderAllItems","renderItem","refreshRecycle","clearAll","itemsDOM","onMouseLeave","closeAfterMouseLeaving","onMouseEnter","stopClosing","renderClearAllButton","RecycleButton","showRecycleBin","recycleicon","Footer","href","facebookLogo","githubLogo","linkedinLogo","telegramLogo","Popup","MainContent","popupInit","valueOfTextArea","popupContentDOM","newRecycleData","textOnPopup","headerLogo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2d4abc4c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tool-button.scss'\r\n\r\nclass ToolButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        let className = 'tool-button'\r\n        let functionToAction = null\r\n        if (this.props.isActive === true) {\r\n            className = 'tool-button tool-button_active'\r\n            functionToAction = this.props.onClick\r\n        } \r\n\r\n        return(\r\n            <button className={className}>\r\n                <img className='tool-button__icon'\r\n                    onClick={functionToAction}\r\n                    src={this.props.icon} \r\n                    alt={this.props.type}>\r\n                </img>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolButton;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './popup-message.scss'\r\n\r\nclass PopupMessage extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <p className='popup-message popup-message_unactive'></p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PopupMessage;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './text.scss'\r\nimport EditButton from '../ToolButton/ToolButton';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\n\r\nclass Text extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            timerId: 0\r\n        }\r\n\r\n        this.statCount = this.statCount.bind(this); //это требуется чтобы не потерять котекст в statcount\r\n    }\r\n\r\n    statCount() {\r\n        clearTimeout(this.state.timerId)\r\n        document.querySelector('.stat').style.opacity = '0.3'\r\n        const timerId = setTimeout(() => {\r\n            this.props.onChangeText()\r\n            document.querySelector('.stat').style.opacity = '1'\r\n        }, 500)\r\n        this.setState({timerId: timerId})    \r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className='text'>\r\n                <textarea onChange={this.statCount} \r\n                        className='text__input' \r\n                        type=\"text\" \r\n                        placeholder=\"Ваш текст\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Text;","const wordExamples  = {\r\n    'знак': ['знак', 'знака', 'знаков'],\r\n    'слово': ['слово', 'слова', 'слов'],\r\n    'абзац': ['абзац', 'абзаца', 'абзацев'],\r\n}\r\n\r\nconst firstGroup = ['01', '21', '31', '41', '51', '61', '71', '81', '91']\r\nconst secondGroup = ['02', '03', '04', '22', '23', '24', '32', '33', '34', '42', '43', '44', \r\n                    '52', '53', '54', '62', '63', '64', '72', '73', '74', '82', '83', '84', '92', '93', '94']\r\n\r\nexport function rightWord(number, word) {\r\n  let baseNumber = 0;\r\n  let rightWord = '';\r\n  if (number.toString().slice(-2).length < 2) {\r\n    baseNumber = '0'.concat(number.toString().slice(-2))\r\n  } else {\r\n    baseNumber = number.toString().slice(-2)\r\n  }\r\n  if (firstGroup.includes(baseNumber)) {\r\n    rightWord = wordExamples[word][0]\r\n  } else if (secondGroup.includes(baseNumber)) {\r\n    rightWord =  wordExamples[word][1]\r\n  } else rightWord = wordExamples[word][2]\r\n  return `${number} ${rightWord}`\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stat.scss'\r\nimport '../../styles/main.scss'\r\nimport { rightWord } from '../../js/utilits/rightWord'\r\n\r\nclass Stat extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    symbolsCount() {\r\n        const text = this.props.text\r\n        return text.length\r\n    }\r\n\r\n    wordsCount() {\r\n        const paragraphSymbol = /\\n/g\r\n        const text = this.props.text.toLowerCase().replace(paragraphSymbol, ' ')\r\n        const words = text.split(' ').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return words.length      \r\n    }\r\n\r\n    paragraphsCount() {\r\n        const text = this.props.text\r\n        const paragraphs = text.split('\\n').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return paragraphs.length      \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='stat'>\r\n                <p className='stat__number'>{rightWord(this.symbolsCount(), 'знак')}</p>\r\n                <p className='stat__number'>{rightWord(this.wordsCount(), 'слово')}</p>\r\n                <p className='stat__number'>{rightWord(this.paragraphsCount(), 'абзац')}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Stat;","export default __webpack_public_path__ + \"static/media/paste_icon.661daeb2.svg\";","export function showPopupMessage(x, y, message, messageColor) {\r\n    // console.log(window.innerWidth)\r\n    // console.log(window.innerHeight)\r\n    // console.log(x, y)\r\n    const popup = document.querySelector('.popup-message')\r\n    popup.classList.add('popup-message_active');\r\n\r\n    if (window.innerWidth / 2 > x) {\r\n        popup.style.left = `${x}px`\r\n    } else {\r\n        popup.style.right = `${window.innerWidth - x}px`\r\n    }\r\n    if (window.innerHeight / 2 > y) {\r\n        popup.style.top = `${y}px`\r\n    } else {\r\n        popup.style.bottom = `${window.innerHeight - y}px`\r\n    }\r\n    popup.style.color = messageColor\r\n    popup.innerText = message\r\n    popup.classList.remove('popup-message_unactive');\r\n    setTimeout(() => {\r\n        popup.classList.add('popup-message_unactive');\r\n        popup.classList.remove('popup-message_active');\r\n    }, 3000)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport pasteIcon from '../../images/paste_icon.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\n\r\nclass ToolPaste extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.pasteInTextArea = this.pasteInTextArea.bind(this);\r\n        this.state = {};\r\n    }\r\n\r\n    pasteInTextArea(event) {\r\n        navigator.clipboard.readText()\r\n        .then(text => {\r\n            document.querySelector('.text__input').value = text\r\n            this.props.onChangeText();\r\n        }).then(() => {\r\n            if (document.querySelector('.text__input').value.length === 0) {\r\n                showPopupMessage(event.clientX, event.clientY, 'ошибка, возможно в буфере находится не текст', 'red')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToolButton \r\n                type='paste'\r\n                icon={pasteIcon}\r\n                isActive={this.props.isActive}\r\n                onClick={this.pasteInTextArea}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolPaste;","export default __webpack_public_path__ + \"static/media/copy_icon.e7765d1b.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport copyIcon from '../../images/copy_icon.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\n\r\nclass ToolCopy extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.copyTextArea = this.copyTextArea.bind(this); //это требуется чтобы не потерять котекст\r\n        this.state = {};\r\n    }\r\n\r\n    copyTextArea(event) {\r\n        const text = document.querySelector('.text__input').value\r\n        navigator.clipboard.writeText(text);\r\n        showPopupMessage(event.clientX, event.clientY, 'Скопировано в буфер', 'green')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToolButton \r\n                type='copy'\r\n                icon={copyIcon}\r\n                isActive={this.props.isActive}\r\n                onClick={this.copyTextArea}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolCopy;","export default __webpack_public_path__ + \"static/media/delete_icon.bce6056c.svg\";","export class LocalStorage {\r\n\r\n    remove(property) {\r\n        localStorage.removeItem(property)\r\n        localStorage.setItem([property], JSON.stringify({}))\r\n    }\r\n\r\n    checkLocalStorage() {\r\n        // localStorage.clear()\r\n        if (localStorage.recycle === undefined) {\r\n            localStorage.setItem('recycle', JSON.stringify({}))\r\n        } \r\n        // console.log(JSON.parse(localStorage.recycle))\r\n        return JSON.parse(localStorage.recycle)\r\n    }\r\n\r\n    loadToLocalStorage(addToRecycle) {\r\n        console.log(localStorage)\r\n        const itemForRecycle = this.makeItemForRecycle(addToRecycle)\r\n        let recycleContent = this.checkLocalStorage()\r\n        const nameForDeletedItem = itemForRecycle.deleteTime.toString()\r\n        recycleContent[nameForDeletedItem] = itemForRecycle\r\n        localStorage.setItem('recycle', JSON.stringify(recycleContent));\r\n        console.log(localStorage)\r\n    }\r\n\r\n    addTo(property, data) {\r\n        let content = this.loadFrom(property)\r\n        const nameForDeletedItem = data.deleteTime.toString()\r\n        content[nameForDeletedItem] = data\r\n        this.loadTo(property, content)\r\n    }\r\n\r\n    loadTo(property, content) {\r\n        localStorage.setItem(property, JSON.stringify(content));\r\n    }\r\n\r\n    loadFrom(property) {\r\n                // localStorage.clear()\r\n        // console.log(`try to load data from ${property}`)\r\n        if (localStorage[property] === undefined) {\r\n            localStorage.setItem([property], JSON.stringify({}))\r\n        } \r\n        return JSON.parse(localStorage[property])\r\n    }\r\n};\r\n\r\nexport default LocalStorage\r\n\r\n","export const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport deleteIcon from '../../images/delete_icon.svg'\r\nimport LocalStorage from '../../js/localStorage'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { months } from '../../js/constants'\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass ToolClear extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.clearTextArea = this.clearTextArea.bind(this); //это требуется чтобы не потерять котекст\r\n        this.makeItemForRecycle = this.makeItemForRecycle.bind(this); //это требуется чтобы не потерять котекст\r\n        this.createPopupContent = this.createPopupContent.bind(this); //это требуется чтобы не потерять котекст\r\n        this.state = {};\r\n    }\r\n\r\n    clearTextArea() {\r\n        if (Object.keys(newLocalStorage.loadFrom('recycle')).length >= 3) {\r\n            document.querySelector('.popup').classList.add('popup_active')\r\n            this.props.onPopupInit(this.createPopupContent())\r\n            return\r\n        }\r\n        let textAreaContent = document.querySelector('.text__input').value\r\n        let dataForRecycle = this.makeItemForRecycle(textAreaContent)\r\n        newLocalStorage.addTo('recycle', dataForRecycle)\r\n        document.querySelector('.text__input').value = ''\r\n        this.props.onChangeText();\r\n        this.props.onChangeInRecycle();\r\n    }\r\n\r\n    createPopupContent() {\r\n        let popupDOM = []\r\n        popupDOM.push(\r\n            <>\r\n                <p className='popup__text'>В корзине слишком много элементов</p>\r\n            </>\r\n        )\r\n        console.log(popupDOM)\r\n        return popupDOM\r\n    }\r\n\r\n    makeItemForRecycle(deletedText) {\r\n        const current = new Date();\r\n        const currentDate = current.getDate();\r\n        const currentMonth = months[current.getMonth()];\r\n        const currentYear = current.getFullYear();\r\n        const currentHours = current.getHours();\r\n        const currentMinutes = current.getMinutes();\r\n        if (currentMinutes.length === 1) {currentMinutes = `0${currentMinutes}`}\r\n        const currentMiliSeconds = Date.parse(current);\r\n        let textTitle = '';\r\n        (deletedText.length > 18) ? textTitle = deletedText.slice(0, 18).concat('...') : textTitle = deletedText\r\n        return {\r\n            deleteTime: currentMiliSeconds,\r\n            deletedPhrase: `Удалено ${currentDate} ${currentMonth} ${currentYear}г. в ${currentHours}:${currentMinutes}`,       \r\n            title: textTitle,\r\n            text: deletedText,\r\n            textLength: deletedText.length     \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToolButton \r\n                type='clear text area'\r\n                icon={deleteIcon}\r\n                isActive={this.props.isActive}\r\n                onClick={this.clearTextArea}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolClear;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './toolbar.scss'\r\nimport EditButton from '../ToolButton/ToolButton';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\nimport ToolPaste from '../ToolPaste/ToolPaste';\r\nimport ToolCopy from '../ToolCopy/ToolCopy';\r\nimport ToolClear from '../ToolClear/ToolClear';\r\n\r\n\r\nclass ToolBar extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {};\r\n        this.onChangeText = this.onChangeText.bind(this); //это требуется чтобы не потерять котекст в onChangeText\r\n        this.onChangeInRecycle = this.onChangeInRecycle.bind(this); //это требуется чтобы не потерять котекст в onChangeText\r\n        this.onPopupInit = this.onPopupInit.bind(this); //это требуется чтобы не потерять котекст в onChangeText\r\n    }\r\n\r\n    onChangeText() {\r\n        this.props.onChangeText(); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    onChangeInRecycle() {\r\n        console.log('toolbar on change in recycle')\r\n        this.props.onChangeInRecycle(); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    onPopupInit(popupContent) {\r\n        this.props.onPopupInit(popupContent)\r\n    }\r\n\r\n    render() {\r\n\r\n        let isTextAreaHasContent = true\r\n        let isClibBoardHasContent = true\r\n        if (this.props.text.length === 0) {\r\n            isTextAreaHasContent = false\r\n        }\r\n        navigator.clipboard.readText()\r\n        .then(text => {\r\n            if (text.length === 0) {\r\n                isClibBoardHasContent = false\r\n            }    \r\n        })\r\n        \r\n        return(\r\n            <div className='toolbar'>\r\n                <ToolCopy isActive={isTextAreaHasContent} onChangeText={this.onChangeText}/>\r\n                <ToolPaste isActive={isClibBoardHasContent} onChangeText={this.onChangeText}/>\r\n                <ToolClear isActive={isTextAreaHasContent} onChangeText={this.onChangeText} onChangeInRecycle={this.onChangeInRecycle} onPopupInit={this.onPopupInit}/>\r\n                <PopupMessage />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolBar;","export class Api {\r\n\r\n    constructor() {\r\n        this.state = {\r\n            template: 'https://fish-text.ru/get?type=paragraph&number=50' \r\n        }\r\n    };\r\n\r\n    request() {\r\n\r\n        return fetch(this.state.template)\r\n            .then((res) => {\r\n                console.log(`Status of API request ${res.status}`)\r\n                return res.json()\r\n            })\r\n            .then((result) => {\r\n                return result;\r\n            })\r\n    };\r\n\r\n}","export default __webpack_public_path__ + \"static/media/fish.51d9f3be.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport LocalStorage from '../../js/localStorage'\r\nimport './button.scss'\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass Button extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            type: this.props.type\r\n        };\r\n    }\r\n\r\n    iconRender() {\r\n        const iconClassName = `button__icon_${this.props.type}`\r\n        return (this.props.icon !== undefined ? \r\n            <img className={iconClassName} alt={this.props.icon} src={this.props.icon}></img> : null)\r\n        }\r\n\r\n    counterRender() {\r\n        return (this.props.counter !== undefined && this.props.counter !== 0 ? \r\n            <div className='button__counter'>{this.props.counter}</div> : null)\r\n        }\r\n\r\n    textRender() {\r\n        return (this.props.text !== undefined ? \r\n            this.props.text : null)\r\n        }\r\n    \r\n    render() {\r\n        const buttonClassName = `button button_${this.props.type}`\r\n        const background = this.props.color\r\n\r\n        return (\r\n            <button onClick={this.props.onClick} className={buttonClassName} style={{background: background}}>\r\n                {this.iconRender()}\r\n                {this.counterRender()}\r\n                {this.textRender()}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Api } from '../../js/api';\r\nimport { alphabet } from '../../js/constants';\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport fishicon from '../../images/fish.svg'\r\nimport Button from '../Button/Button'\r\nconst api = (template) => new Api(template);\r\n\r\n\r\nclass TextGenerator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popupWasShown: false\r\n        }\r\n\r\n        this.statCount = this.statCount.bind(this); //это требуется чтобы не потерять котекст\r\n        this.textGen = this.textGen.bind(this); //это требуется чтобы не потерять котекст\r\n        this.editText = this.editText.bind(this); //это требуется чтобы не потерять котекст\r\n        this.showPopup = this.showPopup.bind(this); //это требуется чтобы не потерять котекст\r\n    }\r\n\r\n    statCount() {\r\n        this.props.onChangeText();\r\n    }\r\n\r\n    editText(text) {\r\n        const textToReplace = /\\\\n\\\\n/g\r\n        let editedText = text.replace(textToReplace, '\\n')\r\n        document.querySelector('.text__input').value = editedText\r\n        this.statCount()\r\n    }\r\n\r\n    textGen(event) {\r\n        api('standings').request()\r\n            .then((result) => {\r\n                this.editText(result.text)\r\n            })\r\n            .catch(() => {\r\n                console.log('Error in server request')\r\n                showPopupMessage(event.clientX, event.clientY, 'Ошибка запроса к серверу fish-text.ru', 'red')\r\n            })\r\n    }\r\n\r\n    showPopup(event) {\r\n        showPopupMessage(event.clientX, event.clientY, 'генерировать рыбный текст', 'black')\r\n        this.setState({popupWasShown: true})\r\n        setTimeout(() => {\r\n            this.setState({popupWasShown: false})\r\n        }, 60000)\r\n    }\r\n\r\n    render() {\r\n        let showPopupFunc = this.showPopup\r\n        if (this.state.popupWasShown === true) {\r\n            showPopupFunc = null;\r\n        }\r\n        \r\n        return(\r\n            <Button \r\n                type='main' \r\n                color='red' \r\n                onClick={this.textGen} \r\n                icon={fishicon} \r\n                alt='fish text button'\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextGenerator;","export default __webpack_public_path__ + \"static/media/logo.4a5d448b.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './recycle-item.scss'\r\nimport LocalStorage from '../../js/localStorage'\r\nimport { rightWord } from '../../js/utilits/rightWord';\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass RecycleItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            key: this.props.keyProp,\r\n            title: this.props.title,\r\n            time: this.props.time,\r\n            length: this.props.length        \r\n        }\r\n\r\n        this.recover = this.recover.bind(this)\r\n        this.refreshStat = this.refreshStat.bind(this)\r\n    }\r\n\r\n    refreshStat() {\r\n        this.props.onChangeText();\r\n    }\r\n\r\n    recover() {\r\n        console.log(1)\r\n        const recycle = JSON.parse(localStorage.recycle)\r\n        document.querySelector('.text__input').value = recycle[this.state.key].text\r\n        this.refreshStat();\r\n    }\r\n\r\n    render() {\r\n        const key = this.props.keyProp\r\n        const title = this.props.title\r\n        const time = this.props.time\r\n        const length = this.props.length\r\n\r\n        return (\r\n            <div className='recycle-item' key={key}>\r\n                <button  className='recycle-item__button' onClick={this.recover}>\r\n                    <p className='recycle-item__title'>{title}</p>\r\n                    <p className='recycle-item__subtitle'>{rightWord(length, 'знак')}</p>\r\n                    <p className='recycle-item__subtitle'>{time}</p>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RecycleItem;","export default __webpack_public_path__ + \"static/media/recycle.e52d6c54.svg\";","export default __webpack_public_path__ + \"static/media/close.1287881a.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './button-close-popup.scss'\r\nimport closeIcon from '../../images/close.svg'\r\n\r\nclass ButtonClosePopup extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            type: this.props.type\r\n        };\r\n\r\n        this.close = this.close.bind(this)\r\n\r\n    }\r\n\r\n    close() {\r\n        document.querySelector(`.${this.props.classToClose}`).classList.remove(`${this.props.classToClose}_active`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={this.close} className='button-close-popup'>\r\n                <img src={closeIcon} alt=\"close\" />\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ButtonClosePopup;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './popup-title.scss'\r\n\r\nclass PopupTitle extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <p className='popup-title'>{this.props.title}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PopupTitle;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './recycle-bin.scss'\r\nimport LocalStorage from '../../js/localStorage'\r\nimport RecycleItem from '../RecycleItem/RecycleItem';\r\nimport Button from '../Button/Button'\r\nimport ButtonClosePopup from '../ButtonClosePopup/ButtonClosePopup';\r\nimport PopupTitle from '../PopupTitle/PopupTitle';\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass RecycleBin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            recycleContent: this.props.itemsInRecycle,\r\n        }\r\n\r\n        this.renderAllItems = this.renderAllItems.bind(this)\r\n        this.renderItem = this.renderItem.bind(this)\r\n        this.refreshRecycle = this.refreshRecycle.bind(this)\r\n        this.refreshStat = this.refreshStat.bind(this)\r\n        this.clearAll = this.clearAll.bind(this)\r\n    }\r\n\r\n    refreshRecycle() {\r\n        this.props.onChangeInRecycle();\r\n    }\r\n\r\n    refreshStat() {\r\n        this.props.onChangeText();\r\n    }\r\n\r\n    renderAllItems() {\r\n        const recycle = this.props.itemsInRecycle\r\n\r\n        let itemsDOM = [];\r\n        for (let item in recycle) {\r\n            itemsDOM.push(this.renderItem(recycle[item].deleteTime, recycle[item].title, recycle[item].deletedPhrase, recycle[item].textLength))\r\n        }\r\n        return itemsDOM\r\n    }\r\n\r\n    renderItem(key, title, time, length) {\r\n        return (\r\n            <RecycleItem keyProp={key} title={title} time={time} length={length} onChangeInRecycle={this.refreshRecycle} onChangeText={this.refreshStat}/>\r\n        )\r\n    }\r\n\r\n    renderClearAllButton() {\r\n        return (Object.keys(this.props.itemsInRecycle).length !== 0 ?\r\n        <Button type='text' color='red' onClick={this.clearAll} text='очистить корзину' alt='fish text button'/> : null)\r\n    }\r\n\r\n    clearAll() {\r\n        newLocalStorage.loadTo('recycle', {})\r\n        this.refreshRecycle()\r\n    }\r\n\r\n    render() {\r\n        let title = 'Корзина'\r\n        if (Object.keys(this.props.itemsInRecycle).length === 0) {\r\n            title = title.concat(' пуста')\r\n        }\r\n\r\n        return(\r\n            <div className='recycle-bin' onMouseLeave={this.closeAfterMouseLeaving} onMouseEnter={this.stopClosing}>\r\n                <PopupTitle title={title}/>\r\n                <ButtonClosePopup classToClose='recycle-bin'/>\r\n                {this.renderAllItems()}\r\n                {this.renderClearAllButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecycleBin;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport LocalStorage from '../../js/localStorage'\r\nimport RecoverButton from '../RecycleItem/RecycleItem';\r\n\r\nimport recycleicon from '../../images/recycle.svg'\r\nimport RecycleBin from '../RecycleBin/RecycleBin';\r\n\r\nimport Button from '../Button/Button'\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass RecycleButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            recycleContent: this.props.itemsInRecycle\r\n        }\r\n\r\n        this.showRecycleBin = this.showRecycleBin.bind(this)\r\n    }\r\n\r\n    showRecycleBin() {\r\n        document.querySelector('.recycle-bin').classList.add('recycle-bin_active')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button \r\n            type='main' \r\n            color='black' \r\n            onClick={this.showRecycleBin} \r\n            icon={recycleicon} \r\n            alt='recycle bin button'\r\n            counter={Object.keys(this.props.itemsInRecycle).length}\r\n        />)\r\n    }\r\n}\r\n\r\nexport default RecycleButton;","export default __webpack_public_path__ + \"static/media/logo_fb.903c5c0f.svg\";","export default __webpack_public_path__ + \"static/media/logo_github.e72b7d98.svg\";","export default __webpack_public_path__ + \"static/media/logo_linkedin.fddf28f9.svg\";","export default __webpack_public_path__ + \"static/media/logo_telegram.698c9376.svg\";","import React from 'react';\r\nimport './Footer.scss';\r\nimport facebookLogo from '../../images/logo_fb.svg'\r\nimport githubLogo from '../../images/logo_github.svg'\r\nimport linkedinLogo from '../../images/logo_linkedin.svg'\r\nimport telegramLogo from '../../images/logo_telegram.svg'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p className='footer__text'>Александр Афанасенко, 2020</p>\r\n      <div className='footer__social-links'>\r\n        <a className='footer__icon-link' href=\"https://www.facebook.com/sasaafanasienka\">\r\n            <img src={facebookLogo} alt=\"Facebook logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://github.com/sasaafanasienka\">\r\n            <img src={githubLogo} alt=\"Facebook logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://www.linkedin.com/in/александр-афанасенко-bb672b15a/\">\r\n            <img src={linkedinLogo} alt=\"LinkedIn logo\" />\r\n        </a>\r\n        <a className='footer__icon-link' href=\"https://t.me/sanya2020327\">\r\n            <img src={telegramLogo} alt=\"telegram logo\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ButtonClosePopup from '../ButtonClosePopup/ButtonClosePopup';\r\nimport PopupTitle from '../PopupTitle/PopupTitle';\r\n\r\nimport './popup.scss'\r\n\r\nclass Popup extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='popup'>\r\n                <PopupTitle title='Attention'/>\r\n                <ButtonClosePopup classToClose='popup' />\r\n                <p className='popup__text'>{this.props.text}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Popup;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Text from '../Text/Text';\r\nimport Stat from '../Stat/Stat';\r\nimport './main-content.scss'\r\nimport ToolBar from '../ToolBar/ToolBar';\r\nimport TextGenerator from '../TextGenerator/TextGenerator';\r\nimport headerLogo from '../../images/logo.svg';\r\nimport RecycleButton from '../RecycleButton/RecycleButton';\r\nimport RecycleBin from '../RecycleBin/RecycleBin';\r\nimport LocalStorage from '../../js/localStorage';\r\nimport Footer from '../Footer/Footer'\r\nimport Popup from '../Popup/Popup';\r\n\r\nconst newLocalStorage = new LocalStorage()\r\n\r\nclass MainContent extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.onChangeText = this.onChangeText.bind(this);\r\n        this.onChangeInRecycle = this.onChangeInRecycle.bind(this);\r\n        this.popupInit = this.popupInit.bind(this);\r\n        \r\n        if (localStorage.recycle === undefined) { //создаем корзину если она еще не создана\r\n            newLocalStorage.loadTo('recycle', {}) \r\n        }\r\n        \r\n        this.state = {\r\n            text: '',\r\n            recycle: newLocalStorage.loadFrom('recycle')            \r\n        };\r\n      }\r\n\r\n    onChangeText() {\r\n        let valueOfTextArea = document.querySelector('.text__input').value\r\n        this.setState({\r\n            text: valueOfTextArea,\r\n            popupContentDOM: []\r\n        })\r\n    }\r\n\r\n    onChangeInRecycle() {\r\n        const newRecycleData = newLocalStorage.loadFrom('recycle');\r\n        this.setState({\r\n            recycle: newRecycleData\r\n        })\r\n    }\r\n\r\n    popupInit(popupContent) {\r\n        console.log(popupContent)\r\n        this.setState({\r\n            textOnPopup: popupContent\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(`В корзине ${Object.keys(this.state.recycle).length} объектов`)\r\n        const recycleContent = this.state.recycle\r\n\r\n        return(\r\n            <div className='main-content'>\r\n                <div className='main-content__toolbar'>\r\n                    <img className='main-content__logo' alt='app logo' src={headerLogo} />\r\n                    <Stat text={this.state.text} onChangeText={this.onChangeText}/>\r\n                    <TextGenerator onChangeText={this.onChangeText}/>\r\n                    <RecycleButton itemsInRecycle={recycleContent} onChangeInRecycle={this.onChangeInRecycle}/>\r\n                </div>\r\n                <RecycleBin itemsInRecycle={recycleContent} onChangeInRecycle={this.onChangeInRecycle} onChangeText={this.onChangeText}/>\r\n                <Text onChangeText={this.onChangeText} text={this.state.text}/>\r\n                <ToolBar onChangeText={this.onChangeText} onChangeInRecycle={this.onChangeInRecycle} text={this.state.text} onPopupInit={this.popupInit}/>\r\n                <Popup text={this.state.textOnPopup}/>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainContent;","import './App.scss';\r\nimport MainContent from './components/MainContent/MainContent';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MainContent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './styles/variables.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}