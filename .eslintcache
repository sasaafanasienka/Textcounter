[{"D:\\FrontEnd\\06-text-counter\\src\\components\\Text\\Text.js":"1","D:\\FrontEnd\\06-text-counter\\src\\App.js":"2","D:\\FrontEnd\\06-text-counter\\src\\components\\Main\\Main.js":"3","D:\\FrontEnd\\06-text-counter\\src\\components\\Header\\Header.js":"4","D:\\FrontEnd\\06-text-counter\\src\\components\\Stat\\Stat.js":"5","D:\\FrontEnd\\06-text-counter\\src\\components\\Footer\\Footer.js":"6","D:\\FrontEnd\\06-text-counter\\src\\js\\constants.js":"7","D:\\FrontEnd\\06-text-counter\\src\\components\\PopupMessage\\PopupMessage.js":"8","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolPaste\\ToolPaste.js":"9","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolBar\\ToolBar.js":"10","D:\\FrontEnd\\06-text-counter\\src\\js\\localStorage.js":"11","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\rightWord.js":"12","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolClear\\ToolClear.js":"13","D:\\FrontEnd\\06-text-counter\\src\\index.js":"14","D:\\FrontEnd\\06-text-counter\\src\\components\\TextGenerator\\TextGenerator.js":"15","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits.js":"16","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolButton\\ToolButton.js":"17","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolCopy\\ToolCopy.js":"18","D:\\FrontEnd\\06-text-counter\\src\\reportWebVitals.js":"19","D:\\FrontEnd\\06-text-counter\\src\\components\\ToggleTheme\\ToggleTheme.js":"20","D:\\FrontEnd\\06-text-counter\\src\\contexts\\ThemeContext.js":"21","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\themeClassName.js":"22","D:\\FrontEnd\\06-text-counter\\src\\components\\About\\About.js":"23","D:\\FrontEnd\\06-text-counter\\src\\js\\aboutData.js":"24","D:\\FrontEnd\\06-text-counter\\src\\components\\Error\\Error.js":"25","D:\\FrontEnd\\06-text-counter\\src\\components\\Button\\Button.js":"26"},{"size":776,"mtime":1612707438125,"results":"27","hashOfConfig":"28"},{"size":1645,"mtime":1612961335381,"results":"29","hashOfConfig":"28"},{"size":794,"mtime":1616955719420,"results":"30","hashOfConfig":"28"},{"size":1295,"mtime":1612942773828,"results":"31","hashOfConfig":"28"},{"size":1826,"mtime":1612599319499,"results":"32","hashOfConfig":"28"},{"size":2543,"mtime":1616955719417,"results":"33","hashOfConfig":"28"},{"size":288,"mtime":1612703830933,"results":"34","hashOfConfig":"28"},{"size":507,"mtime":1616955719421,"results":"35","hashOfConfig":"28"},{"size":1333,"mtime":1612703814989,"results":"36","hashOfConfig":"28"},{"size":1988,"mtime":1612707544077,"results":"37","hashOfConfig":"28"},{"size":663,"mtime":1612725747048,"results":"38","hashOfConfig":"28"},{"size":1014,"mtime":1608896841278,"results":"39","hashOfConfig":"28"},{"size":751,"mtime":1612706301043,"results":"40","hashOfConfig":"28"},{"size":781,"mtime":1616955719434,"results":"41","hashOfConfig":"28"},{"size":1901,"mtime":1616956718688,"results":"42","hashOfConfig":"28"},{"size":868,"mtime":1609495242431,"results":"43","hashOfConfig":"28"},{"size":829,"mtime":1616955719425,"results":"44","hashOfConfig":"28"},{"size":967,"mtime":1616955719426,"results":"45","hashOfConfig":"28"},{"size":375,"mtime":1608733365293,"results":"46","hashOfConfig":"28"},{"size":807,"mtime":1612548474835,"results":"47","hashOfConfig":"28"},{"size":249,"mtime":1616955719427,"results":"48","hashOfConfig":"28"},{"size":239,"mtime":1612462339669,"results":"49","hashOfConfig":"28"},{"size":2296,"mtime":1612796573039,"results":"50","hashOfConfig":"28"},{"size":2196,"mtime":1616955719434,"results":"51","hashOfConfig":"28"},{"size":984,"mtime":1616955719414,"results":"52","hashOfConfig":"28"},{"size":937,"mtime":1612921686000,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"j9loub",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\FrontEnd\\06-text-counter\\src\\components\\Text\\Text.js",["121"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './text.scss'\r\n\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\n\r\nfunction Text(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    const inputClassName = themeClassName(themeData, 'text__input')\r\n\r\n    function sendTextToStatCount() {\r\n        props.onChangeText(document.querySelector('.text__input').value)\r\n    }\r\n\r\n    return(\r\n        <div className='text'>\r\n            <textarea onChange={sendTextToStatCount}\r\n                    className={inputClassName} \r\n                    type=\"text\" \r\n                    placeholder=\"Ваш текст\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text;",["122","123"],"D:\\FrontEnd\\06-text-counter\\src\\App.js",["124"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Main\\Main.js",["125","126"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Header\\Header.js",["127"],"import React from 'react';\r\nimport Stat from '../Stat/Stat';\r\nimport './header.scss'\r\nimport TextGenerator from '../TextGenerator/TextGenerator';\r\nimport headerLogo from '../../images/logo.svg';\r\nimport headerLogo_dark from '../../images/logo_dark.svg';\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    const classNameByTheme = themeClassName(themeData, 'header')\r\n    let logoImport\r\n    themeData.id === 0 ? logoImport = headerLogo : logoImport = headerLogo_dark\r\n\r\n    if (props.onlyLogo) { \r\n        return(\r\n            <header className={classNameByTheme}>\r\n                <Link to={`/`}><img className='header__logo' alt='app logo' src={logoImport} /></Link>\r\n            </header>\r\n        )\r\n    } else {\r\n        return(\r\n            <header className={classNameByTheme}>\r\n                <Link to={`/`}><img className='header__logo' alt='app logo' src={logoImport} /></Link>\r\n                <Stat textValue={props.textValue} />\r\n                <TextGenerator onChangeText={props.onChangeText}/>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;",["128","129"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Stat\\Stat.js",["130"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stat.scss'\r\nimport '../../styles/main.scss'\r\nimport { rightWord } from '../../js/utilits/rightWord'\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\n\r\nfunction Stat(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    const numbersClassName = themeClassName(themeData, 'stat__number')\r\n\r\n    function symbolsCount() {\r\n        const text = props.textValue\r\n        return text.length\r\n    }\r\n\r\n    function wordsCount() {\r\n        const paragraphSymbol = /\\n/g\r\n        const text = props.textValue.toLowerCase().replace(paragraphSymbol, ' ')\r\n        const words = text.split(' ').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return words.length      \r\n    }\r\n\r\n    function paragraphsCount() {\r\n        const text = props.textValue\r\n        const paragraphs = text.split('\\n').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return paragraphs.length      \r\n    }\r\n\r\n    return(\r\n        <div className='stat'>\r\n            <p className={numbersClassName}>{rightWord(symbolsCount(), 'знак')}</p>\r\n            <p className={numbersClassName}>{rightWord(wordsCount(), 'слово')}</p>\r\n            <p className={numbersClassName}>{rightWord(paragraphsCount(), 'абзац')}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Stat;",["131","132"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Footer\\Footer.js",[],"D:\\FrontEnd\\06-text-counter\\src\\js\\constants.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\PopupMessage\\PopupMessage.js",["133"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolPaste\\ToolPaste.js",["134"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport pasteIconLight from '../../images/paste_icon_light.svg'\r\nimport pasteIconDark from '../../images/paste_icon_dark.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { popupColors } from '../../js/constants';\r\n\r\nfunction ToolPaste(props) {\r\n   \r\n    let pasteIcon\r\n    props.theme === 'light' ? pasteIcon = pasteIconLight : pasteIcon = pasteIconDark\r\n\r\n    function pasteInTextArea(event) {\r\n\r\n        navigator.clipboard.readText()\r\n        .then(text => {\r\n            document.querySelector('.text__input').value = text\r\n            sendTextToStatCount(text)\r\n        }).then(() => {\r\n            if (document.querySelector('.text__input').value.length === 0) {\r\n                console.log(popupColors.red)\r\n                showPopupMessage(event.clientX, event.clientY, 'ошибка, возможно в буфере находится не текст', popupColors.red)\r\n            }\r\n        })\r\n    }\r\n    \r\n    function sendTextToStatCount(text) {\r\n        props.onChangeText(text)\r\n    }\r\n\r\n    return (\r\n    <ToolButton \r\n        type='paste'\r\n        icon={pasteIcon}\r\n        isActive={props.isActive}\r\n        onClick={pasteInTextArea}\r\n    />\r\n    )\r\n}\r\n\r\nexport default ToolPaste;","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolBar\\ToolBar.js",["135"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\nimport ToolPaste from '../ToolPaste/ToolPaste';\r\nimport ToolCopy from '../ToolCopy/ToolCopy';\r\nimport ToolClear from '../ToolClear/ToolClear';\r\nimport ToggleTheme from '../ToggleTheme/ToggleTheme';\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\nimport './toolbar.scss'\r\n\r\nfunction ToolBar(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    let themeProp\r\n    themeData.id === 0 ? themeProp = 'light' : themeProp = 'dark' \r\n\r\n    function onChangeText(text) {\r\n        props.onChangeText(text); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    function onChangeInRecycle() {\r\n        console.log('toolbar on change in recycle')\r\n        props.onChangeInRecycle(); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    function onPopupInit(popupContent) {\r\n        props.onPopupInit(popupContent)\r\n    }\r\n\r\n    let isTextAreaHasContent = true\r\n\r\n    let isClibBoardHasContent = true\r\n    if (props.textValue.length === 0) {\r\n        isTextAreaHasContent = false\r\n    }\r\n    navigator.clipboard.readText()\r\n    .then(text => {\r\n        if (text.length === 0) {\r\n            isClibBoardHasContent = false\r\n        }    \r\n    })\r\n    \r\n    return(\r\n        <div className='toolbar'>\r\n            <ToggleTheme onChangeTheme={props.onChangeTheme}/>\r\n            <ToolCopy theme={themeProp} isActive={isTextAreaHasContent} onChangeText={onChangeText}/>\r\n            <ToolPaste theme={themeProp} isActive={isClibBoardHasContent} onChangeText={onChangeText}/>\r\n            <ToolClear theme={themeProp} isActive={isTextAreaHasContent} onChangeText={onChangeText} onChangeInRecycle={onChangeInRecycle} onPopupInit={onPopupInit}/>\r\n            <PopupMessage />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolBar;",["136","137"],"D:\\FrontEnd\\06-text-counter\\src\\js\\localStorage.js",[],["138","139"],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\rightWord.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolClear\\ToolClear.js",["140"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport deleteIconLight from '../../images/delete_icon_light.svg'\r\nimport deleteIconDark from '../../images/delete_icon_dark.svg'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\n\r\nfunction ToolClear(props) {\r\n\r\n    let deleteIcon\r\n    props.theme === 'light' ? deleteIcon = deleteIconLight : deleteIcon = deleteIconDark\r\n\r\n    function clearTextArea() {\r\n        document.querySelector('.text__input').value = ''\r\n        props.onChangeText('');\r\n    }\r\n\r\n    return (\r\n        <ToolButton \r\n            type='clear text area'\r\n            icon={deleteIcon}\r\n            isActive={props.isActive}\r\n            onClick={clearTextArea}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ToolClear;","D:\\FrontEnd\\06-text-counter\\src\\index.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\TextGenerator\\TextGenerator.js",["141"],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolButton\\ToolButton.js",["142"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolCopy\\ToolCopy.js",["143"],"D:\\FrontEnd\\06-text-counter\\src\\reportWebVitals.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToggleTheme\\ToggleTheme.js",["144"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport darkThemeIcon from '../../images/darktheme_icon.svg'\r\nimport lightThemeIcon from '../../images/lighttheme_icon.svg'\r\n\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\n\r\nfunction ToggleTheme(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext)\r\n    let icon\r\n    themeData.id === 0 ? icon = darkThemeIcon : icon = lightThemeIcon\r\n\r\n    function toggle() {\r\n        themeData.id === 0 ? props.onChangeTheme('dark') : props.onChangeTheme('light')  \r\n    }\r\n\r\n    return(\r\n        <ToolButton \r\n            type='toggle theme'\r\n            icon={icon}\r\n            isActive = {true}\r\n            onClick={toggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ToggleTheme;",["145","146"],"D:\\FrontEnd\\06-text-counter\\src\\contexts\\ThemeContext.js",[],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\themeClassName.js",[],["147","148"],"D:\\FrontEnd\\06-text-counter\\src\\components\\About\\About.js",["149"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './about.scss'\r\nimport avatarAuthor from '../../images/avatar.jpg';\r\nimport avatarProject from '../../images/logo_avatar.svg';\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\nimport { aboutData } from '../../js/aboutData';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction About(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n\r\n    const data = aboutData[props.content]\r\n    let avatar\r\n    props.content === 'about-author' ? avatar = avatarAuthor : avatar = avatarProject\r\n\r\n    return(\r\n        <div className={themeClassName(themeData, 'about')}>\r\n            <img className='about__avatar' src={avatar} alt=\"Фото автора\" />\r\n            <div className='about__text-container'>\r\n                <h1 className={themeClassName(themeData, 'about__title')}>{data.title}</h1>\r\n                <h2 className={themeClassName(themeData, 'about__subtitle')}>{data.subtitle}</h2>\r\n                <h2 className={themeClassName(themeData, 'about__mini-subtitle')}>{data.minisubtitle1}</h2>\r\n                <p className={themeClassName(themeData, 'about__text')}>{data.text1}</p>\r\n                <h2 className={themeClassName(themeData, 'about__mini-subtitle')}>{data.minisubtitle2}</h2>\r\n                <p className={themeClassName(themeData, 'about__text')}>{data.text2}</p>\r\n                <h2 className={themeClassName(themeData, 'about__mini-subtitle')}>{data.minisubtitle3}</h2>\r\n                <p className={themeClassName(themeData, 'about__text')}>{data.text3}</p>\r\n                <h2 className={themeClassName(themeData, 'about__mini-subtitle')}>{data.minisubtitle4}</h2>\r\n                <p className={themeClassName(themeData, 'about__text')}>{data.text4}</p>\r\n                <h2 className={themeClassName(themeData, 'about__mini-subtitle')}>{data.minisubtitle5}</h2>\r\n                <p className={themeClassName(themeData, 'about__text')}>{data.text5}</p>\r\n                <Link to=\"/\" className='footer__link'>\r\n                    <p className={themeClassName(themeData, 'footer__text')}>назад</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","D:\\FrontEnd\\06-text-counter\\src\\js\\aboutData.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\Error\\Error.js",["150"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Button\\Button.js",["151"],{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"160","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"161","line":9,"column":10,"nodeType":"154","messageId":"155","endLine":9,"endColumn":15},{"ruleId":"156","replacedBy":"162"},{"ruleId":"158","replacedBy":"163"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"156","replacedBy":"164"},{"ruleId":"158","replacedBy":"165"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"156","replacedBy":"166"},{"ruleId":"158","replacedBy":"167"},{"ruleId":"156","replacedBy":"168"},{"ruleId":"158","replacedBy":"169"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"170","line":58,"column":9},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"156","replacedBy":"171"},{"ruleId":"158","replacedBy":"172"},{"ruleId":"156","replacedBy":"173"},{"ruleId":"158","replacedBy":"174"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"'useEffect' is defined but never used.","'Route' is defined but never used.",["175"],["176"],["175"],["176"],["175"],["176"],["175"],["176"],"Parsing error: Unexpected token\n\n  56 |             //     alt='fish text button'\n  57 |             // />\n> 58 |         )\n     |         ^\n  59 |     }\n  60 | }\n  61 |",["175"],["176"],["175"],["176"],"no-global-assign","no-unsafe-negation"]