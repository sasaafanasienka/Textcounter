[{"D:\\FrontEnd\\06-text-counter\\src\\components\\Text\\Text.js":"1","D:\\FrontEnd\\06-text-counter\\src\\contexts\\TextContext.js":"2","D:\\FrontEnd\\06-text-counter\\src\\App.js":"3","D:\\FrontEnd\\06-text-counter\\src\\components\\Main\\Main.js":"4","D:\\FrontEnd\\06-text-counter\\src\\components\\Header\\Header.js":"5","D:\\FrontEnd\\06-text-counter\\src\\components\\Stat\\Stat.js":"6","D:\\FrontEnd\\06-text-counter\\src\\components\\Footer\\Footer.js":"7","D:\\FrontEnd\\06-text-counter\\src\\js\\constants.js":"8","D:\\FrontEnd\\06-text-counter\\src\\components\\PopupMessage\\PopupMessage.js":"9","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolPaste\\ToolPaste.js":"10","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolBar\\ToolBar.js":"11","D:\\FrontEnd\\06-text-counter\\src\\js\\localStorage.js":"12","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\rightWord.js":"13","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolClear\\ToolClear.js":"14","D:\\FrontEnd\\06-text-counter\\src\\index.js":"15","D:\\FrontEnd\\06-text-counter\\src\\components\\TextGenerator\\TextGenerator.js":"16","D:\\FrontEnd\\06-text-counter\\src\\components\\Button\\Button.js":"17","D:\\FrontEnd\\06-text-counter\\src\\components\\ButtonClosePopup\\ButtonClosePopup.js":"18","D:\\FrontEnd\\06-text-counter\\src\\components\\Popup\\Popup.js":"19","D:\\FrontEnd\\06-text-counter\\src\\components\\AboutAuthor\\AboutAuthor.js":"20","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits.js":"21","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolButton\\ToolButton.js":"22","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolCopy\\ToolCopy.js":"23","D:\\FrontEnd\\06-text-counter\\src\\reportWebVitals.js":"24","D:\\FrontEnd\\06-text-counter\\src\\components\\ToggleTheme\\ToggleTheme.js":"25","D:\\FrontEnd\\06-text-counter\\src\\contexts\\ThemeContext.js":"26","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\themeClassName.js":"27"},{"size":1412,"mtime":1612599002637,"results":"28","hashOfConfig":"29"},{"size":205,"mtime":1612348546078,"results":"30","hashOfConfig":"29"},{"size":1086,"mtime":1612703245065,"results":"31","hashOfConfig":"29"},{"size":2302,"mtime":1612706754701,"results":"32","hashOfConfig":"29"},{"size":1102,"mtime":1612706773280,"results":"33","hashOfConfig":"29"},{"size":1826,"mtime":1612599319499,"results":"34","hashOfConfig":"29"},{"size":2244,"mtime":1612551576865,"results":"35","hashOfConfig":"29"},{"size":288,"mtime":1612703830933,"results":"36","hashOfConfig":"29"},{"size":507,"mtime":1612689102868,"results":"37","hashOfConfig":"29"},{"size":1333,"mtime":1612703814989,"results":"38","hashOfConfig":"29"},{"size":2044,"mtime":1612705078702,"results":"39","hashOfConfig":"29"},{"size":1619,"mtime":1609491769519,"results":"40","hashOfConfig":"29"},{"size":1014,"mtime":1608896841278,"results":"41","hashOfConfig":"29"},{"size":751,"mtime":1612706301043,"results":"42","hashOfConfig":"29"},{"size":757,"mtime":1612172615862,"results":"43","hashOfConfig":"29"},{"size":3148,"mtime":1612608271744,"results":"44","hashOfConfig":"29"},{"size":970,"mtime":1612169483664,"results":"45","hashOfConfig":"29"},{"size":762,"mtime":1608996526111,"results":"46","hashOfConfig":"29"},{"size":572,"mtime":1612706730284,"results":"47","hashOfConfig":"29"},{"size":648,"mtime":1612181979784,"results":"48","hashOfConfig":"29"},{"size":868,"mtime":1609495242431,"results":"49","hashOfConfig":"29"},{"size":829,"mtime":1609863969593,"results":"50","hashOfConfig":"29"},{"size":967,"mtime":1612689376288,"results":"51","hashOfConfig":"29"},{"size":375,"mtime":1608733365293,"results":"52","hashOfConfig":"29"},{"size":807,"mtime":1612548474835,"results":"53","hashOfConfig":"29"},{"size":521,"mtime":1612461055358,"results":"54","hashOfConfig":"29"},{"size":239,"mtime":1612462339669,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"j9loub",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"D:\\FrontEnd\\06-text-counter\\src\\components\\Text\\Text.js",["130","131","132"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './text.scss'\r\nimport EditButton from '../ToolButton/ToolButton';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\n\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\n\r\nfunction Text(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    const inputClassName = themeClassName(themeData, 'text__input')\r\n\r\n    function sendTextToStatCount() {\r\n        props.onChangeText(document.querySelector('.text__input').value)\r\n    }\r\n    // function statCount() {\r\n    //     clearTimeout(this.state.timerId)\r\n    //     document.querySelector('.stat').style.opacity = '0.3'\r\n    //     const timerId = setTimeout(() => {\r\n    //         this.props.onChangeText()\r\n    //         document.querySelector('.stat').style.opacity = '1'\r\n    //     }, 250)\r\n    //     this.setState({timerId: timerId})    \r\n    // }\r\n\r\n    // function statChanging() {\r\n    //     // setText('Жопа')\r\n    //     setText(document.querySelector('.text__input').value)\r\n    // }\r\n\r\n    return(\r\n        <div className='text'>\r\n            <textarea onChange={sendTextToStatCount}\r\n                    className={inputClassName} \r\n                    type=\"text\" \r\n                    placeholder=\"Ваш текст\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text;",["133","134"],"D:\\FrontEnd\\06-text-counter\\src\\contexts\\TextContext.js",[],["135","136"],"D:\\FrontEnd\\06-text-counter\\src\\App.js",["137"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Main\\Main.js",["138","139","140","141","142","143"],"import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Text from '../Text/Text';\r\nimport Stat from '../Stat/Stat';\r\nimport './main.scss'\r\nimport ToolBar from '../ToolBar/ToolBar';\r\nimport TextGenerator from '../TextGenerator/TextGenerator';\r\nimport headerLogo from '../../images/logo.svg';\r\nimport LocalStorage from '../../js/localStorage';\r\nimport Footer from '../Footer/Footer'\r\nimport Popup from '../Popup/Popup';\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\n\r\nconst newLocalStorage = new LocalStorage()\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    if (localStorage.recycle === undefined) { //создаем корзину если она еще не создана\r\n        newLocalStorage.loadTo('recycle', {}) \r\n    }\r\n    const themeData = React.useContext(ThemeContext);\r\n    const mainClassName = themeClassName(themeData, 'main')\r\n\r\n    // function onChangeText() {\r\n    //     let valueOfTextArea = document.querySelector('.text__input').value\r\n    //     this.setState({\r\n    //         text: valueOfTextArea,\r\n    //     })\r\n    // }\r\n\r\n    // function onChangeInRecycle() {\r\n    //     const newRecycleData = newLocalStorage.loadFrom('recycle');\r\n    //     this.setState({\r\n    //         recycle: newRecycleData\r\n    //     })\r\n    // }\r\n\r\n    // function popupInit(popupContent) {\r\n    //     console.log(popupContent)\r\n    //     this.setState({\r\n    //         contentOnPopup: popupContent\r\n    //     })\r\n    // }\r\n\r\n    // console.log(`В корзине ${Object.keys(this.state.recycle).length} объектов`)\r\n    // const recycleContent = this.state.recycle\r\n\r\n    return(\r\n        <div className={mainClassName}>\r\n            {/* <RecycleBin itemsInRecycle={'recycleContent'} onChangeInRecycle={this.onChangeInRecycle} onChangeText={this.onChangeText}/> */}\r\n            <Text onChangeText={props.onChangeText}/>\r\n            <ToolBar textValue={props.textValue} onChangeTheme={props.onChangeTheme} onChangeText={props.onChangeText}/>\r\n            {/* <ToolBar onChangeText={this.onChangeText} onChangeInRecycle={this.onChangeInRecycle} text={this.state.text} onPopupInit={this.popupInit}/> */}\r\n            <Footer />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Main;","D:\\FrontEnd\\06-text-counter\\src\\components\\Header\\Header.js",["144"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Stat\\Stat.js",["145"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stat.scss'\r\nimport '../../styles/main.scss'\r\nimport { rightWord } from '../../js/utilits/rightWord'\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\n\r\nfunction Stat(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    const numbersClassName = themeClassName(themeData, 'stat__number')\r\n\r\n    function symbolsCount() {\r\n        const text = props.textValue\r\n        return text.length\r\n    }\r\n\r\n    function wordsCount() {\r\n        const paragraphSymbol = /\\n/g\r\n        const text = props.textValue.toLowerCase().replace(paragraphSymbol, ' ')\r\n        const words = text.split(' ').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return words.length      \r\n    }\r\n\r\n    function paragraphsCount() {\r\n        const text = props.textValue\r\n        const paragraphs = text.split('\\n').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return paragraphs.length      \r\n    }\r\n\r\n    return(\r\n        <div className='stat'>\r\n            <p className={numbersClassName}>{rightWord(symbolsCount(), 'знак')}</p>\r\n            <p className={numbersClassName}>{rightWord(wordsCount(), 'слово')}</p>\r\n            <p className={numbersClassName}>{rightWord(paragraphsCount(), 'абзац')}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Stat;","D:\\FrontEnd\\06-text-counter\\src\\components\\Footer\\Footer.js",[],["146","147"],"D:\\FrontEnd\\06-text-counter\\src\\js\\constants.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\PopupMessage\\PopupMessage.js",["148"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolPaste\\ToolPaste.js",["149"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport pasteIconLight from '../../images/paste_icon_light.svg'\r\nimport pasteIconDark from '../../images/paste_icon_dark.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { popupColors } from '../../js/constants';\r\n\r\nfunction ToolPaste(props) {\r\n   \r\n    let pasteIcon\r\n    props.theme === 'light' ? pasteIcon = pasteIconLight : pasteIcon = pasteIconDark\r\n\r\n    function pasteInTextArea(event) {\r\n\r\n        navigator.clipboard.readText()\r\n        .then(text => {\r\n            document.querySelector('.text__input').value = text\r\n            sendTextToStatCount(text)\r\n        }).then(() => {\r\n            if (document.querySelector('.text__input').value.length === 0) {\r\n                console.log(popupColors.red)\r\n                showPopupMessage(event.clientX, event.clientY, 'ошибка, возможно в буфере находится не текст', popupColors.red)\r\n            }\r\n        })\r\n    }\r\n    \r\n    function sendTextToStatCount(text) {\r\n        props.onChangeText(text)\r\n    }\r\n\r\n    return (\r\n    <ToolButton \r\n        type='paste'\r\n        icon={pasteIcon}\r\n        isActive={props.isActive}\r\n        onClick={pasteInTextArea}\r\n    />\r\n    )\r\n}\r\n\r\nexport default ToolPaste;","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolBar\\ToolBar.js",["150","151"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './toolbar.scss'\r\nimport EditButton from '../ToolButton/ToolButton';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\nimport ToolPaste from '../ToolPaste/ToolPaste';\r\nimport ToolCopy from '../ToolCopy/ToolCopy';\r\nimport ToolClear from '../ToolClear/ToolClear';\r\nimport ToggleTheme from '../ToggleTheme/ToggleTheme';\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\n\r\n\r\nfunction ToolBar(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext);\r\n    let themeProp\r\n    themeData.id === 0 ? themeProp = 'light' : themeProp = 'dark' \r\n\r\n    function onChangeText(text) {\r\n        props.onChangeText(text); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    function onChangeInRecycle() {\r\n        console.log('toolbar on change in recycle')\r\n        props.onChangeInRecycle(); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    function onPopupInit(popupContent) {\r\n        props.onPopupInit(popupContent)\r\n    }\r\n\r\n    let isTextAreaHasContent = true\r\n\r\n    let isClibBoardHasContent = true\r\n    if (props.textValue.length === 0) {\r\n        isTextAreaHasContent = false\r\n    }\r\n    navigator.clipboard.readText()\r\n    .then(text => {\r\n        if (text.length === 0) {\r\n            isClibBoardHasContent = false\r\n        }    \r\n    })\r\n    \r\n    return(\r\n        <div className='toolbar'>\r\n            <ToggleTheme onChangeTheme={props.onChangeTheme}/>\r\n            <ToolCopy theme={themeProp} isActive={isTextAreaHasContent} onChangeText={onChangeText}/>\r\n            <ToolPaste theme={themeProp} isActive={isClibBoardHasContent} onChangeText={onChangeText}/>\r\n            <ToolClear theme={themeProp} isActive={isTextAreaHasContent} onChangeText={onChangeText} onChangeInRecycle={onChangeInRecycle} onPopupInit={onPopupInit}/>\r\n            <PopupMessage />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolBar;","D:\\FrontEnd\\06-text-counter\\src\\js\\localStorage.js",[],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\rightWord.js",[],["152","153"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolClear\\ToolClear.js",["154"],"D:\\FrontEnd\\06-text-counter\\src\\index.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\TextGenerator\\TextGenerator.js",["155","156"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport fishicon from '../../images/fish.svg'\r\nimport Button from '../Button/Button'\r\nimport axios from 'axios'\r\n// import { ThemeContext } from '../../contexts/ThemeContext'\r\n\r\n// const api = (template) => new Api(template);\r\nconst API = 'https://fish-text.ru/get?type=paragraph&number=10'\r\n\r\nclass TextGenerator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n        this.textGen = this.textGen.bind(this)\r\n        this.editText = this.editText.bind(this)\r\n        this.sendTextToStatCount = this.sendTextToStatCount.bind(this)\r\n    }\r\n\r\n    sendTextToStatCount(text) {\r\n        this.props.onChangeText(text)\r\n    }\r\n    \r\n    editText(text) {\r\n        const textToReplace = /\\\\n\\\\n/g\r\n        let editedText = text.replace(textToReplace, '\\n')\r\n        return editedText\r\n    }\r\n    \r\n    textGen() {\r\n        axios.get(API)\r\n            .then((res) => {\r\n                const editedText = this.editText(res.data.text)\r\n                document.querySelector('.text__input').value = document.querySelector('.text__input').value + editedText\r\n                this.sendTextToStatCount(document.querySelector('.text__input').value)\r\n            })\r\n            .catch(() => {\r\n                console.log('Error in server request')\r\n                // showPopupMessage(event.clientX, event.clientY, 'Ошибка запроса к серверу fish-text.ru', 'red')\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button \r\n                type='main' \r\n                color='red' \r\n                onClick={this.textGen} \r\n                icon={fishicon} \r\n                alt='fish text button'\r\n            />\r\n        )\r\n    }\r\n\r\n    // const themeData = React.useContext(ThemeContext);\r\n    // let buttonColor\r\n    // themeData.id === 0 ? buttonColor = 'red' : buttonColor = '#b10000'\r\n\r\n\r\n    // textGen(event) {\r\n    //     api('standings').request()\r\n    //         .then((result) => {\r\n    //             editText(result.text)\r\n    //         })\r\n    //         .catch(() => {\r\n    //             console.log('Error in server request')\r\n    //             // showPopupMessage(event.clientX, event.clientY, 'Ошибка запроса к серверу fish-text.ru', 'red')\r\n    //         })\r\n    // }\r\n\r\n\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    //     this.state = {\r\n    //         popupWasShown: false\r\n    //     }\r\n\r\n    // }\r\n\r\n    // statCount() {\r\n    //     this.props.onChangeText();\r\n    // }\r\n\r\n\r\n    // showPopup(event) {\r\n    //     showPopupMessage(event.clientX, event.clientY, 'генерировать рыбный текст', 'black')\r\n    //     this.setState({popupWasShown: true})\r\n    //     setTimeout(() => {\r\n    //         this.setState({popupWasShown: false})\r\n    //     }, 60000)\r\n    // }\r\n\r\n    // let showPopupFunc = this.showPopup\r\n    // if (this.state.popupWasShown === true) {\r\n    //     showPopupFunc = null;\r\n    // }\r\n    \r\n}\r\n\r\nexport default TextGenerator;","D:\\FrontEnd\\06-text-counter\\src\\components\\Button\\Button.js",["157"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './button.scss'\r\n\r\nfunction Button(props) {\r\n\r\n    function iconRender() {\r\n        const iconClassName = `button__icon_${props.type}`\r\n        return (props.icon ? \r\n            <img className={iconClassName} alt={props.icon} src={props.icon}></img> : null)\r\n        }\r\n\r\n    function counterRender() {\r\n        return (props.counter && props.counter !== 0 ? \r\n            <div className='button__counter'>{props.counter}</div> : null)\r\n        }\r\n\r\n    function textRender() {\r\n        return (props.text ? props.text : null)\r\n        }\r\n    \r\n    const buttonClassName = `button button_${props.type}`\r\n    const background = props.color\r\n\r\n    return (\r\n        <button onClick={props.onClick} className={buttonClassName} style={{background: background}}>\r\n            {iconRender()}\r\n            {counterRender()}\r\n            {textRender()}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;",["158","159"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ButtonClosePopup\\ButtonClosePopup.js",["160"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './button-close-popup.scss'\r\nimport closeIcon from '../../images/close.svg'\r\n\r\nclass ButtonClosePopup extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            type: this.props.type\r\n        };\r\n\r\n        this.close = this.close.bind(this)\r\n\r\n    }\r\n\r\n    close() {\r\n        document.querySelector(`.${this.props.classToClose}`).classList.remove(`${this.props.classToClose}_active`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={this.close} className='button-close-popup'>\r\n                <img src={closeIcon} alt=\"close\" />\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ButtonClosePopup;",["161","162"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Popup\\Popup.js",["163","164"],"D:\\FrontEnd\\06-text-counter\\src\\components\\AboutAuthor\\AboutAuthor.js",["165"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './about-author.scss'\r\nimport avatar from '../../images/avatar.jpg';\r\n\r\n\r\n\r\nfunction AboutAuthor() {\r\n\r\n    return(\r\n        <div className='about-author'>\r\n            <img className='about-author__avatar' src={avatar} alt=\"Фото автора\" />\r\n            <h1 className='about-author__title'> Александр Афанасенко </h1>\r\n            <h2 className='about-author__subtitle'> Junior Frontend-разработчик </h2>\r\n            <a href=\"./\"><p className='footer__text'>Главная</p></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutAuthor;","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolButton\\ToolButton.js",["166"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tool-button.sass'\r\n\r\nclass ToolButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        let className = 'tool-button'\r\n        let functionToAction = null\r\n        if (this.props.isActive === true) {\r\n            className = 'tool-button tool-button_active'\r\n            functionToAction = this.props.onClick\r\n        } \r\n\r\n        return(\r\n            <button className={className}>\r\n                <img className='tool-button__icon'\r\n                    onClick={functionToAction}\r\n                    src={this.props.icon} \r\n                    alt={this.props.type}>\r\n                </img>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolButton;","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolCopy\\ToolCopy.js",["167"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport copyIconLight from '../../images/copy_icon_light.svg'\r\nimport copyIconDark from '../../images/copy_icon_dark.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { popupColors } from '../../js/constants';\r\n\r\nfunction ToolCopy(props) {\r\n\r\n    let copyIcon\r\n    props.theme === 'light' ? copyIcon = copyIconLight : copyIcon = copyIconDark\r\n\r\n    function copyTextArea(event) {\r\n        const text = document.querySelector('.text__input').value\r\n        navigator.clipboard.writeText(text);\r\n        showPopupMessage(event.clientX, event.clientY, 'Скопировано в буфер', popupColors.green)\r\n    }\r\n\r\n    return (\r\n        <ToolButton \r\n            type='copy'\r\n            icon={copyIcon}\r\n            isActive={props.isActive}\r\n            onClick={copyTextArea}\r\n        />\r\n    )\r\n    \r\n}\r\n\r\nexport default ToolCopy;",["168","169"],"D:\\FrontEnd\\06-text-counter\\src\\reportWebVitals.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToggleTheme\\ToggleTheme.js",["170"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport darkThemeIcon from '../../images/darktheme_icon.svg'\r\nimport lightThemeIcon from '../../images/lighttheme_icon.svg'\r\n\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\n\r\nfunction ToggleTheme(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext)\r\n    let icon\r\n    themeData.id === 0 ? icon = darkThemeIcon : icon = lightThemeIcon\r\n\r\n    function toggle() {\r\n        themeData.id === 0 ? props.onChangeTheme('dark') : props.onChangeTheme('light')  \r\n    }\r\n\r\n    return(\r\n        <ToolButton \r\n            type='toggle theme'\r\n            icon={icon}\r\n            isActive = {true}\r\n            onClick={toggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ToggleTheme;",["171","172"],"D:\\FrontEnd\\06-text-counter\\src\\contexts\\ThemeContext.js",[],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\themeClassName.js",[],{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"177","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":18},{"ruleId":"173","severity":1,"message":"178","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":20},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"183"},{"ruleId":"181","replacedBy":"184"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"185","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"186","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":12},{"ruleId":"173","severity":1,"message":"187","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":21},{"ruleId":"173","severity":1,"message":"188","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":18},{"ruleId":"173","severity":1,"message":"189","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":13},{"ruleId":"173","severity":1,"message":"190","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"179","replacedBy":"191"},{"ruleId":"181","replacedBy":"192"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"177","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":18},{"ruleId":"179","replacedBy":"193"},{"ruleId":"181","replacedBy":"194"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"195","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"179","replacedBy":"196"},{"ruleId":"181","replacedBy":"197"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"179","replacedBy":"198"},{"ruleId":"181","replacedBy":"199"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"200","severity":2,"message":"201","line":17,"column":18,"nodeType":"202","endLine":17,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"179","replacedBy":"203"},{"ruleId":"181","replacedBy":"204"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"179","replacedBy":"205"},{"ruleId":"181","replacedBy":"206"},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'EditButton' is defined but never used.","'PopupMessage' is defined but never used.","no-native-reassign",["207"],"no-negated-in-lhs",["208"],["207"],["208"],"'useEffect' is defined but never used.","'Stat' is defined but never used.","'TextGenerator' is defined but never used.","'headerLogo' is defined but never used.","'Popup' is defined but never used.","'LocalStorage' is defined but never used.",["207"],["208"],["207"],["208"],"'showPopupMessage' is defined but never used.",["207"],["208"],["207"],["208"],"react/jsx-no-undef","'PopupTitle' is not defined.","JSXIdentifier",["207"],["208"],["207"],["208"],"no-global-assign","no-unsafe-negation"]