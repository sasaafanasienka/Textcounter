[{"D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleBin\\RecycleBin.js":"1","D:\\FrontEnd\\06-text-counter\\src\\components\\MainContent\\MainContent.js":"2","D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleButton\\RecycleButton.js":"3","D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleClearButton\\RecycleClearButton.js":"4","D:\\FrontEnd\\06-text-counter\\src\\components\\TextGenerator\\TextGenerator.js":"5","D:\\FrontEnd\\06-text-counter\\src\\index.js":"6","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolBar\\ToolBar.js":"7","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits.js":"8","D:\\FrontEnd\\06-text-counter\\src\\components\\Stat\\Stat.js":"9","D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleItem\\RecycleItem.js":"10","D:\\FrontEnd\\06-text-counter\\src\\js\\localStorage.js":"11","D:\\FrontEnd\\06-text-counter\\src\\components\\Text\\Text.js":"12","D:\\FrontEnd\\06-text-counter\\src\\components\\PopupMessage\\PopupMessage.js":"13","D:\\FrontEnd\\06-text-counter\\src\\js\\constants.js":"14","D:\\FrontEnd\\06-text-counter\\src\\reportWebVitals.js":"15","D:\\FrontEnd\\06-text-counter\\src\\App.js":"16","D:\\FrontEnd\\06-text-counter\\src\\js\\api.js":"17","D:\\FrontEnd\\06-text-counter\\src\\components\\Footer\\Footer.js":"18","D:\\FrontEnd\\06-text-counter\\src\\components\\Button\\Button.js":"19","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\rightWord.js":"20","D:\\FrontEnd\\06-text-counter\\src\\components\\ButtonClosePopup\\ButtonClosePopup.js":"21","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolButton\\ToolButton.js":"22","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolPaste\\ToolPaste.js":"23","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolCopy\\ToolCopy.js":"24","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolClear\\ToolClear.js":"25","D:\\FrontEnd\\06-text-counter\\src\\components\\Popup\\Popup.js":"26","D:\\FrontEnd\\06-text-counter\\src\\components\\PopupTitle\\PopupTitle.js":"27"},{"size":2546,"mtime":1609572090801,"results":"28","hashOfConfig":"29"},{"size":2996,"mtime":1609578892891,"results":"30","hashOfConfig":"29"},{"size":1093,"mtime":1608893619785,"results":"31","hashOfConfig":"29"},{"size":746,"mtime":1607767971796,"results":"32","hashOfConfig":"29"},{"size":2452,"mtime":1609087947731,"results":"33","hashOfConfig":"29"},{"size":551,"mtime":1608733365292,"results":"34","hashOfConfig":"29"},{"size":2336,"mtime":1609523401416,"results":"35","hashOfConfig":"29"},{"size":868,"mtime":1609495242431,"results":"36","hashOfConfig":"29"},{"size":1728,"mtime":1608897030986,"results":"37","hashOfConfig":"29"},{"size":1609,"mtime":1609087464318,"results":"38","hashOfConfig":"29"},{"size":1619,"mtime":1609491769519,"results":"39","hashOfConfig":"29"},{"size":1183,"mtime":1609492309654,"results":"40","hashOfConfig":"29"},{"size":396,"mtime":1608733365211,"results":"41","hashOfConfig":"29"},{"size":210,"mtime":1608733365293,"results":"42","hashOfConfig":"29"},{"size":375,"mtime":1608733365293,"results":"43","hashOfConfig":"29"},{"size":213,"mtime":1608808867125,"results":"44","hashOfConfig":"29"},{"size":467,"mtime":1608733365293,"results":"45","hashOfConfig":"29"},{"size":1209,"mtime":1608809186079,"results":"46","hashOfConfig":"29"},{"size":1377,"mtime":1608995117356,"results":"47","hashOfConfig":"29"},{"size":1014,"mtime":1608896841278,"results":"48","hashOfConfig":"29"},{"size":762,"mtime":1608996526111,"results":"49","hashOfConfig":"29"},{"size":829,"mtime":1609502795072,"results":"50","hashOfConfig":"29"},{"size":1198,"mtime":1609493424198,"results":"51","hashOfConfig":"29"},{"size":1016,"mtime":1609493920261,"results":"52","hashOfConfig":"29"},{"size":4554,"mtime":1609579065181,"results":"53","hashOfConfig":"29"},{"size":617,"mtime":1609578858860,"results":"54","hashOfConfig":"29"},{"size":369,"mtime":1609504658398,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"j9loub",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"109"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},"D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleBin\\RecycleBin.js",["133"],"D:\\FrontEnd\\06-text-counter\\src\\components\\MainContent\\MainContent.js",["134"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Text from '../Text/Text';\r\nimport Stat from '../Stat/Stat';\r\nimport './main-content.scss'\r\nimport ToolBar from '../ToolBar/ToolBar';\r\nimport TextGenerator from '../TextGenerator/TextGenerator';\r\nimport headerLogo from '../../images/logo.svg';\r\nimport RecycleButton from '../RecycleButton/RecycleButton';\r\nimport RecycleBin from '../RecycleBin/RecycleBin';\r\nimport LocalStorage from '../../js/localStorage';\r\nimport Footer from '../Footer/Footer'\r\nimport Popup from '../Popup/Popup';\r\n\r\nconst newLocalStorage = new LocalStorage()\r\n\r\nclass MainContent extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.onChangeText = this.onChangeText.bind(this);\r\n        this.onChangeInRecycle = this.onChangeInRecycle.bind(this);\r\n        this.popupInit = this.popupInit.bind(this);\r\n        \r\n        if (localStorage.recycle === undefined) { //создаем корзину если она еще не создана\r\n            newLocalStorage.loadTo('recycle', {}) \r\n        }\r\n        \r\n        this.state = {\r\n            text: '',\r\n            recycle: newLocalStorage.loadFrom('recycle')            \r\n        };\r\n      }\r\n\r\n    onChangeText() {\r\n        let valueOfTextArea = document.querySelector('.text__input').value\r\n        this.setState({\r\n            text: valueOfTextArea,\r\n            popupContentDOM: []\r\n        })\r\n    }\r\n\r\n    onChangeInRecycle() {\r\n        const newRecycleData = newLocalStorage.loadFrom('recycle');\r\n        this.setState({\r\n            recycle: newRecycleData\r\n        })\r\n    }\r\n\r\n    popupInit(popupContent) {\r\n        console.log(popupContent)\r\n        this.setState({\r\n            contentOnPopup: popupContent\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(`В корзине ${Object.keys(this.state.recycle).length} объектов`)\r\n        const recycleContent = this.state.recycle\r\n\r\n        return(\r\n            <div className='main-content'>\r\n                <div className='main-content__toolbar'>\r\n                    <img className='main-content__logo' alt='app logo' src={headerLogo} />\r\n                    <Stat text={this.state.text} onChangeText={this.onChangeText}/>\r\n                    <TextGenerator onChangeText={this.onChangeText}/>\r\n                    <RecycleButton itemsInRecycle={recycleContent} onChangeInRecycle={this.onChangeInRecycle}/>\r\n                </div>\r\n                <RecycleBin itemsInRecycle={recycleContent} onChangeInRecycle={this.onChangeInRecycle} onChangeText={this.onChangeText}/>\r\n                <Text onChangeText={this.onChangeText} text={this.state.text}/>\r\n                <ToolBar onChangeText={this.onChangeText} onChangeInRecycle={this.onChangeInRecycle} text={this.state.text} onPopupInit={this.popupInit}/>\r\n                <Popup content={this.state.contentOnPopup}/>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainContent;","D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleButton\\RecycleButton.js",["135","136","137","138"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport LocalStorage from '../../js/localStorage'\r\nimport RecoverButton from '../RecycleItem/RecycleItem';\r\n\r\nimport recycleicon from '../../images/recycle.svg'\r\nimport RecycleBin from '../RecycleBin/RecycleBin';\r\n\r\nimport Button from '../Button/Button'\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass RecycleButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            recycleContent: this.props.itemsInRecycle\r\n        }\r\n\r\n        this.showRecycleBin = this.showRecycleBin.bind(this)\r\n    }\r\n\r\n    showRecycleBin() {\r\n        document.querySelector('.recycle-bin').classList.add('recycle-bin_active')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button \r\n            type='main' \r\n            color='black' \r\n            onClick={this.showRecycleBin} \r\n            icon={recycleicon} \r\n            alt='recycle bin button'\r\n            counter={Object.keys(this.props.itemsInRecycle).length}\r\n        />)\r\n    }\r\n}\r\n\r\nexport default RecycleButton;",["139","140"],"D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleClearButton\\RecycleClearButton.js",["141"],"D:\\FrontEnd\\06-text-counter\\src\\components\\TextGenerator\\TextGenerator.js",["142","143","144"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Api } from '../../js/api';\r\nimport { alphabet } from '../../js/constants';\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport fishicon from '../../images/fish.svg'\r\nimport Button from '../Button/Button'\r\nconst api = (template) => new Api(template);\r\n\r\n\r\nclass TextGenerator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popupWasShown: false\r\n        }\r\n\r\n        this.statCount = this.statCount.bind(this); //это требуется чтобы не потерять котекст\r\n        this.textGen = this.textGen.bind(this); //это требуется чтобы не потерять котекст\r\n        this.editText = this.editText.bind(this); //это требуется чтобы не потерять котекст\r\n        this.showPopup = this.showPopup.bind(this); //это требуется чтобы не потерять котекст\r\n    }\r\n\r\n    statCount() {\r\n        this.props.onChangeText();\r\n    }\r\n\r\n    editText(text) {\r\n        const textToReplace = /\\\\n\\\\n/g\r\n        let editedText = text.replace(textToReplace, '\\n')\r\n        document.querySelector('.text__input').value = editedText\r\n        this.statCount()\r\n    }\r\n\r\n    textGen(event) {\r\n        api('standings').request()\r\n            .then((result) => {\r\n                this.editText(result.text)\r\n            })\r\n            .catch(() => {\r\n                console.log('Error in server request')\r\n                showPopupMessage(event.clientX, event.clientY, 'Ошибка запроса к серверу fish-text.ru', 'red')\r\n            })\r\n    }\r\n\r\n    showPopup(event) {\r\n        showPopupMessage(event.clientX, event.clientY, 'генерировать рыбный текст', 'black')\r\n        this.setState({popupWasShown: true})\r\n        setTimeout(() => {\r\n            this.setState({popupWasShown: false})\r\n        }, 60000)\r\n    }\r\n\r\n    render() {\r\n        let showPopupFunc = this.showPopup\r\n        if (this.state.popupWasShown === true) {\r\n            showPopupFunc = null;\r\n        }\r\n        \r\n        return(\r\n            <Button \r\n                type='main' \r\n                color='red' \r\n                onClick={this.textGen} \r\n                icon={fishicon} \r\n                alt='fish text button'\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextGenerator;","D:\\FrontEnd\\06-text-counter\\src\\index.js",[],["145","146"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolBar\\ToolBar.js",["147","148"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './toolbar.scss'\r\nimport EditButton from '../ToolButton/ToolButton';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\nimport ToolPaste from '../ToolPaste/ToolPaste';\r\nimport ToolCopy from '../ToolCopy/ToolCopy';\r\nimport ToolClear from '../ToolClear/ToolClear';\r\n\r\n\r\nclass ToolBar extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {};\r\n        this.onChangeText = this.onChangeText.bind(this); //это требуется чтобы не потерять котекст в onChangeText\r\n        this.onChangeInRecycle = this.onChangeInRecycle.bind(this); //это требуется чтобы не потерять котекст в onChangeText\r\n        this.onPopupInit = this.onPopupInit.bind(this); //это требуется чтобы не потерять котекст в onChangeText\r\n    }\r\n\r\n    onChangeText() {\r\n        this.props.onChangeText(); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    onChangeInRecycle() {\r\n        console.log('toolbar on change in recycle')\r\n        this.props.onChangeInRecycle(); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    onPopupInit(popupContent) {\r\n        this.props.onPopupInit(popupContent)\r\n    }\r\n\r\n    render() {\r\n\r\n        let isTextAreaHasContent = true\r\n        let isClibBoardHasContent = true\r\n        if (this.props.text.length === 0) {\r\n            isTextAreaHasContent = false\r\n        }\r\n        navigator.clipboard.readText()\r\n        .then(text => {\r\n            if (text.length === 0) {\r\n                isClibBoardHasContent = false\r\n            }    \r\n        })\r\n        \r\n        return(\r\n            <div className='toolbar'>\r\n                <ToolCopy isActive={isTextAreaHasContent} onChangeText={this.onChangeText}/>\r\n                <ToolPaste isActive={isClibBoardHasContent} onChangeText={this.onChangeText}/>\r\n                <ToolClear isActive={isTextAreaHasContent} onChangeText={this.onChangeText} onChangeInRecycle={this.onChangeInRecycle} onPopupInit={this.onPopupInit}/>\r\n                <PopupMessage />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolBar;",["149","150"],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\Stat\\Stat.js",["151"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stat.scss'\r\nimport '../../styles/main.scss'\r\nimport { rightWord } from '../../js/utilits/rightWord'\r\n\r\nclass Stat extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    symbolsCount() {\r\n        const text = this.props.text\r\n        return text.length\r\n    }\r\n\r\n    wordsCount() {\r\n        const paragraphSymbol = /\\n/g\r\n        const text = this.props.text.toLowerCase().replace(paragraphSymbol, ' ')\r\n        const words = text.split(' ').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return words.length      \r\n    }\r\n\r\n    paragraphsCount() {\r\n        const text = this.props.text\r\n        const paragraphs = text.split('\\n').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return paragraphs.length      \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='stat'>\r\n                <p className='stat__number'>{rightWord(this.symbolsCount(), 'знак')}</p>\r\n                <p className='stat__number'>{rightWord(this.wordsCount(), 'слово')}</p>\r\n                <p className='stat__number'>{rightWord(this.paragraphsCount(), 'абзац')}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Stat;","D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleItem\\RecycleItem.js",["152","153"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './recycle-item.scss'\r\nimport LocalStorage from '../../js/localStorage'\r\nimport { rightWord } from '../../js/utilits/rightWord';\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass RecycleItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            key: this.props.keyProp,\r\n            title: this.props.title,\r\n            time: this.props.time,\r\n            length: this.props.length        \r\n        }\r\n\r\n        this.recover = this.recover.bind(this)\r\n        this.refreshStat = this.refreshStat.bind(this)\r\n    }\r\n\r\n    refreshStat() {\r\n        this.props.onChangeText();\r\n    }\r\n\r\n    recover() {\r\n        console.log(1)\r\n        const recycle = JSON.parse(localStorage.recycle)\r\n        document.querySelector('.text__input').value = recycle[this.state.key].text\r\n        this.refreshStat();\r\n    }\r\n\r\n    render() {\r\n        const key = this.props.keyProp\r\n        const title = this.props.title\r\n        const time = this.props.time\r\n        const length = this.props.length\r\n\r\n        return (\r\n            <div className='recycle-item' key={key}>\r\n                <button  className='recycle-item__button' onClick={this.recover}>\r\n                    <p className='recycle-item__title'>{title}</p>\r\n                    <p className='recycle-item__subtitle'>{rightWord(length, 'знак')}</p>\r\n                    <p className='recycle-item__subtitle'>{time}</p>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RecycleItem;",["154","155"],"D:\\FrontEnd\\06-text-counter\\src\\js\\localStorage.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\Text\\Text.js",["156","157","158"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './text.scss'\r\nimport EditButton from '../ToolButton/ToolButton';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\n\r\nclass Text extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            timerId: 0\r\n        }\r\n\r\n        this.statCount = this.statCount.bind(this); //это требуется чтобы не потерять котекст в statcount\r\n    }\r\n\r\n    statCount() {\r\n        clearTimeout(this.state.timerId)\r\n        document.querySelector('.stat').style.opacity = '0.3'\r\n        const timerId = setTimeout(() => {\r\n            this.props.onChangeText()\r\n            document.querySelector('.stat').style.opacity = '1'\r\n        }, 500)\r\n        this.setState({timerId: timerId})    \r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className='text'>\r\n                <textarea onChange={this.statCount} \r\n                        className='text__input' \r\n                        type=\"text\" \r\n                        placeholder=\"Ваш текст\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Text;","D:\\FrontEnd\\06-text-counter\\src\\components\\PopupMessage\\PopupMessage.js",["159"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './popup-message.scss'\r\n\r\nclass PopupMessage extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <p className='popup-message popup-message_unactive'></p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PopupMessage;","D:\\FrontEnd\\06-text-counter\\src\\js\\constants.js",[],"D:\\FrontEnd\\06-text-counter\\src\\reportWebVitals.js",[],["160","161"],"D:\\FrontEnd\\06-text-counter\\src\\App.js",[],["162","163"],"D:\\FrontEnd\\06-text-counter\\src\\js\\api.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\Footer\\Footer.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\Button\\Button.js",["164","165"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport LocalStorage from '../../js/localStorage'\r\nimport './button.scss'\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass Button extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            type: this.props.type\r\n        };\r\n    }\r\n\r\n    iconRender() {\r\n        const iconClassName = `button__icon_${this.props.type}`\r\n        return (this.props.icon !== undefined ? \r\n            <img className={iconClassName} alt={this.props.icon} src={this.props.icon}></img> : null)\r\n        }\r\n\r\n    counterRender() {\r\n        return (this.props.counter !== undefined && this.props.counter !== 0 ? \r\n            <div className='button__counter'>{this.props.counter}</div> : null)\r\n        }\r\n\r\n    textRender() {\r\n        return (this.props.text !== undefined ? \r\n            this.props.text : null)\r\n        }\r\n    \r\n    render() {\r\n        const buttonClassName = `button button_${this.props.type}`\r\n        const background = this.props.color\r\n\r\n        return (\r\n            <button onClick={this.props.onClick} className={buttonClassName} style={{background: background}}>\r\n                {this.iconRender()}\r\n                {this.counterRender()}\r\n                {this.textRender()}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;",["166","167"],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\rightWord.js",[],["168","169"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ButtonClosePopup\\ButtonClosePopup.js",["170"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './button-close-popup.scss'\r\nimport closeIcon from '../../images/close.svg'\r\n\r\nclass ButtonClosePopup extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            type: this.props.type\r\n        };\r\n\r\n        this.close = this.close.bind(this)\r\n\r\n    }\r\n\r\n    close() {\r\n        document.querySelector(`.${this.props.classToClose}`).classList.remove(`${this.props.classToClose}_active`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={this.close} className='button-close-popup'>\r\n                <img src={closeIcon} alt=\"close\" />\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ButtonClosePopup;","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolButton\\ToolButton.js",["171"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tool-button.scss'\r\n\r\nclass ToolButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        let className = 'tool-button'\r\n        let functionToAction = null\r\n        if (this.props.isActive === true) {\r\n            className = 'tool-button tool-button_active'\r\n            functionToAction = this.props.onClick\r\n        } \r\n\r\n        return(\r\n            <button className={className}>\r\n                <img className='tool-button__icon'\r\n                    onClick={functionToAction}\r\n                    src={this.props.icon} \r\n                    alt={this.props.type}>\r\n                </img>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolButton;","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolPaste\\ToolPaste.js",["172"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport pasteIcon from '../../images/paste_icon.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\n\r\nclass ToolPaste extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.pasteInTextArea = this.pasteInTextArea.bind(this);\r\n        this.state = {};\r\n    }\r\n\r\n    pasteInTextArea(event) {\r\n        navigator.clipboard.readText()\r\n        .then(text => {\r\n            document.querySelector('.text__input').value = text\r\n            this.props.onChangeText();\r\n        }).then(() => {\r\n            if (document.querySelector('.text__input').value.length === 0) {\r\n                showPopupMessage(event.clientX, event.clientY, 'ошибка, возможно в буфере находится не текст', 'red')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToolButton \r\n                type='paste'\r\n                icon={pasteIcon}\r\n                isActive={this.props.isActive}\r\n                onClick={this.pasteInTextArea}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolPaste;","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolCopy\\ToolCopy.js",["173"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport copyIcon from '../../images/copy_icon.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\n\r\nclass ToolCopy extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.copyTextArea = this.copyTextArea.bind(this); //это требуется чтобы не потерять котекст\r\n        this.state = {};\r\n    }\r\n\r\n    copyTextArea(event) {\r\n        const text = document.querySelector('.text__input').value\r\n        navigator.clipboard.writeText(text);\r\n        showPopupMessage(event.clientX, event.clientY, 'Скопировано в буфер', 'green')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToolButton \r\n                type='copy'\r\n                icon={copyIcon}\r\n                isActive={this.props.isActive}\r\n                onClick={this.copyTextArea}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolCopy;","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolClear\\ToolClear.js",["174","175"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport deleteIcon from '../../images/delete_icon.svg'\r\nimport LocalStorage from '../../js/localStorage'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { months } from '../../js/constants'\r\nimport Button from '../Button/Button';\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass ToolClear extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.clear = this.clear.bind(this); //это требуется чтобы не потерять котекст\r\n        this.clearTextArea = this.clearTextArea.bind(this); //это требуется чтобы не потерять котекст\r\n        this.loadItemToRecycle = this.loadItemToRecycle.bind(this); //это требуется чтобы не потерять котекст\r\n        this.createPopupContent = this.createPopupContent.bind(this); //это требуется чтобы не потерять котекст\r\n        this.isFreeSpaceInRecycle = this.isFreeSpaceInRecycle.bind(this); //это требуется чтобы не потерять котекст\r\n        this.closePopup = this.closePopup.bind(this); //это требуется чтобы не потерять котекст\r\n\r\n        this.state = {\r\n            isClearRecycle: undefined,\r\n        };\r\n    }\r\n    \r\n    clear() {\r\n        if (this.isFreeSpaceInRecycle() === true) {\r\n            this.loadItemToRecycle()\r\n            this.clearTextArea()\r\n        } else {\r\n            this.props.onPopupInit(this.createPopupContent())\r\n            document.querySelector('.popup').classList.add('popup_active')\r\n        }\r\n    }\r\n    \r\n    clearTextArea() {\r\n        document.querySelector('.text__input').value = ''\r\n        this.props.onChangeText();\r\n        this.props.onChangeInRecycle();\r\n    }\r\n\r\n    isFreeSpaceInRecycle() {\r\n        return(Object.keys(newLocalStorage.loadFrom('recycle')).length < 3 ? true : false)\r\n    }\r\n\r\n    closePopup() {\r\n        document.querySelector('.popup').classList.remove('popup_active')\r\n    }\r\n\r\n    createPopupContent() {\r\n        let popupDOM = []\r\n        popupDOM.push(\r\n            <>\r\n                <p className='popup__text'>В корзине слишком много элементов. Очистить корзину?</p>\r\n                <Button type='text' \r\n                    color='red' \r\n                    onClick={() => {\r\n                            newLocalStorage.loadTo('recycle', {})\r\n                            this.loadItemToRecycle()\r\n                            this.clearTextArea()\r\n                            this.closePopup()\r\n                        }} \r\n                    text='Очистить корзину' \r\n                    alt='clear recycle bin button'/>\r\n                <Button type='text' \r\n                    color='grey' \r\n                    onClick={this.closePopup} \r\n                    text='Отмена' \r\n                    alt='clear recycle bin button'/>\r\n            </>\r\n        )\r\n        console.log(popupDOM)\r\n        return popupDOM\r\n    }\r\n\r\n    loadItemToRecycle() {\r\n        const deletedText = document.querySelector('.text__input').value\r\n        const current = new Date();\r\n        const currentDate = current.getDate();\r\n        const currentMonth = months[current.getMonth()];\r\n        const currentYear = current.getFullYear();\r\n        const currentHours = current.getHours();\r\n        let currentMinutes = current.getMinutes().toString();\r\n        console.log(currentMinutes.length)\r\n        currentMinutes.length === 1 ? currentMinutes = `0${currentMinutes}` : currentMinutes = currentMinutes\r\n        const currentMiliSeconds = Date.parse(current);\r\n        let textTitle = '';\r\n        (deletedText.length > 18) ? textTitle = deletedText.slice(0, 18).concat('...') : textTitle = deletedText\r\n        const item = {\r\n            deleteTime: currentMiliSeconds,\r\n            deletedPhrase: `Удалено ${currentDate} ${currentMonth} ${currentYear}г. в ${currentHours}:${currentMinutes}`,       \r\n            title: textTitle,\r\n            text: deletedText,\r\n            textLength: deletedText.length     \r\n        }\r\n        newLocalStorage.addTo('recycle', item)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToolButton \r\n                type='clear text area'\r\n                icon={deleteIcon}\r\n                isActive={this.props.isActive}\r\n                onClick={this.clear}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolClear;","D:\\FrontEnd\\06-text-counter\\src\\components\\Popup\\Popup.js",["176"],"D:\\FrontEnd\\06-text-counter\\src\\components\\PopupTitle\\PopupTitle.js",["177"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './popup-title.scss'\r\n\r\nclass PopupTitle extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <p className='popup-title'>{this.props.title}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PopupTitle;",{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"182","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":21},{"ruleId":"178","severity":1,"message":"183","line":7,"column":8,"nodeType":"180","messageId":"181","endLine":7,"endColumn":18},{"ruleId":"178","severity":1,"message":"184","line":11,"column":7,"nodeType":"180","messageId":"181","endLine":11,"endColumn":22},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"189","line":4,"column":10,"nodeType":"180","messageId":"181","endLine":4,"endColumn":18},{"ruleId":"178","severity":1,"message":"190","line":59,"column":13,"nodeType":"180","messageId":"181","endLine":59,"endColumn":26},{"ruleId":"185","replacedBy":"191"},{"ruleId":"187","replacedBy":"192"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"193","line":5,"column":8,"nodeType":"180","messageId":"181","endLine":5,"endColumn":18},{"ruleId":"185","replacedBy":"194"},{"ruleId":"187","replacedBy":"195"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"184","line":7,"column":7,"nodeType":"180","messageId":"181","endLine":7,"endColumn":22},{"ruleId":"185","replacedBy":"196"},{"ruleId":"187","replacedBy":"197"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"193","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":18},{"ruleId":"178","severity":1,"message":"198","line":5,"column":8,"nodeType":"180","messageId":"181","endLine":5,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"185","replacedBy":"199"},{"ruleId":"187","replacedBy":"200"},{"ruleId":"185","replacedBy":"201"},{"ruleId":"187","replacedBy":"202"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"184","line":6,"column":7,"nodeType":"180","messageId":"181","endLine":6,"endColumn":22},{"ruleId":"185","replacedBy":"203"},{"ruleId":"187","replacedBy":"204"},{"ruleId":"185","replacedBy":"205"},{"ruleId":"187","replacedBy":"206"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"207","severity":1,"message":"208","line":86,"column":96,"nodeType":"180","messageId":"209","endLine":86,"endColumn":110},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'RecoverButton' is defined but never used.","'RecycleBin' is defined but never used.","'newLocalStorage' is assigned a value but never used.","no-native-reassign",["210"],"no-negated-in-lhs",["211"],"'alphabet' is defined but never used.","'showPopupFunc' is assigned a value but never used.",["210"],["211"],"'EditButton' is defined but never used.",["210"],["211"],["210"],["211"],"'PopupMessage' is defined but never used.",["210"],["211"],["210"],["211"],["210"],["211"],["210"],["211"],"no-self-assign","'currentMinutes' is assigned to itself.","selfAssignment","no-global-assign","no-unsafe-negation"]