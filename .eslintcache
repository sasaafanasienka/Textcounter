[{"D:\\FrontEnd\\06-text-counter\\src\\components\\Text\\Text.js":"1","D:\\FrontEnd\\06-text-counter\\src\\contexts\\TextContext.js":"2","D:\\FrontEnd\\06-text-counter\\src\\App.js":"3","D:\\FrontEnd\\06-text-counter\\src\\components\\Main\\Main.js":"4","D:\\FrontEnd\\06-text-counter\\src\\components\\Header\\Header.js":"5","D:\\FrontEnd\\06-text-counter\\src\\components\\Stat\\Stat.js":"6","D:\\FrontEnd\\06-text-counter\\src\\components\\Footer\\Footer.js":"7","D:\\FrontEnd\\06-text-counter\\src\\js\\constants.js":"8","D:\\FrontEnd\\06-text-counter\\src\\components\\PopupMessage\\PopupMessage.js":"9","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolPaste\\ToolPaste.js":"10","D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleItem\\RecycleItem.js":"11","D:\\FrontEnd\\06-text-counter\\src\\components\\PopupTitle\\PopupTitle.js":"12","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolBar\\ToolBar.js":"13","D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleButton\\RecycleButton.js":"14","D:\\FrontEnd\\06-text-counter\\src\\js\\localStorage.js":"15","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\rightWord.js":"16","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolClear\\ToolClear.js":"17","D:\\FrontEnd\\06-text-counter\\src\\index.js":"18","D:\\FrontEnd\\06-text-counter\\src\\components\\TextGenerator\\TextGenerator.js":"19","D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleBin\\RecycleBin.js":"20","D:\\FrontEnd\\06-text-counter\\src\\components\\Button\\Button.js":"21","D:\\FrontEnd\\06-text-counter\\src\\components\\ButtonClosePopup\\ButtonClosePopup.js":"22","D:\\FrontEnd\\06-text-counter\\src\\components\\Popup\\Popup.js":"23","D:\\FrontEnd\\06-text-counter\\src\\components\\AboutAuthor\\AboutAuthor.js":"24","D:\\FrontEnd\\06-text-counter\\src\\js\\api.js":"25","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits.js":"26","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolButton\\ToolButton.js":"27","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolCopy\\ToolCopy.js":"28","D:\\FrontEnd\\06-text-counter\\src\\reportWebVitals.js":"29","D:\\FrontEnd\\06-text-counter\\src\\components\\ToggleTheme\\ToggleTheme.js":"30","D:\\FrontEnd\\06-text-counter\\src\\contexts\\ThemeContext.js":"31","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\themeClassName.js":"32"},{"size":1278,"mtime":1612463462120,"results":"33","hashOfConfig":"34"},{"size":205,"mtime":1612348546078,"results":"35","hashOfConfig":"34"},{"size":896,"mtime":1612549305879,"results":"36","hashOfConfig":"34"},{"size":2320,"mtime":1612464652179,"results":"37","hashOfConfig":"34"},{"size":1175,"mtime":1612463189956,"results":"38","hashOfConfig":"34"},{"size":1946,"mtime":1612465436061,"results":"39","hashOfConfig":"34"},{"size":2244,"mtime":1612551576865,"results":"40","hashOfConfig":"34"},{"size":210,"mtime":1608733365293,"results":"41","hashOfConfig":"34"},{"size":396,"mtime":1608733365211,"results":"42","hashOfConfig":"34"},{"size":1198,"mtime":1609493424198,"results":"43","hashOfConfig":"34"},{"size":1588,"mtime":1609606779817,"results":"44","hashOfConfig":"34"},{"size":369,"mtime":1609504658398,"results":"45","hashOfConfig":"34"},{"size":2529,"mtime":1612447381696,"results":"46","hashOfConfig":"34"},{"size":1093,"mtime":1608893619785,"results":"47","hashOfConfig":"34"},{"size":1619,"mtime":1609491769519,"results":"48","hashOfConfig":"34"},{"size":1014,"mtime":1608896841278,"results":"49","hashOfConfig":"34"},{"size":5042,"mtime":1609589470623,"results":"50","hashOfConfig":"34"},{"size":757,"mtime":1612172615862,"results":"51","hashOfConfig":"34"},{"size":2452,"mtime":1609087947731,"results":"52","hashOfConfig":"34"},{"size":2546,"mtime":1609863543705,"results":"53","hashOfConfig":"34"},{"size":970,"mtime":1612169483664,"results":"54","hashOfConfig":"34"},{"size":762,"mtime":1608996526111,"results":"55","hashOfConfig":"34"},{"size":624,"mtime":1609606057534,"results":"56","hashOfConfig":"34"},{"size":648,"mtime":1612181979784,"results":"57","hashOfConfig":"34"},{"size":467,"mtime":1608733365293,"results":"58","hashOfConfig":"34"},{"size":868,"mtime":1609495242431,"results":"59","hashOfConfig":"34"},{"size":829,"mtime":1609863969593,"results":"60","hashOfConfig":"34"},{"size":1016,"mtime":1609493920261,"results":"61","hashOfConfig":"34"},{"size":375,"mtime":1608733365293,"results":"62","hashOfConfig":"34"},{"size":807,"mtime":1612548474835,"results":"63","hashOfConfig":"34"},{"size":521,"mtime":1612461055358,"results":"64","hashOfConfig":"34"},{"size":239,"mtime":1612462339669,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"j9loub",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"107"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"85"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"107"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"69"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"D:\\FrontEnd\\06-text-counter\\src\\components\\Text\\Text.js",["153","154","155"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './text.scss'\r\nimport EditButton from '../ToolButton/ToolButton';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\n\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\n\r\nfunction Text() {\r\n\r\n    \r\n    const themeData = React.useContext(ThemeContext);\r\n\r\n    const inputClassName = themeClassName(themeData, 'text__input')\r\n    // function statCount() {\r\n    //     clearTimeout(this.state.timerId)\r\n    //     document.querySelector('.stat').style.opacity = '0.3'\r\n    //     const timerId = setTimeout(() => {\r\n    //         this.props.onChangeText()\r\n    //         document.querySelector('.stat').style.opacity = '1'\r\n    //     }, 250)\r\n    //     this.setState({timerId: timerId})    \r\n    // }\r\n\r\n    // function statChanging() {\r\n    //     // setText('Жопа')\r\n    //     setText(document.querySelector('.text__input').value)\r\n    // }\r\n\r\n    return(\r\n        <div className='text'>\r\n            <textarea // onChange={}\r\n                    className={inputClassName} \r\n                    type=\"text\" \r\n                    placeholder=\"Ваш текст\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text;",["156","157"],"D:\\FrontEnd\\06-text-counter\\src\\contexts\\TextContext.js",[],["158","159"],"D:\\FrontEnd\\06-text-counter\\src\\App.js",["160","161"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Main\\Main.js",["162","163","164","165","166","167","168","169"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Header\\Header.js",["170","171","172"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Stat\\Stat.js",["173"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Footer\\Footer.js",[],"D:\\FrontEnd\\06-text-counter\\src\\js\\constants.js",[],["174","175"],"D:\\FrontEnd\\06-text-counter\\src\\components\\PopupMessage\\PopupMessage.js",["176"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './popup-message.scss'\r\n\r\nclass PopupMessage extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <p className='popup-message popup-message_unactive'></p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PopupMessage;","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolPaste\\ToolPaste.js",["177"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport pasteIcon from '../../images/paste_icon.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\n\r\nclass ToolPaste extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.pasteInTextArea = this.pasteInTextArea.bind(this);\r\n        this.state = {};\r\n    }\r\n\r\n    pasteInTextArea(event) {\r\n        navigator.clipboard.readText()\r\n        .then(text => {\r\n            document.querySelector('.text__input').value = text\r\n            this.props.onChangeText();\r\n        }).then(() => {\r\n            if (document.querySelector('.text__input').value.length === 0) {\r\n                showPopupMessage(event.clientX, event.clientY, 'ошибка, возможно в буфере находится не текст', 'red')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToolButton \r\n                type='paste'\r\n                icon={pasteIcon}\r\n                isActive={this.props.isActive}\r\n                onClick={this.pasteInTextArea}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolPaste;","D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleItem\\RecycleItem.js",["178"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './recycle-item.scss'\r\nimport LocalStorage from '../../js/localStorage'\r\nimport { rightWord } from '../../js/utilits/rightWord';\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass RecycleItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            key: this.props.keyProp,\r\n            title: this.props.title,\r\n            time: this.props.time,\r\n            length: this.props.length        \r\n        }\r\n\r\n        this.recover = this.recover.bind(this)\r\n        this.refreshStat = this.refreshStat.bind(this)\r\n    }\r\n\r\n    refreshStat() {\r\n        this.props.onChangeText();\r\n    }\r\n\r\n    recover() {\r\n        const recycle = newLocalStorage.loadFrom('recycle')\r\n        document.querySelector('.text__input').value = recycle[this.state.key].text\r\n        this.refreshStat();\r\n    }\r\n\r\n    render() {\r\n        const key = this.props.keyProp\r\n        const title = this.props.title\r\n        const time = this.props.time\r\n        const length = this.props.length\r\n\r\n        return (\r\n            <div className='recycle-item' key={key}>\r\n                <button  className='recycle-item__button' onClick={this.recover}>\r\n                    <p className='recycle-item__title'>{title}</p>\r\n                    <p className='recycle-item__subtitle'>{rightWord(length, 'знак')}</p>\r\n                    <p className='recycle-item__subtitle'>{time}</p>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RecycleItem;",["179","180"],"D:\\FrontEnd\\06-text-counter\\src\\components\\PopupTitle\\PopupTitle.js",["181"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './popup-title.scss'\r\n\r\nclass PopupTitle extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <p className='popup-title'>{this.props.title}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PopupTitle;","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolBar\\ToolBar.js",["182","183","184","185","186","187"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './toolbar.scss'\r\nimport EditButton from '../ToolButton/ToolButton';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\nimport ToolPaste from '../ToolPaste/ToolPaste';\r\nimport ToolCopy from '../ToolCopy/ToolCopy';\r\nimport ToolClear from '../ToolClear/ToolClear';\r\nimport ToggleTheme from '../ToggleTheme/ToggleTheme';\r\n\r\n\r\nclass ToolBar extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {};\r\n        this.onChangeText = this.onChangeText.bind(this); //это требуется чтобы не потерять котекст в onChangeText\r\n        this.onChangeInRecycle = this.onChangeInRecycle.bind(this); //это требуется чтобы не потерять котекст в onChangeText\r\n        this.onPopupInit = this.onPopupInit.bind(this); //это требуется чтобы не потерять котекст в onChangeText\r\n    }\r\n\r\n    onChangeText() {\r\n        this.props.onChangeText(); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    onChangeInRecycle() {\r\n        console.log('toolbar on change in recycle')\r\n        this.props.onChangeInRecycle(); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    onPopupInit(popupContent) {\r\n        this.props.onPopupInit(popupContent)\r\n    }\r\n\r\n    render() {\r\n\r\n        // let isTextAreaHasContent = true\r\n        // let isClibBoardHasContent = true\r\n        // if (this.props.text.length === 0) {\r\n        //     isTextAreaHasContent = false\r\n        // }\r\n        // navigator.clipboard.readText()\r\n        // .then(text => {\r\n        //     if (text.length === 0) {\r\n        //         isClibBoardHasContent = false\r\n        //     }    \r\n        // })\r\n        \r\n        return(\r\n            <div className='toolbar'>\r\n                <ToggleTheme onChangeTheme={this.props.onChangeTheme}/>\r\n                {/* <ToolCopy isActive={isTextAreaHasContent} onChangeText={this.onChangeText}/> */}\r\n                {/* <ToolPaste isActive={isClibBoardHasContent} onChangeText={this.onChangeText}/> */}\r\n                {/* <ToolClear isActive={isTextAreaHasContent} onChangeText={this.onChangeText} onChangeInRecycle={this.onChangeInRecycle} onPopupInit={this.onPopupInit}/> */}\r\n                {/* <PopupMessage /> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolBar;","D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleButton\\RecycleButton.js",["188","189","190","191"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport LocalStorage from '../../js/localStorage'\r\nimport RecoverButton from '../RecycleItem/RecycleItem';\r\n\r\nimport recycleicon from '../../images/recycle.svg'\r\nimport RecycleBin from '../RecycleBin/RecycleBin';\r\n\r\nimport Button from '../Button/Button'\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass RecycleButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            recycleContent: this.props.itemsInRecycle\r\n        }\r\n\r\n        this.showRecycleBin = this.showRecycleBin.bind(this)\r\n    }\r\n\r\n    showRecycleBin() {\r\n        document.querySelector('.recycle-bin').classList.add('recycle-bin_active')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button \r\n            type='main' \r\n            color='black' \r\n            onClick={this.showRecycleBin} \r\n            icon={recycleicon} \r\n            alt='recycle bin button'\r\n            counter={Object.keys(this.props.itemsInRecycle).length}\r\n        />)\r\n    }\r\n}\r\n\r\nexport default RecycleButton;","D:\\FrontEnd\\06-text-counter\\src\\js\\localStorage.js",[],["192","193"],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\rightWord.js",[],["194","195"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolClear\\ToolClear.js",["196","197"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport deleteIcon from '../../images/delete_icon.svg'\r\nimport LocalStorage from '../../js/localStorage'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { months } from '../../js/constants'\r\nimport Button from '../Button/Button';\r\nimport Popup from '../Popup/Popup';\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass ToolClear extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.clear = this.clear.bind(this); //это требуется чтобы не потерять котекст\r\n        this.clearTextArea = this.clearTextArea.bind(this); //это требуется чтобы не потерять котекст\r\n        this.loadItemToRecycle = this.loadItemToRecycle.bind(this); //это требуется чтобы не потерять котекст\r\n        this.createPopupContent = this.createPopupContent.bind(this); //это требуется чтобы не потерять котекст\r\n        this.isFreeSpaceInRecycle = this.isFreeSpaceInRecycle.bind(this); //это требуется чтобы не потерять котекст\r\n        this.closePopup = this.closePopup.bind(this); //это требуется чтобы не потерять котекст\r\n\r\n        this.state = {\r\n            isClearRecycle: undefined,\r\n        };\r\n    }\r\n    \r\n    clear() {\r\n        if (this.isFreeSpaceInRecycle() === true) {\r\n            this.loadItemToRecycle()\r\n            this.clearTextArea()\r\n        } else {\r\n            this.props.onPopupInit(this.createPopupContent())\r\n            document.querySelector('.popup').classList.add('popup_active')\r\n        }\r\n    }\r\n    \r\n    clearTextArea() {\r\n        document.querySelector('.text__input').value = ''\r\n        this.props.onChangeText();\r\n        this.props.onChangeInRecycle();\r\n    }\r\n\r\n    isFreeSpaceInRecycle() {\r\n        return(Object.keys(newLocalStorage.loadFrom('recycle')).length < 3 ? true : false)\r\n    }\r\n\r\n    closePopup() {\r\n        document.querySelector('.popup').classList.remove('popup_active')\r\n    }\r\n\r\n    createPopupContent() {\r\n        return (\r\n            <>\r\n                <p className='popup__text'>В корзине слишком много элементов. Очистить корзину?</p>\r\n                <Button type='text' color='red' text='Очистить' onClick={() => {\r\n                                                                    newLocalStorage.loadTo('recycle', {})\r\n                                                                    this.loadItemToRecycle()\r\n                                                                    this.clearTextArea()\r\n                                                                    this.closePopup()\r\n                                                                }} />\r\n                <Button type='text' color='red' text='Удалить и не помещать в корзину' onClick={() => {\r\n                                                                                            this.clearTextArea()\r\n                                                                                            this.closePopup()\r\n                                                                                        }} />\r\n                <Button type='text' color='grey' text='Отмена' onClick={this.closePopup} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    loadItemToRecycle() {\r\n        const deletedText = document.querySelector('.text__input').value\r\n        const current = new Date();\r\n        const currentDate = current.getDate();\r\n        const currentMonth = months[current.getMonth()];\r\n        const currentYear = current.getFullYear();\r\n        const currentHours = current.getHours();\r\n        let currentMinutes = current.getMinutes().toString();\r\n        console.log(currentMinutes.length)\r\n        currentMinutes.length === 1 ? currentMinutes = `0${currentMinutes}` : currentMinutes = currentMinutes\r\n        const currentMiliSeconds = Date.parse(current);\r\n        let textTitle = '';\r\n        (deletedText.length > 18) ? textTitle = deletedText.slice(0, 18).concat('...') : textTitle = deletedText\r\n        const item = {\r\n            deleteTime: currentMiliSeconds,\r\n            deletedPhrase: `Удалено ${currentDate} ${currentMonth} ${currentYear}г. в ${currentHours}:${currentMinutes}`,       \r\n            title: textTitle,\r\n            text: deletedText,\r\n            textLength: deletedText.length     \r\n        }\r\n        newLocalStorage.addTo('recycle', item)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ToolButton \r\n                    type='clear text area'\r\n                    icon={deleteIcon}\r\n                    isActive={this.props.isActive}\r\n                    onClick={this.clear}\r\n                />\r\n                <Popup title='Ошибка' content={this.createPopupContent()}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolClear;",["198","199"],"D:\\FrontEnd\\06-text-counter\\src\\index.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\TextGenerator\\TextGenerator.js",["200","201","202"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Api } from '../../js/api';\r\nimport { alphabet } from '../../js/constants';\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport fishicon from '../../images/fish.svg'\r\nimport Button from '../Button/Button'\r\nconst api = (template) => new Api(template);\r\n\r\n\r\nclass TextGenerator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popupWasShown: false\r\n        }\r\n\r\n        this.statCount = this.statCount.bind(this); //это требуется чтобы не потерять котекст\r\n        this.textGen = this.textGen.bind(this); //это требуется чтобы не потерять котекст\r\n        this.editText = this.editText.bind(this); //это требуется чтобы не потерять котекст\r\n        this.showPopup = this.showPopup.bind(this); //это требуется чтобы не потерять котекст\r\n    }\r\n\r\n    statCount() {\r\n        this.props.onChangeText();\r\n    }\r\n\r\n    editText(text) {\r\n        const textToReplace = /\\\\n\\\\n/g\r\n        let editedText = text.replace(textToReplace, '\\n')\r\n        document.querySelector('.text__input').value = editedText\r\n        this.statCount()\r\n    }\r\n\r\n    textGen(event) {\r\n        api('standings').request()\r\n            .then((result) => {\r\n                this.editText(result.text)\r\n            })\r\n            .catch(() => {\r\n                console.log('Error in server request')\r\n                showPopupMessage(event.clientX, event.clientY, 'Ошибка запроса к серверу fish-text.ru', 'red')\r\n            })\r\n    }\r\n\r\n    showPopup(event) {\r\n        showPopupMessage(event.clientX, event.clientY, 'генерировать рыбный текст', 'black')\r\n        this.setState({popupWasShown: true})\r\n        setTimeout(() => {\r\n            this.setState({popupWasShown: false})\r\n        }, 60000)\r\n    }\r\n\r\n    render() {\r\n        let showPopupFunc = this.showPopup\r\n        if (this.state.popupWasShown === true) {\r\n            showPopupFunc = null;\r\n        }\r\n        \r\n        return(\r\n            <Button \r\n                type='main' \r\n                color='red' \r\n                onClick={this.textGen} \r\n                icon={fishicon} \r\n                alt='fish text button'\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextGenerator;","D:\\FrontEnd\\06-text-counter\\src\\components\\RecycleBin\\RecycleBin.js",["203"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './recycle-bin.scss'\r\nimport LocalStorage from '../../js/localStorage'\r\nimport RecycleItem from '../RecycleItem/RecycleItem';\r\nimport Button from '../Button/Button'\r\nimport ButtonClosePopup from '../ButtonClosePopup/ButtonClosePopup';\r\nimport PopupTitle from '../PopupTitle/PopupTitle';\r\n\r\nconst newLocalStorage = new LocalStorage();\r\n\r\nclass RecycleBin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            recycleContent: this.props.itemsInRecycle,\r\n        }\r\n\r\n        this.renderAllItems = this.renderAllItems.bind(this)\r\n        this.renderItem = this.renderItem.bind(this)\r\n        this.refreshRecycle = this.refreshRecycle.bind(this)\r\n        this.refreshStat = this.refreshStat.bind(this)\r\n        this.clearAll = this.clearAll.bind(this)\r\n    }\r\n\r\n    refreshRecycle() {\r\n        this.props.onChangeInRecycle();\r\n    }\r\n\r\n    refreshStat() {\r\n        this.props.onChangeText();\r\n    }\r\n\r\n    renderAllItems() {\r\n        const recycle = this.props.itemsInRecycle\r\n\r\n        let itemsDOM = [];\r\n        for (let item in recycle) {\r\n            itemsDOM.push(this.renderItem(recycle[item].deleteTime, recycle[item].title, recycle[item].deletedPhrase, recycle[item].textLength))\r\n        }\r\n        return itemsDOM\r\n    }\r\n\r\n    renderItem(key, title, time, length) {\r\n        return (\r\n            <RecycleItem keyProp={key} title={title} time={time} length={length} onChangeInRecycle={this.refreshRecycle} onChangeText={this.refreshStat}/>\r\n        )\r\n    }\r\n\r\n    renderClearAllButton() {\r\n        return (Object.keys(this.props.itemsInRecycle).length !== 0 ?\r\n        <Button type='text' color='red' onClick={this.clearAll} text='очистить корзину' alt='clear recycle bin button'/> : null)\r\n    }\r\n\r\n    clearAll() {\r\n        newLocalStorage.loadTo('recycle', {})\r\n        this.refreshRecycle()\r\n    }\r\n\r\n    render() {\r\n        let title = 'Корзина'\r\n        if (Object.keys(this.props.itemsInRecycle).length === 0) {\r\n            title = title.concat(' пуста')\r\n        }\r\n\r\n        return(\r\n            <div className='recycle-bin' onMouseLeave={this.closeAfterMouseLeaving} onMouseEnter={this.stopClosing}>\r\n                <PopupTitle title={title}/>\r\n                <ButtonClosePopup classToClose='recycle-bin'/>\r\n                {this.renderAllItems()}\r\n                {this.renderClearAllButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecycleBin;","D:\\FrontEnd\\06-text-counter\\src\\components\\Button\\Button.js",["204"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ButtonClosePopup\\ButtonClosePopup.js",["205"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './button-close-popup.scss'\r\nimport closeIcon from '../../images/close.svg'\r\n\r\nclass ButtonClosePopup extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            type: this.props.type\r\n        };\r\n\r\n        this.close = this.close.bind(this)\r\n\r\n    }\r\n\r\n    close() {\r\n        document.querySelector(`.${this.props.classToClose}`).classList.remove(`${this.props.classToClose}_active`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={this.close} className='button-close-popup'>\r\n                <img src={closeIcon} alt=\"close\" />\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ButtonClosePopup;","D:\\FrontEnd\\06-text-counter\\src\\components\\Popup\\Popup.js",["206"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ButtonClosePopup from '../ButtonClosePopup/ButtonClosePopup';\r\nimport PopupTitle from '../PopupTitle/PopupTitle';\r\n\r\nimport './popup.scss'\r\n\r\nclass Popup extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='popup'>\r\n                <PopupTitle title={this.props.title}/>\r\n                <ButtonClosePopup classToClose='popup' />\r\n                {this.props.content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Popup;","D:\\FrontEnd\\06-text-counter\\src\\components\\AboutAuthor\\AboutAuthor.js",["207"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './about-author.scss'\r\nimport avatar from '../../images/avatar.jpg';\r\n\r\n\r\n\r\nfunction AboutAuthor() {\r\n\r\n    return(\r\n        <div className='about-author'>\r\n            <img className='about-author__avatar' src={avatar} alt=\"Фото автора\" />\r\n            <h1 className='about-author__title'> Александр Афанасенко </h1>\r\n            <h2 className='about-author__subtitle'> Junior Frontend-разработчик </h2>\r\n            <a href=\"./\"><p className='footer__text'>Главная</p></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutAuthor;","D:\\FrontEnd\\06-text-counter\\src\\js\\api.js",[],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolButton\\ToolButton.js",["208"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tool-button.sass'\r\n\r\nclass ToolButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        let className = 'tool-button'\r\n        let functionToAction = null\r\n        if (this.props.isActive === true) {\r\n            className = 'tool-button tool-button_active'\r\n            functionToAction = this.props.onClick\r\n        } \r\n\r\n        return(\r\n            <button className={className}>\r\n                <img className='tool-button__icon'\r\n                    onClick={functionToAction}\r\n                    src={this.props.icon} \r\n                    alt={this.props.type}>\r\n                </img>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolButton;","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolCopy\\ToolCopy.js",["209"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport copyIcon from '../../images/copy_icon.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\n\r\nclass ToolCopy extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.copyTextArea = this.copyTextArea.bind(this); //это требуется чтобы не потерять котекст\r\n        this.state = {};\r\n    }\r\n\r\n    copyTextArea(event) {\r\n        const text = document.querySelector('.text__input').value\r\n        navigator.clipboard.writeText(text);\r\n        showPopupMessage(event.clientX, event.clientY, 'Скопировано в буфер', 'green')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToolButton \r\n                type='copy'\r\n                icon={copyIcon}\r\n                isActive={this.props.isActive}\r\n                onClick={this.copyTextArea}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolCopy;","D:\\FrontEnd\\06-text-counter\\src\\reportWebVitals.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToggleTheme\\ToggleTheme.js",["210"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport darkThemeIcon from '../../images/darktheme_icon.svg'\r\nimport lightThemeIcon from '../../images/lighttheme_icon.svg'\r\n\r\nimport { ThemeContext } from '../../contexts/ThemeContext'\r\n\r\nfunction ToggleTheme(props) {\r\n\r\n    const themeData = React.useContext(ThemeContext)\r\n    let icon\r\n    themeData.id === 0 ? icon = darkThemeIcon : icon = lightThemeIcon\r\n\r\n    function toggle() {\r\n        themeData.id === 0 ? props.onChangeTheme('dark') : props.onChangeTheme('light')  \r\n    }\r\n\r\n    return(\r\n        <ToolButton \r\n            type='toggle theme'\r\n            icon={icon}\r\n            isActive = {true}\r\n            onClick={toggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ToggleTheme;","D:\\FrontEnd\\06-text-counter\\src\\contexts\\ThemeContext.js",[],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\themeClassName.js",[],{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"215","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":18},{"ruleId":"211","severity":1,"message":"216","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":20},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"217","replacedBy":"221"},{"ruleId":"219","replacedBy":"222"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"223","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":19},{"ruleId":"211","severity":1,"message":"224","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"225","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":12},{"ruleId":"211","severity":1,"message":"226","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":21},{"ruleId":"211","severity":1,"message":"227","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":18},{"ruleId":"211","severity":1,"message":"228","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":21},{"ruleId":"211","severity":1,"message":"229","line":10,"column":8,"nodeType":"213","messageId":"214","endLine":10,"endColumn":18},{"ruleId":"211","severity":1,"message":"230","line":13,"column":8,"nodeType":"213","messageId":"214","endLine":13,"endColumn":13},{"ruleId":"211","severity":1,"message":"226","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":21},{"ruleId":"211","severity":1,"message":"228","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":21},{"ruleId":"211","severity":1,"message":"231","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":20},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"217","replacedBy":"232"},{"ruleId":"219","replacedBy":"233"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"217","replacedBy":"234"},{"ruleId":"219","replacedBy":"235"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"215","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":18},{"ruleId":"211","severity":1,"message":"216","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":20},{"ruleId":"211","severity":1,"message":"236","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":17},{"ruleId":"211","severity":1,"message":"237","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":16},{"ruleId":"211","severity":1,"message":"238","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"239","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":21},{"ruleId":"211","severity":1,"message":"229","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":18},{"ruleId":"211","severity":1,"message":"240","line":11,"column":7,"nodeType":"213","messageId":"214","endLine":11,"endColumn":22},{"ruleId":"217","replacedBy":"241"},{"ruleId":"219","replacedBy":"242"},{"ruleId":"217","replacedBy":"243"},{"ruleId":"219","replacedBy":"244"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"245","severity":1,"message":"246","line":80,"column":96,"nodeType":"213","messageId":"247","endLine":80,"endColumn":110},{"ruleId":"217","replacedBy":"248"},{"ruleId":"219","replacedBy":"249"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"250","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":18},{"ruleId":"211","severity":1,"message":"251","line":59,"column":13,"nodeType":"213","messageId":"214","endLine":59,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'EditButton' is defined but never used.","'PopupMessage' is defined but never used.","no-native-reassign",["252"],"no-negated-in-lhs",["253"],["252"],["253"],"'MainContent' is defined but never used.","'useEffect' is defined but never used.","'Stat' is defined but never used.","'TextGenerator' is defined but never used.","'headerLogo' is defined but never used.","'RecycleButton' is defined but never used.","'RecycleBin' is defined but never used.","'Popup' is defined but never used.","'LocalStorage' is defined but never used.",["252"],["253"],["252"],["253"],"'ToolPaste' is defined but never used.","'ToolCopy' is defined but never used.","'ToolClear' is defined but never used.","'RecoverButton' is defined but never used.","'newLocalStorage' is assigned a value but never used.",["252"],["253"],["252"],["253"],"no-self-assign","'currentMinutes' is assigned to itself.","selfAssignment",["252"],["253"],"'alphabet' is defined but never used.","'showPopupFunc' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]