[{"D:\\FrontEnd\\06-text-counter\\src\\components\\Text\\Text.js":"1","D:\\FrontEnd\\06-text-counter\\src\\App.js":"2","D:\\FrontEnd\\06-text-counter\\src\\components\\Main\\Main.js":"3","D:\\FrontEnd\\06-text-counter\\src\\components\\Header\\Header.js":"4","D:\\FrontEnd\\06-text-counter\\src\\components\\Stat\\Stat.js":"5","D:\\FrontEnd\\06-text-counter\\src\\components\\Footer\\Footer.js":"6","D:\\FrontEnd\\06-text-counter\\src\\js\\constants.js":"7","D:\\FrontEnd\\06-text-counter\\src\\components\\PopupMessage\\PopupMessage.js":"8","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolPaste\\ToolPaste.js":"9","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolBar\\ToolBar.js":"10","D:\\FrontEnd\\06-text-counter\\src\\js\\localStorage.js":"11","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\rightWord.js":"12","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolClear\\ToolClear.js":"13","D:\\FrontEnd\\06-text-counter\\src\\index.js":"14","D:\\FrontEnd\\06-text-counter\\src\\components\\TextGenerator\\TextGenerator.js":"15","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits.js":"16","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolButton\\ToolButton.js":"17","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolCopy\\ToolCopy.js":"18","D:\\FrontEnd\\06-text-counter\\src\\reportWebVitals.js":"19","D:\\FrontEnd\\06-text-counter\\src\\components\\ToggleTheme\\ToggleTheme.js":"20","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\themeClassName.js":"21","D:\\FrontEnd\\06-text-counter\\src\\components\\About\\About.js":"22","D:\\FrontEnd\\06-text-counter\\src\\js\\aboutData.js":"23","D:\\FrontEnd\\06-text-counter\\src\\components\\Error\\Error.js":"24","D:\\FrontEnd\\06-text-counter\\src\\components\\Button\\Button.js":"25","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\themeClassNameGen.js":"26","D:\\FrontEnd\\06-text-counter\\src\\redux\\themeReducer.js":"27","D:\\FrontEnd\\06-text-counter\\src\\redux\\types.js":"28","D:\\FrontEnd\\06-text-counter\\src\\redux\\actions.js":"29","D:\\FrontEnd\\06-text-counter\\src\\redux\\rootReducer.js":"30"},{"size":831,"mtime":1617041492110,"results":"31","hashOfConfig":"32"},{"size":1163,"mtime":1617043215161,"results":"33","hashOfConfig":"32"},{"size":820,"mtime":1617041449369,"results":"34","hashOfConfig":"32"},{"size":1397,"mtime":1617039815946,"results":"35","hashOfConfig":"32"},{"size":1884,"mtime":1617040546311,"results":"36","hashOfConfig":"32"},{"size":2604,"mtime":1617041477438,"results":"37","hashOfConfig":"32"},{"size":288,"mtime":1617039815989,"results":"38","hashOfConfig":"32"},{"size":561,"mtime":1617041443714,"results":"39","hashOfConfig":"32"},{"size":1495,"mtime":1617041831110,"results":"40","hashOfConfig":"32"},{"size":1695,"mtime":1617041907111,"results":"41","hashOfConfig":"32"},{"size":663,"mtime":1617039815989,"results":"42","hashOfConfig":"32"},{"size":1014,"mtime":1609175979268,"results":"43","hashOfConfig":"32"},{"size":913,"mtime":1617041978763,"results":"44","hashOfConfig":"32"},{"size":713,"mtime":1617043301951,"results":"45","hashOfConfig":"32"},{"size":1880,"mtime":1617039815953,"results":"46","hashOfConfig":"32"},{"size":868,"mtime":1609749608018,"results":"47","hashOfConfig":"32"},{"size":808,"mtime":1617039815955,"results":"48","hashOfConfig":"32"},{"size":1141,"mtime":1617041793879,"results":"49","hashOfConfig":"32"},{"size":375,"mtime":1616955719435,"results":"50","hashOfConfig":"51"},{"size":928,"mtime":1617042679057,"results":"52","hashOfConfig":"32"},{"size":239,"mtime":1617039815990,"results":"53","hashOfConfig":"32"},{"size":2417,"mtime":1617042466939,"results":"54","hashOfConfig":"32"},{"size":2136,"mtime":1617042401681,"results":"55","hashOfConfig":"32"},{"size":1040,"mtime":1617040769042,"results":"56","hashOfConfig":"32"},{"size":970,"mtime":1617039815935,"results":"57","hashOfConfig":"32"},{"size":206,"mtime":1617039815990,"results":"58","hashOfConfig":"32"},{"size":517,"mtime":1617043164470,"results":"59","hashOfConfig":"32"},{"size":42,"mtime":1617039815992,"results":"60","hashOfConfig":"32"},{"size":126,"mtime":1617039815991,"results":"61","hashOfConfig":"32"},{"size":166,"mtime":1617039815991,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},"w5mkva",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"j9loub",{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"D:\\FrontEnd\\06-text-counter\\src\\components\\Text\\Text.js",["137"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './text.scss'\r\n\r\nimport { themeClassNameGen } from '../../js/utilits/themeClassNameGen';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Text(props) {\r\n\r\n    const inputClassName = themeClassNameGen(props.theme, 'text__input')\r\n\r\n    function sendTextToStatCount() {\r\n        props.onChangeText(document.querySelector('.text__input').value)\r\n    }\r\n\r\n    return(\r\n        <div className='text'>\r\n            <textarea onChange={sendTextToStatCount}\r\n                    className={inputClassName} \r\n                    type=\"text\" \r\n                    placeholder=\"Ваш текст\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToData = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToData)(Text);",["138","139"],"D:\\FrontEnd\\06-text-counter\\src\\App.js",["140"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Main\\Main.js",["141","142"],"D:\\FrontEnd\\06-text-counter\\src\\components\\Header\\Header.js",["143","144"],"import React from 'react';\r\nimport Stat from '../Stat/Stat';\r\nimport './header.scss'\r\nimport TextGenerator from '../TextGenerator/TextGenerator';\r\nimport headerLogo from '../../images/logo.svg';\r\nimport headerLogo_dark from '../../images/logo_dark.svg';\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { themeClassNameGen } from '../../js/utilits/themeClassNameGen';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Header(props) {\r\n\r\n    const logoImport = props.theme === 'light' ? headerLogo : headerLogo_dark\r\n    const classNameByTheme = themeClassNameGen(props.theme, 'header')\r\n\r\n    if (props.onlyLogo) { \r\n        return(\r\n            <header className={classNameByTheme}>\r\n                <Link to={`/`}><img className='header__logo' alt='app logo' src={logoImport} /></Link>\r\n            </header>\r\n        )\r\n    } else {\r\n        return(\r\n            <header className={classNameByTheme}>\r\n                <Link to={`/`}><img className='header__logo' alt='app logo' src={logoImport} /></Link>\r\n                <Stat textValue={props.textValue} />\r\n                <TextGenerator onChangeText={props.onChangeText}/>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header)","D:\\FrontEnd\\06-text-counter\\src\\components\\Stat\\Stat.js",["145"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stat.scss'\r\nimport '../../styles/main.scss'\r\nimport { rightWord } from '../../js/utilits/rightWord'\r\nimport { themeClassNameGen } from '../../js/utilits/themeClassNameGen';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Stat(props) {\r\n\r\n    const numbersClassName = themeClassNameGen(props.theme, 'stat__number')\r\n\r\n    function symbolsCount() {\r\n        const text = props.textValue\r\n        return text.length\r\n    }\r\n\r\n    function wordsCount() {\r\n        const paragraphSymbol = /\\n/g\r\n        const text = props.textValue.toLowerCase().replace(paragraphSymbol, ' ')\r\n        const words = text.split(' ').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return words.length      \r\n    }\r\n\r\n    function paragraphsCount() {\r\n        const text = props.textValue\r\n        const paragraphs = text.split('\\n').filter((item) => { //split делает массив из строк разделенных ' '\r\n            return item !== ''  //filter создает новый массив убирая из старого пустые строки\r\n        })\r\n        return paragraphs.length      \r\n    }\r\n\r\n    return(\r\n        <div className='stat'>\r\n            <p className={numbersClassName}>{rightWord(symbolsCount(), 'знак')}</p>\r\n            <p className={numbersClassName}>{rightWord(wordsCount(), 'слово')}</p>\r\n            <p className={numbersClassName}>{rightWord(paragraphsCount(), 'абзац')}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Stat);","D:\\FrontEnd\\06-text-counter\\src\\components\\Footer\\Footer.js",[],"D:\\FrontEnd\\06-text-counter\\src\\js\\constants.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\PopupMessage\\PopupMessage.js",["146"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolPaste\\ToolPaste.js",["147"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport pasteIconLight from '../../images/paste_icon_light.svg'\r\nimport pasteIconDark from '../../images/paste_icon_dark.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { popupColors } from '../../js/constants';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ToolPaste(props) {\r\n   \r\n    let pasteIcon\r\n    props.theme === 'light' ? pasteIcon = pasteIconLight : pasteIcon = pasteIconDark\r\n\r\n    function pasteInTextArea(event) {\r\n\r\n        navigator.clipboard.readText()\r\n        .then(text => {\r\n            document.querySelector('.text__input').value = text\r\n            sendTextToStatCount(text)\r\n        }).then(() => {\r\n            if (document.querySelector('.text__input').value.length === 0) {\r\n                console.log(popupColors.red)\r\n                showPopupMessage(event.clientX, event.clientY, 'ошибка, возможно в буфере находится не текст', popupColors.red)\r\n            }\r\n        })\r\n    }\r\n    \r\n    function sendTextToStatCount(text) {\r\n        props.onChangeText(text)\r\n    }\r\n\r\n    return (\r\n    <ToolButton \r\n        type='paste'\r\n        icon={pasteIcon}\r\n        isActive={props.isActive}\r\n        onClick={pasteInTextArea}\r\n    />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolPaste);","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolBar\\ToolBar.js",["148"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PopupMessage from '../PopupMessage/PopupMessage';\r\nimport ToolPaste from '../ToolPaste/ToolPaste';\r\nimport ToolCopy from '../ToolCopy/ToolCopy';\r\nimport ToolClear from '../ToolClear/ToolClear';\r\nimport ToggleTheme from '../ToggleTheme/ToggleTheme';\r\nimport './toolbar.scss'\r\n\r\nfunction ToolBar(props) {\r\n\r\n    function onChangeText(text) {\r\n        props.onChangeText(text); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    function onChangeInRecycle() {\r\n        console.log('toolbar on change in recycle')\r\n        props.onChangeInRecycle(); //эта строка отправляет данные поля ввода в пропсы maincontent\r\n    }\r\n\r\n    function onPopupInit(popupContent) {\r\n        props.onPopupInit(popupContent)\r\n    }\r\n\r\n    let isTextAreaHasContent = true\r\n\r\n    let isClibBoardHasContent = true\r\n    if (props.textValue.length === 0) {\r\n        isTextAreaHasContent = false\r\n    }\r\n    navigator.clipboard.readText()\r\n    .then(text => {\r\n        if (text.length === 0) {\r\n            isClibBoardHasContent = false\r\n        }    \r\n    })\r\n    \r\n    return(\r\n        <div className='toolbar'>\r\n            <ToggleTheme />\r\n            <ToolCopy isActive={isTextAreaHasContent} onChangeText={onChangeText}/>\r\n            <ToolPaste isActive={isClibBoardHasContent} onChangeText={onChangeText}/>\r\n            <ToolClear isActive={isTextAreaHasContent} onChangeText={onChangeText} onChangeInRecycle={onChangeInRecycle} onPopupInit={onPopupInit}/>\r\n            <PopupMessage />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolBar;","D:\\FrontEnd\\06-text-counter\\src\\js\\localStorage.js",[],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\rightWord.js",[],["149","150"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolClear\\ToolClear.js",["151"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport deleteIconLight from '../../images/delete_icon_light.svg'\r\nimport deleteIconDark from '../../images/delete_icon_dark.svg'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ToolClear(props) {\r\n\r\n    let deleteIcon\r\n    props.theme === 'light' ? deleteIcon = deleteIconLight : deleteIcon = deleteIconDark\r\n\r\n    function clearTextArea() {\r\n        document.querySelector('.text__input').value = ''\r\n        props.onChangeText('');\r\n    }\r\n\r\n    return (\r\n        <ToolButton \r\n            type='clear text area'\r\n            icon={deleteIcon}\r\n            isActive={props.isActive}\r\n            onClick={clearTextArea}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolClear);","D:\\FrontEnd\\06-text-counter\\src\\index.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\TextGenerator\\TextGenerator.js",["152","153"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport fishicon from '../../images/fish.svg'\r\nimport axios from 'axios'\r\nimport Button from '../Button/Button';\r\n// import { ThemeContext } from '../../contexts/ThemeContext'\r\n\r\n// const api = (template) => new Api(template);\r\nconst API = 'https://fish-text.ru/get?type=paragraph&number=10'\r\n\r\nclass TextGenerator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n        this.textGen = this.textGen.bind(this)\r\n        this.editText = this.editText.bind(this)\r\n        this.sendTextToStatCount = this.sendTextToStatCount.bind(this)\r\n    }\r\n\r\n    sendTextToStatCount(text) {\r\n        this.props.onChangeText(text)\r\n    }\r\n    \r\n    editText(text) {\r\n        const textToReplace = /\\\\n\\\\n/g\r\n        let editedText = text.replace(textToReplace, '\\n')\r\n        return editedText\r\n    }\r\n    \r\n    textGen() {\r\n        axios.get(API)\r\n            .then((res) => {\r\n                const editedText = this.editText(res.data.text)\r\n                document.querySelector('.text__input').value = document.querySelector('.text__input').value + editedText\r\n                this.sendTextToStatCount(document.querySelector('.text__input').value)\r\n            })\r\n            .catch(() => {\r\n                console.log('Error in server request')\r\n                // showPopupMessage(event.clientX, event.clientY, 'Ошибка запроса к серверу fish-text.ru', 'red')\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button \r\n                type='main' \r\n                color='red' \r\n                onClick={this.textGen} \r\n                icon={fishicon} \r\n                alt='fish text button'\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextGenerator;","D:\\FrontEnd\\06-text-counter\\src\\js\\utilits.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToolButton\\ToolButton.js",["154"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tool-button.sass'\r\n\r\nclass ToolButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        let className = 'tool-button'\r\n        let functionToAction = null\r\n        if (this.props.isActive === true) {\r\n            className = 'tool-button tool-button_active'\r\n            functionToAction = this.props.onClick\r\n        } \r\n\r\n        return(\r\n            <button className={className} onClick={functionToAction}>\r\n                <img className='tool-button__icon'\r\n                    src={this.props.icon} \r\n                    alt={this.props.type}>\r\n                </img>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolButton;","D:\\FrontEnd\\06-text-counter\\src\\components\\ToolCopy\\ToolCopy.js",["155"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport copyIconLight from '../../images/copy_icon_light.svg'\r\nimport copyIconDark from '../../images/copy_icon_dark.svg'\r\nimport { showPopupMessage } from '../../js/utilits'\r\nimport ToolButton from '../ToolButton/ToolButton';\r\nimport { popupColors } from '../../js/constants';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ToolCopy(props) {\r\n\r\n    let copyIcon\r\n    props.theme === 'light' ? copyIcon = copyIconLight : copyIcon = copyIconDark\r\n\r\n    function copyTextArea(event) {\r\n        const text = document.querySelector('.text__input').value\r\n        navigator.clipboard.writeText(text);\r\n        showPopupMessage(event.clientX, event.clientY, 'Скопировано в буфер', popupColors.green)\r\n    }\r\n\r\n    return (\r\n        <ToolButton \r\n            type='copy'\r\n            icon={copyIcon}\r\n            isActive={props.isActive}\r\n            onClick={copyTextArea}\r\n        />\r\n        )\r\n        \r\n}\r\n    \r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolCopy);","D:\\FrontEnd\\06-text-counter\\src\\reportWebVitals.js",[],["156","157"],"D:\\FrontEnd\\06-text-counter\\src\\components\\ToggleTheme\\ToggleTheme.js",["158","159"],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\themeClassName.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\About\\About.js",["160"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './about.scss'\r\nimport avatarAuthor from '../../images/avatar.jpg';\r\nimport avatarProject from '../../images/logo_avatar.svg';\r\nimport { themeClassNameGen } from '../../js/utilits/themeClassNameGen';\r\nimport { aboutData } from '../../js/aboutData';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction About(props) {\r\n\r\n    const data = aboutData[props.content]\r\n    let avatar\r\n    props.content === 'about-author' ? avatar = avatarAuthor : avatar = avatarProject\r\n\r\n    return(\r\n        <div className={themeClassNameGen(props.theme, 'about')}>\r\n            <img className='about__avatar' src={avatar} alt=\"Фото автора\" />\r\n            <div className='about__text-container'>\r\n                <h1 className={themeClassNameGen(props.theme, 'about__title')}>{data.title}</h1>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__subtitle')}>{data.subtitle}</h2>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__mini-subtitle')}>{data.minisubtitle1}</h2>\r\n                <p className={themeClassNameGen(props.theme, 'about__text')}>{data.text1}</p>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__mini-subtitle')}>{data.minisubtitle2}</h2>\r\n                <p className={themeClassNameGen(props.theme, 'about__text')}>{data.text2}</p>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__mini-subtitle')}>{data.minisubtitle3}</h2>\r\n                <p className={themeClassNameGen(props.theme, 'about__text')}>{data.text3}</p>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__mini-subtitle')}>{data.minisubtitle4}</h2>\r\n                <p className={themeClassNameGen(props.theme, 'about__text')}>{data.text4}</p>\r\n                <h2 className={themeClassNameGen(props.theme, 'about__mini-subtitle')}>{data.minisubtitle5}</h2>\r\n                <p className={themeClassNameGen(props.theme, 'about__text')}>{data.text5}</p>\r\n                <Link to=\"/\" className='footer__link'>\r\n                    <p className={themeClassNameGen(props.theme, 'footer__text')}>назад</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(About);","D:\\FrontEnd\\06-text-counter\\src\\js\\aboutData.js",[],"D:\\FrontEnd\\06-text-counter\\src\\components\\Error\\Error.js",["161"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './about.scss'\r\nimport errorImage from '../../images/error_avatar.svg';\r\nimport { themeClassName } from '../../js/utilits/themeClassName';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Error(props) {\r\n\r\n    return(\r\n        <div className={themeClassName(props.theme, 'about')}>\r\n            <img className='about__avatar' src={errorImage} alt=\"404\" />\r\n            <div className='about__text-container'>\r\n                <h1 className={themeClassName(props.theme, 'about__title')}>Такой страницы не существует</h1>\r\n                <Link to=\"/\" className='footer__link'>\r\n                    <p className={themeClassName(props.theme, 'footer__text')}>на главную</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.theme.theme\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Error);","D:\\FrontEnd\\06-text-counter\\src\\components\\Button\\Button.js",["162"],"D:\\FrontEnd\\06-text-counter\\src\\js\\utilits\\themeClassNameGen.js",[],"D:\\FrontEnd\\06-text-counter\\src\\redux\\themeReducer.js",[],"D:\\FrontEnd\\06-text-counter\\src\\redux\\types.js",[],"D:\\FrontEnd\\06-text-counter\\src\\redux\\actions.js",[],"D:\\FrontEnd\\06-text-counter\\src\\redux\\rootReducer.js",[],{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"171","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"172","line":7,"column":10,"nodeType":"165","messageId":"166","endLine":7,"endColumn":24},{"ruleId":"163","severity":1,"message":"173","line":8,"column":10,"nodeType":"165","messageId":"166","endLine":8,"endColumn":15},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"167","replacedBy":"174"},{"ruleId":"169","replacedBy":"175"},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"176","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"167","replacedBy":"177"},{"ruleId":"169","replacedBy":"178"},{"ruleId":"163","severity":1,"message":"179","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-native-reassign",["180"],"no-negated-in-lhs",["181"],"'useEffect' is defined but never used.","'themeClassName' is defined but never used.","'Route' is defined but never used.",["180"],["181"],"'showPopupMessage' is defined but never used.",["180"],["181"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]